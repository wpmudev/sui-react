{"version":3,"file":"ui-select-stories-ReactSelect-stories.f836f5ef.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA","sources":["webpack://wpmudev-sui/./packages/ui/select/stories/tabs/Examples/States.mdx","webpack://wpmudev-sui/./packages/ui/select/stories/tabs/Examples/AsyncSelect.tsx","webpack://wpmudev-sui/./packages/ui/select/stories/tabs/Examples/Types.mdx","webpack://wpmudev-sui/./packages/ui/select/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {options} from \"../TabExamples.mdx\";\nimport {Select} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const disabledCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const options = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n\t  },\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n    },\n  ]\n\nexport const Example = () => {\n    return <Select isDisabled={true} id=\"disabled\" options={options} />\n}`;\nexport const smallCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const options = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n\t  },\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n    },\n  ]\n\nexport const Example = () => {\n    return <Select isSmall={true} id=\"small\" options={options} />\n}`;\nexport const errorCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const options = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n\t  },\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n    },\n  ]\n\nexport const Example = () => {\n    return <Select isError={true} id=\"error\" options={options} />\n}`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"isDisabled={true}\"\n        }), \" to make the select non-interactive\"]\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isDisabled: true,\n          id: \"disabled\",\n          options: options\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: disabledCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Small\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the prop \", _jsx(Code, {\n            small: true,\n            children: \"isSmall={true}\"\n          }), \" for smaller version of\\nthe select\"]\n        })\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isSmall: true,\n          id: \"small\",\n          options: options\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: smallCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Error\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the prop \", _jsx(Code, {\n            small: true,\n            children: \"isError={true}\"\n          }), \" to display the select\\nin error state\"]\n        })\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isError: true,\n          id: \"error\",\n          options: options\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: errorCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Select } from \"../../../src\";\nimport dedent from \"dedent\";\nexport const AsyncSelectCode = dedent `\nimport { SelectBaseProps, Select } from \"@wpmudev/sui-select\"\nimport { FormField } from \"@wpmudev/sui-form-field\"\n\nconst AsyncSelect: React.FC<CustomSelectComponentProps> = ({}) => {\n    \n    const perPage = 10;\n\n    return (\n            <Select\n                _dropdownProps={{\n                    type: \"select\",\n                    isAsync: true,\n                    allowSearch: true,\n                    searchPlaceholder: \"Search...\",\n                    asyncOptions: {\n                        perPage,\n                    },\n                    getOptions: async (\n                        search: string,\n                        { page }: any,\n                        prevLoadedItems = [],\n                    ) => {\n                        const skip = page * perPage - 10\n                        const items: SelectBaseProps[\"options\"] = []\n                        const baseAPI = \"https://dummyjson.com/products/search\"\n                        let total = 0\n\n                        await fetch(\n                            baseAPI + \"?limit=\" + perPage + \"&skip=\" + skip + \"&total=50&q=\" + search,\n                        )\n                            .then((res) => res.json())\n                            .then((result) => {\n                                total = result.total\n\n                                result.products.forEach((item: any) => {\n                                    items.push({\n                                        id: item?.id,\n                                        label: item?.title,\n                                        isSelected: false,\n                                    })\n                                })\n                            })\n\n                        return {\n                            items,\n                            hasMore: [...items, ...prevLoadedItems].length < 100,\n                        }\n                    },\n                }}\n            />\n    )\n} \n`;\nexport const AsyncSelect = ({}) => {\n    const perPage = 10;\n    return (_jsx(Select, { _dropdownProps: {\n            type: \"select\",\n            isAsync: true,\n            allowSearch: true,\n            searchPlaceholder: \"Search...\",\n            asyncOptions: {\n                perPage,\n            },\n            getOptions: async (search, { page }, prevLoadedItems = []) => {\n                const skip = page * perPage - 10;\n                const items = [];\n                const baseAPI = `https://dummyjson.com/products/search`;\n                let total = 0;\n                await fetch(`${baseAPI}?limit=${perPage}&skip=${skip}&total=50&q=${search}`)\n                    .then((res) => res.json())\n                    .then((result) => {\n                    total = result.total;\n                    result.products.forEach((item) => {\n                        items.push({\n                            id: item?.id,\n                            label: item?.title,\n                            isSelected: false,\n                        });\n                    });\n                });\n                return {\n                    items,\n                    hasMore: [...items, ...prevLoadedItems].length < 100,\n                };\n            },\n        } }));\n};\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {options} from \"../TabExamples.mdx\";\nimport {Select} from \"../../../src\";\nimport {AsyncSelect, AsyncSelectCode} from \"./AsyncSelect\";\nimport dedent from \"dedent\";\nexport const searchOptions = [{\n  icon: \"settings\",\n  id: \"option-1\",\n  label: \"Option 1 is the option.\",\n  isSelected: false,\n  searchLabel: \"Option 1\"\n}, {\n  icon: \"settings\",\n  id: \"option-2\",\n  label: \"Option 2\",\n  isSelected: false,\n  searchLabel: \"Option 1\"\n}, {\n  icon: \"settings\",\n  id: \"option-3\",\n  label: \"Option 3\",\n  isSelected: false,\n  searchLabel: \"Option 1\"\n}];\nexport const variableOptions = [{\n  id: \"view-form\",\n  label: \"View form\",\n  props: {\n    variable: \"{view_form}\",\n    description: \"Short description\"\n  }\n}, {\n  id: \"edit-form\",\n  label: \"Edit form\",\n  props: {\n    variable: \"{edit_form}\",\n    description: \"Short description\"\n  }\n}, {\n  id: \"duplicate-form\",\n  label: \"Duplicate form\",\n  props: {\n    variable: \"{duplicate_form}\",\n    description: \"Short description\"\n  }\n}, {\n  id: \"delete-form\",\n  label: \"Delete form\",\n  props: {\n    variable: \"{delete_form}\",\n    description: \"Short description\"\n  }\n}];\nexport const variableCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const variableOptions = [\n    {\n      id: \"view-form\",\n      label: \"View form\",\n      props: {\n        variable: \"{view_form}\",\n        description: \"Short description\",\n      },\n    },\n    {\n      id: \"edit-form\",\n      label: \"Edit form\",\n      props: {\n        variable: \"{edit_form}\",\n        description: \"Short description\",\n      },\n    },\n    {\n      id: \"duplicate-form\",\n      label: \"Duplicate form\",\n      props: {\n        variable: \"{duplicate_form}\",\n        description: \"Short description\",\n      },\n    },\n    {\n      id: \"delete-form\",\n      label: \"Delete form\",\n      props: {\n        variable: \"{delete_form}\",\n        description: \"Short description\",\n      },\n    },\n  ]\n\n  export const Example = () => {\n    return <Select isCustomVar={true} options={variableOptions} />\n  }\n`;\nexport const smartSearchCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const searchOptions = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n      searchLabel: \"Option 1 is the option.\",\n    },\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n      searchLabel: \"Option 2\",\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n      searchLabel: \"Option 2\",\n    },\n  ]\n\nexport const Example = () => {\n    return <Select isSearchable={true} id=\"smart-search\" options={options} />\n}`;\nexport const multiSelectCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const options = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n\t  },\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n    },\n  ]\n\nexport const Example = () => {\n    return <Select isMultiSelect={true} id=\"multiselect\" options={options} label=\"Search...\" />\n}`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Smart Search\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"isSearchable={true}\"\n        }), \" to change the select to the samrt search variation\"]\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isSearchable: true,\n          id: \"smart-search\",\n          options: searchOptions,\n          label: \"Search...\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: smartSearchCode\n      }), _jsxs(\"p\", {\n        children: [\"Note that you need to add \", _jsx(Code, {\n          isSmall: true,\n          children: \"searchLabel\"\n        }), \" to each option, this is the value that will be looked for\"]\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Multiselect\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"isMultiSelect={true}\"\n        }), \" to allow for multiselection of the options\"]\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isMultiSelect: true,\n          id: \"multiselect\",\n          options: options\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: multiSelectCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Variable\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"isCustomVar={true}\"\n        }), \" to display a button icon on the right side to open the dropdown\"]\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          isCustomVar: true,\n          id: \"variable\",\n          options: variableOptions\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: variableCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Async options\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Using \", _jsx(Code, {\n          isSmall: small,\n          children: \"_dropdownProps\"\n        }), \" we can make asynchronous options list as follow:\"]\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(AsyncSelect, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: AsyncSelectCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*Import Variations*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Select} from \"../../src\";\nimport dedent from \"dedent\";\nimport States from \"./Examples/States.mdx\";\nimport Types from \"./Examples/Types.mdx\";\nexport const defaultCode = dedent`\n  import { Select } from \"@wpmudev/sui-select\";\n\n  export const options = [\n    {\n      icon: \"settings\",\n      id: \"option-1\",\n      label: \"Option 1 is the option.\",\n      isSelected: false,\n\t},\n    {\n      icon: \"settings\",\n      id: \"option-2\",\n      label: \"Option 2\",\n      isSelected: false,\n    },\n    {\n      icon: \"settings\",\n      id: \"option-3\",\n      label: \"Option 3\",\n      isSelected: false,\n    },\n  ]\n\n  export const Example = () => {\n    return <Select id=\"select-id\" options={options} />\n  }\n`;\nexport const options = [{\n  icon: \"settings\",\n  id: \"option-1\",\n  label: \"Option 1 is the option.\",\n  isSelected: false\n}, {\n  icon: \"settings\",\n  id: \"option-2\",\n  label: \"Option 2\",\n  isSelected: false\n}, {\n  icon: \"settings\",\n  id: \"option-3\",\n  label: \"Option 3\",\n  isSelected: false\n}];\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default form of the select component\"\n      }), _jsx(\"div\", {\n        className: \"sui-wrap sui-theme--light\",\n        style: {\n          marginBottom: 30\n        },\n        children: _jsx(Select, {\n          id: \"select-id\",\n          options: options\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: defaultCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      title: \"States & Types\",\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Types\",\n          value: \"types\",\n          children: _jsx(Types, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}