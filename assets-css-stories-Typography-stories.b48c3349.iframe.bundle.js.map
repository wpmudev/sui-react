{"version":3,"file":"assets-css-stories-Typography-stories.b48c3349.iframe.bundle.js","mappings":";;;AAiEA;;;;ACpDA;;ACFA;;;;ACEA;;;;ACAA;;;;ACAA","sources":["webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabHeadings.mdx","webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabBasics/Label.mdx","webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabBasics/Paragraph.mdx","webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabBasics/Tag.mdx","webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabBasics/Overline.mdx","webpack://wpmudev-sui/./packages/assets/css/stories/content/Typography/TabBasics/Helper.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview, Table} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    div: \"div\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Instead of applying heading styles directly to the tag name, we do it\\nthrough class names. This method is the safest when styling the content\\ncorrectly without jeopardizing the hierarchy and improving the\\nnavigation experience of our screen reader users.\"\n        })\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"In other words, a Heading 4 tag can use, without a problem, the Heading\\n2 styles if necessary to maintain the content hierarchy and\\nsimultaneously respect the design.\"\n        })\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Usage\",\n      contained: true,\n      border: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Add the \", _jsx(Code, {\n            children: \" sui-heading \"\n          }), \" block name to your text to give text\\nbasic heading styles, such as padding, letter spacing, and more. In\\naddition, use a modifier class such as \", _jsx(Code, {\n            children: \" sui-heading--* \"\n          }), \",\\nbeing the asterisk (*), any variable from \", _jsx(Code, {\n            children: \" h1 \"\n          }), \" to\", ' ', \"\\n\", _jsx(Code, {\n            children: \" h5 \"\n          }), \", to give your element a more specific decoration, like\\nfont size, line height, and weight.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"h1\", {\n          className: \"sui-heading sui-heading--h1\",\n          style: {\n            margin: 0\n          },\n          children: _jsx(_components.p, {\n            children: \"The Quick Brown Fox\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"html\",\n        children: dedent`\n\t\t<h1 class=\"sui-heading sui-heading--h1\">The Quick Brown Fox</h1>\n\t`\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Comparison Table\",\n      children: [_jsx(\"div\", {\n        className: \"csb-section__contained\",\n        style: {\n          marginBottom: 20\n        },\n        children: _jsx(\"p\", {\n          children: _jsx(_components.p, {\n            children: \"In this section, you can find the list of all headings available\\nwith a quick preview, their class names, and essential information\\nsuch as font size and weight.\"\n          })\n        })\n      }), _jsx(Preview, {\n        children: _jsx(Table, {\n          headers: ['Preview', 'Class Name', 'Font Size', 'Line Height'],\n          content: [{\n            columns: {\n              1: _jsx(_components.div, {\n                className: \"sui-wrap\",\n                children: _jsx(_components.h1, {\n                  className: \"sui-heading sui-heading--h1\",\n                  style: {\n                    margin: 0\n                  },\n                  children: \"H1\"\n                })\n              }),\n              2: _jsx(Code, {\n                children: \" sui-heading--h1 \"\n              }),\n              3: '40px',\n              4: '48px'\n            }\n          }, {\n            columns: {\n              1: _jsx(_components.div, {\n                className: \"sui-wrap\",\n                children: _jsx(_components.h1, {\n                  className: \"sui-heading sui-heading--h2\",\n                  style: {\n                    margin: 0\n                  },\n                  children: \"H2\"\n                })\n              }),\n              2: _jsx(Code, {\n                children: \" sui-heading--h2 \"\n              }),\n              3: '32px',\n              4: '40px'\n            }\n          }, {\n            columns: {\n              1: _jsx(_components.div, {\n                className: \"sui-wrap\",\n                children: _jsx(_components.h1, {\n                  className: \"sui-heading sui-heading--h3\",\n                  style: {\n                    margin: 0\n                  },\n                  children: \"H3\"\n                })\n              }),\n              2: _jsx(Code, {\n                children: \" sui-heading--h3 \"\n              }),\n              3: '24px',\n              4: '32px'\n            }\n          }, {\n            columns: {\n              1: _jsx(_components.div, {\n                className: \"sui-wrap\",\n                children: _jsx(_components.h1, {\n                  className: \"sui-heading sui-heading--h4\",\n                  style: {\n                    margin: 0\n                  },\n                  children: \"H4\"\n                })\n              }),\n              2: _jsx(Code, {\n                children: \" sui-heading--h4 \"\n              }),\n              3: '18px',\n              4: '32px'\n            }\n          }, {\n            columns: {\n              1: _jsx(_components.div, {\n                className: \"sui-wrap\",\n                children: _jsx(_components.h1, {\n                  className: \"sui-heading sui-heading--h5\",\n                  style: {\n                    margin: 0\n                  },\n                  children: \"H5\"\n                })\n              }),\n              2: _jsx(Code, {\n                children: \" sui-heading--h5 \"\n              }),\n              3: '16px',\n              4: '24px'\n            }\n          }]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\n<label class=\"sui-label\">\n\tThe quick brown fox jumps over the lazy dog.\n</label>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Usage\",\n    style: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Commonly use label in the form fields, adding the\", ' ', \"\\n\", _jsx(Code, {\n          children: \"sui-label\"\n        }), \" class name in any tag, but preferably\\nfollowing the proper content hierarchy.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(\"label\", {\n        className: \"sui-label\",\n        style: {\n          margin: 0,\n          marginBottom: 10\n        },\n        children: _jsx(_components.p, {\n          children: \"The quick brown fox jumps over the lazy dog.\"\n        })\n      })\n    }), _jsx(Snippet, {\n      language: \"html\",\n      children: sampleCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\n<p>The quick brown fox jumps over the lazy dog.</p>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Usage\",\n    style: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Since it is a base styling, we apply it directly to the paragraph\", ' ', \"\\n\", _jsx(Code, {\n          children: \"<p>\"\n        }), \" tag, which works the same way for the modifiers.\\nFor bold text, use the \", _jsx(Code, {\n          children: \"<strong>\"\n        }), \" or\", ' ', \"\\n\", _jsx(Code, {\n          children: \"<b>\"\n        }), \" tags; for italic text, use the\", ' ', \"\\n\", _jsx(Code, {\n          children: \"<i>\"\n        }), \" tag; while for small text, use the\", ' ', \"\\n\", _jsx(Code, {\n          children: \"<small>\"\n        }), \" tag, as shown in the example below.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: _jsx(_components.p, {\n          children: \"The quick brown fox jumps over the lazy dog.\"\n        })\n      })\n    }), _jsx(Snippet, {\n      language: \"html\",\n      children: sampleCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\n<span class=\"sui-tag\">\n\tThe quick brown fox jumps over the lazy dog.\n</span>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Usage\",\n    style: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Tags are used to highlight specific bits of information and warnings.\\nTo get that, add \", _jsx(Code, {\n          children: \"sui-tag\"\n        }), \" class name as shown in the\\nexample below.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(\"span\", {\n        className: \"sui-tag\",\n        style: {\n          margin: 0\n        },\n        children: _jsx(_components.p, {\n          children: \"The quick brown fox jumps over the lazy dog.\"\n        })\n      })\n    }), _jsx(Snippet, {\n      language: \"html\",\n      children: sampleCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\n<p class=\"sui-overline\">\n\tThe quick brown fox jumps over the lazy dog.\n</p>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Usage\",\n    style: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Another typography variation is the overline, a small uppercase text\\nprimarily used inside buttons. Add \", _jsx(Code, {\n          children: \"sui-overline\"\n        }), \" class name\\nto apply this typography style.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(\"p\", {\n        className: \"sui-overline\",\n        style: {\n          margin: 0\n        },\n        children: _jsx(_components.p, {\n          children: \"The quick brown fox jumps over the lazy dog.\"\n        })\n      })\n    }), _jsx(Snippet, {\n      language: \"html\",\n      children: sampleCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, Preview} from '@wpmudev/sui-docs';\nimport dedent from 'dedent';\nexport const sampleCode = dedent`\n<span class=\"sui-helper\">\n\tThe quick brown fox jumps over the lazy dog.\n</span>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Usage\",\n    style: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Commonly use helper in the form field, adding the\", ' ', \"\\n\", _jsx(Code, {\n          children: \"sui-helper\"\n        }), \" class name in any tag, but preferably\\nfollowing the proper content hierarchy.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(\"span\", {\n        className: \"sui-helper\",\n        style: {\n          margin: 0,\n          marginBottom: 10\n        },\n        children: _jsx(_components.p, {\n          children: \"The quick brown fox jumps over the lazy dog.\"\n        })\n      })\n    }), _jsx(Snippet, {\n      language: \"html\",\n      children: sampleCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}