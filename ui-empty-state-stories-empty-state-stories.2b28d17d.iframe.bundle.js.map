{"version":3,"file":"ui-empty-state-stories-empty-state-stories.2b28d17d.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;AAgCA;;;;;;;AAQA","sources":["webpack://wpmudev-sui/./packages/ui/empty-state/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {EmptyState} from \"../../src\";\nimport {Button} from \"@wpmudev/sui-button\";\nimport {Row} from \"@wpmudev/sui-grid\";\nimport SvgImage from \"../images/empty-state.svg\";\nimport dedent from \"dedent\";\nexport const sampleCode = dedent`\n    import SvgImage from \"./example-image.svg\"\n\n    <EmptyState logo={SvgImage}>\n        <Row>\n            <h3 className=\"sui-heading--h3\">This site has not yet been scanned.</h3>\n            <p>Defender watches and protects your login area for attackers trying to randomly guess login details for your site and locks them out after a set number of failed attempts.</p>\n        </Row>\n\n        <Row align={{ md: \"center\" }}>\n            <Button type=\"secondary\" color=\"blue\" isSmall={true}>\n                <>Primary</>\n            </Button>\n           <Button type=\"primary\" color=\"blue\" isSmall={true}>\n                <>Secondary</>\n            </Button>\n        </Row>\n    </EmptyState>\n\n`;\nexport const differentContentCode = dedent`\n    import SvgImage from \"./example-image.svg\"\n\n    <EmptyState logo={SvgImage}>\n       <h3 className=\"sui-heading--h3\">This page is not available yet</h3>\n    </EmptyState>\n\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"The default form of the EmptyState component\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(EmptyState, {\n          logo: SvgImage,\n          children: [_jsxs(Row, {\n            children: [_jsx(\"h3\", {\n              className: \"sui-heading--h3\",\n              children: \"This site has not yet been scanned.\"\n            }), _jsx(\"p\", {\n              children: \"\\tDefender watches and protects your login area for attackers trying to randomly guess login details for your site and locks them out after a set number of failed attempts.\\t\"\n            })]\n          }), _jsxs(Row, {\n            align: {\n              md: \"center\"\n            },\n            children: [_jsx(Button, {\n              type: \"secondary\",\n              color: \"blue\",\n              isSmall: true,\n              children: _jsx(_Fragment, {\n                children: \"Primary\"\n              })\n            }), _jsx(Button, {\n              type: \"primary\",\n              color: \"blue\",\n              isSmall: true,\n              children: _jsx(_Fragment, {\n                children: \"Secondary\"\n              })\n            })]\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      contained: true,\n      title: \"Different content\",\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(Code, {\n            small: true,\n            children: \"children\"\n          }), \" prop to change the content to fit\\nyour needs.\"]\n        })\n      }), _jsx(\"p\", {\n        children: \"In this exmpale the EmptyState only has a title\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(EmptyState, {\n          logo: SvgImage,\n          children: _jsx(\"h3\", {\n            className: \"sui-heading--h3\",\n            children: \"This page is not available yet\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: differentContentCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}