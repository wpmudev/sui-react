"use strict";(self.webpackChunkwpmudev_sui=self.webpackChunkwpmudev_sui||[]).push([[1073],{"./packages/ui/notification/stories/Notification.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Notification:()=>Notification_stories_Notification,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Notification_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/ui/notification/src/index.ts"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),docs_src=__webpack_require__("./packages/docs/src/index.ts"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),dedent=__webpack_require__("./node_modules/dedent/dist/dedent.js"),dedent_default=__webpack_require__.n(dedent);function _createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Hl,{packageName:"@wpmudev/sui-notification"}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Props",border:!0,children:[(0,jsx_runtime.jsx)(docs_src.Yb,{title:"id",type:"string",children:(0,jsx_runtime.jsx)("p",{children:"Unique ID for the notification"})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"title",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:"Title of the notification"})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"message",type:"React Node",defaultValue:"message",children:(0,jsx_runtime.jsx)("p",{children:" Description of the notification  "})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"action",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:" Enables the inclusion of interactive elements, like buttons, to facilitate immediate user actions within the notification   "})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"icon",type:"React Node",defaultValue:"Info",children:(0,jsx_runtime.jsx)("p",{children:" Custom icon besides the title   "})}),(0,jsx_runtime.jsxs)(docs_src.Yb,{title:"size",type:"string",children:[(0,jsx_runtime.jsx)("p",{children:" Size of the notification"}),(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsx)(_components.p,{children:"Allowed options:"}),(0,jsx_runtime.jsxs)(docs_src.aV,{children:[(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"sm"})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"lg"})})]})]})]}),(0,jsx_runtime.jsxs)(docs_src.Yb,{title:"variation",type:"string",children:[(0,jsx_runtime.jsx)("p",{children:"Size of the notification"}),(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsx)(_components.p,{children:"Allowed options:"}),(0,jsx_runtime.jsxs)(docs_src.aV,{children:[(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"info"})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"success"})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"warning"})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"error"})})]})]})]}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["The following props are only relevant for the Notifications added using\n",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:" useNotifications "})," hook"]})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isInline",type:"boolean",defaultValue:"true",children:(0,jsx_runtime.jsx)("p",{children:" Indicates if the notification is displayed inline "})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isDismissible",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsxs)("p",{children:[" When set to ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"true"}),", the notification will have a dismissing button  "]})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"timeout",type:"boolean",defaultValue:"5000",children:(0,jsx_runtime.jsx)("p",{children:" The amount of time (in ms) that should pass before automatically dismissing the notification.  "})})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"useNotifications Hook",contained:!0,style:{paddingTop:30,paddingBottom:30},children:[(0,jsx_runtime.jsxs)("p",{children:["The ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"useNotifications"})," hook facilitates dynamic addition and removal of Toast notifications."]}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",hideToggle:!0,children:dedent_default()`const { push, remove } = useNotifcations()`}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:{content:"push",small:!1},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:" A function that displays a new toast notification on the screen, it accepts one parameter:"}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"options*",type:"object",children:(0,jsx_runtime.jsx)("p",{children:"The object keys represent the properties of the Notification component as explained above. "})})]}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:{content:"remove",small:!1},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:" A function to dismiss a notification with a specific id, it has one parameter:"}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"id*",type:"string",children:(0,jsx_runtime.jsx)("p",{children:"Id of the notification to dismiss"})})]})]})]})}const TabCode=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};var button_src=__webpack_require__("./packages/ui/button/src/index.ts");const InfoCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      variation="info"
   />
`;function Info_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{variation:"info",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:InfoCode})]})}const Info=function Info_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Info_createMdxContent,props)})):Info_createMdxContent()},SuccessCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      variation="success"
   />
`;function Success_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{variation:"success",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:SuccessCode})]})}const Success=function Success_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Success_createMdxContent,props)})):Success_createMdxContent()},WarningCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      variation="warning"
   />
`;function Warning_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{variation:"warning",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:WarningCode})]})}const Warning=function Warning_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Warning_createMdxContent,props)})):Warning_createMdxContent()},ErrorCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      variation="error"
   />
`;function Error_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{variation:"error",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:ErrorCode})]})}const variation_Error=function Error_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Error_createMdxContent,props)})):Error_createMdxContent()},SmCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      size="sm"
   />
`;function Sm_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{size:"sm",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:SmCode})]})}const Sm=function Sm_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Sm_createMdxContent,props)})):Sm_createMdxContent()},LgCode=dedent_default()`
     <Notification
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      size="lg"
   />
`;function Lg_createMdxContent(props){return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,border:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{size:"lg",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:LgCode})]})}const Lg=function Lg_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Lg_createMdxContent,props)})):Lg_createMdxContent()},ToastButton=()=>{const notification=(0,src.zn)();return(0,jsx_runtime.jsx)(button_src.z,{appearance:"secondary",color:"blue",isSmall:!0,onClick:()=>{notification.push({title:"Toast Title",message:"This is notification message.",icon:"CheckAlt"})},children:"Show Notification"})},TimeOutToastButton=()=>{const notification=(0,src.zn)();return(0,jsx_runtime.jsx)(button_src.z,{appearance:"secondary",color:"blue",isSmall:!0,onClick:()=>{notification.push({title:"Toast Title",message:"This is notification message.",icon:"CheckAlt",timeout:1e3})},children:"Show Notification"})},sampleCode=dedent_default()`
     <Notification
      id="simple-notification"
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
   />
`,DismissCode=dedent_default()`
     <Notification
      id="dismiss-notification"
      title="Notification Title"
      message="This is notification message."
      icon="CheckAlt"
      isDismissible={true}
   />
`,ActionCode=dedent_default()`
        <Notification
            title="Notification Title"
            message="This is notification message."
            icon="CheckAlt"
            action={
                  <Button
                    className="csb-banner__cta"
                    appearance="secondary"
                    color="blue"
                    isSmall={true}
                >
                   Action
                </Button>
            }
        />
`,ToastCode=dedent_default()`
    const ToastExample = () => {
    const notification = useNotifications()
    return (
        <>
        <NotificationRenderer />
        <Button
            appearance="secondary"
            color="blue"
            isSmall={true}
            onClick={() => {
                notification.push({
                    title: "Notification Title",
                    message: "This is notification message.",
                    icon: "CheckAlt",
                })
            }}
        >
            Show Notification
        </Button>
        </>
    )
}
`,TimeOutToastCode=dedent_default()`
    const ToastExample = () => {
    const notification = useNotifications()
    return (
        <>
        <NotificationRenderer />
        <Button
            appearance="secondary"
            color="blue"
            isSmall={true}
            onClick={() => {
                notification.push({
                    title: "Notification Title",
                    message: "This is notification message.",
                    icon: "CheckAlt",
                    timeout: 1000
                })
            }}
        >
            Show Notification
        </Button>
        </>
    )
}
`;function TabExamples_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsx)("p",{children:"Basic Notification Example "}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{id:"basic-notification",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt"})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:sampleCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Variation",contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsxs)(_components.p,{children:["You can change the type of the notification by changing the"," ","\n",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"variation"})," prop"]}),(0,jsx_runtime.jsxs)(docs_src.T5,{children:[(0,jsx_runtime.jsx)("div",{label:"info",value:"info",children:(0,jsx_runtime.jsx)(Info,{})}),(0,jsx_runtime.jsx)("div",{label:"success",value:"success",children:(0,jsx_runtime.jsx)(Success,{})}),(0,jsx_runtime.jsx)("div",{label:"warning",value:"warning",children:(0,jsx_runtime.jsx)(Warning,{})}),(0,jsx_runtime.jsx)("div",{label:"error",value:"error",children:(0,jsx_runtime.jsx)(variation_Error,{})})]})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Size",contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsxs)(_components.p,{children:["You can change the size of the notification by changing the"," ","\n",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"size"})," prop"]}),(0,jsx_runtime.jsxs)(docs_src.T5,{children:[(0,jsx_runtime.jsx)("div",{label:"sm",value:"sm",children:(0,jsx_runtime.jsx)(Sm,{})}),(0,jsx_runtime.jsx)("div",{label:"lg",value:"lg",children:(0,jsx_runtime.jsx)(Lg,{})})]})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Dismissible",contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsxs)(_components.p,{children:["Set ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"isDismissible"})," prop to"," ","\n",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"true"})," if you want to add a dismissing button"]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{id:"dismissible-notification",title:"Notification Title",message:"This is notification message.",icon:"CheckAlt",isDismissible:!0})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:DismissCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Action",contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"action"})," prop to add a custom action button to\nthe notification"]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(src.P_,{title:"Notification Title",message:"This is notification message.",icon:"CheckAlt",action:(0,jsx_runtime.jsx)(button_src.z,{className:"csb-banner__cta",appearance:"secondary",color:"blue",isSmall:!0,children:"Action"})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:ActionCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Toasts",contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsxs)(_components.p,{children:["Utilize ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"useNotifications"})," hook and\n",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"<NotificationRenderer />"})," component if you want to\nadd and remove notifications dynamically"]}),(0,jsx_runtime.jsx)("div",{className:"sui-wrap sui-theme--light",style:{marginBottom:"20px"},children:(0,jsx_runtime.jsxs)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:[(0,jsx_runtime.jsx)(src.DY,{}),(0,jsx_runtime.jsx)(ToastButton,{})]})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:ToastCode}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"timeout",small:!1},style:{paddingTop:0,paddingLeft:20,paddingRight:0,paddingBottom:0},children:(0,jsx_runtime.jsxs)("p",{children:[" By default, the toast is dismissed after ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"5000ms"}),", you can customize that by using ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:" timeout"})," prop, in the following example the notice is dismissed after ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"1000ms"}),"."]})}),(0,jsx_runtime.jsx)("div",{className:"sui-wrap sui-theme--light",style:{marginBottom:"20px"},children:(0,jsx_runtime.jsxs)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:[(0,jsx_runtime.jsx)(src.DY,{}),(0,jsx_runtime.jsx)(TimeOutToastButton,{})]})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:TimeOutToastCode})]})]})}const TabExamples=function TabExamples_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabExamples_createMdxContent,props)})):TabExamples_createMdxContent(props)},inline_anatomy_namespaceObject=__webpack_require__.p+"static/media/inline-anatomy.ee9980d5.svg",inline_variation_informative_namespaceObject=__webpack_require__.p+"static/media/inline-variation-informative.4c7b8350.svg",inline_variation_success_namespaceObject=__webpack_require__.p+"static/media/inline-variation-success.22994e90.svg",inline_variation_warning_namespaceObject=__webpack_require__.p+"static/media/inline-variation-warning.784d7491.svg",inline_variation_error_namespaceObject=__webpack_require__.p+"static/media/inline-variation-error.b56c8ee6.svg",toast_anatomy_namespaceObject=__webpack_require__.p+"static/media/toast-anatomy.03263056.svg",toast_variation_informative_namespaceObject=__webpack_require__.p+"static/media/toast-variation-informative.9a073711.svg",toast_variation_success_namespaceObject=__webpack_require__.p+"static/media/toast-variation-success.ba08fc99.svg",toast_variation_warning_namespaceObject=__webpack_require__.p+"static/media/toast-variation-warning.1bf49236.svg",toast_variation_error_namespaceObject=__webpack_require__.p+"static/media/toast-variation-error.45cac1c2.svg",location_namespaceObject=__webpack_require__.p+"static/media/location.3a2b32b5.svg";function TabUsage_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{title:"1. Inline Notifications",children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Inline notifications can be located near the item that requires attention or at the top of the main content."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:0},children:"Anatomy"}),(0,jsx_runtime.jsx)("img",{src:inline_anatomy_namespaceObject,alt:"Inline Notification Anatomy"}),(0,jsx_runtime.jsx)("h2",{children:" Status Indicator "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"All notifications must include a status indication. Users will find it\nuseful to visually identify the type of notice."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Content "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Every notification has a title, which is optional, and a short description of the alert. The title and message must be distinct from one another in terms of linguistic weight. If necessary, a link can be added as well."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Action "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The notice includes an optional action. Depending on the notification's nature, it may be utilized."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Dismiss "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"A dismiss icon is an optional component for notifications that close the\nnotification with direct action."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:"Variations"}),(0,jsx_runtime.jsx)("h3",{children:"1. Informative"}),(0,jsx_runtime.jsx)("img",{src:inline_variation_informative_namespaceObject,alt:"Notification Inline Informative"}),(0,jsx_runtime.jsx)("h3",{children:"2. Success"}),(0,jsx_runtime.jsx)("img",{src:inline_variation_success_namespaceObject,alt:"Notification Inline Success"}),(0,jsx_runtime.jsx)("h3",{children:"2. Warning"}),(0,jsx_runtime.jsx)("img",{src:inline_variation_warning_namespaceObject,alt:"Notification Inline Warning"}),(0,jsx_runtime.jsx)("h3",{children:"2. Error"}),(0,jsx_runtime.jsx)("img",{src:inline_variation_error_namespaceObject,alt:"Notification Inline Error"})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"2. Toast Notifications",children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Toast is a non-intrusive modal to display low-attention notifications that\nfloats on the top of the screen. Primarily toast is used for confirming task\nreceipt and completion."})}),(0,jsx_runtime.jsx)("h2",{style:{marginTop:0},children:"Anatomy"}),(0,jsx_runtime.jsx)("img",{src:toast_anatomy_namespaceObject,alt:"Toast Anatomy"}),(0,jsx_runtime.jsx)("p",{style:{marginTop:30},children:" All toasts have a fixed width size at 360px but the height is driven by the amount of content. "}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Status Indicator "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"All toast must include a status indication. Users will find it useful to visually identify the type of notice."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Content "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Every notification has a title, which is optional, and a short description of the alert. The title and message must be distinct from one another in terms of linguistic weight."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Dismiss "}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"A dismiss icon is an optional component for toast that close the notification with a direct action. Toasts are designed to be non-intrusive for users. A user must have enough time to read toast message before the toast automatically closes itself. Therefore, the automatic termination should take at least 5 seconds. If the notice requires user confirmation, make sure the toast only disappears when the user confirms."})}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:"Variations"}),(0,jsx_runtime.jsx)("h3",{children:"1. Informative"}),(0,jsx_runtime.jsx)("img",{src:toast_variation_informative_namespaceObject,alt:"Notification Inline Informative"}),(0,jsx_runtime.jsx)("h3",{children:"2. Success"}),(0,jsx_runtime.jsx)("img",{src:toast_variation_success_namespaceObject,alt:"Notification Inline Success"}),(0,jsx_runtime.jsx)("h3",{children:"2. Warning"}),(0,jsx_runtime.jsx)("img",{src:toast_variation_warning_namespaceObject,alt:"Notification Inline Warning"}),(0,jsx_runtime.jsx)("h3",{children:"2. Error"}),(0,jsx_runtime.jsx)("img",{src:toast_variation_error_namespaceObject,alt:"Notification Inline Error"}),(0,jsx_runtime.jsx)("h2",{style:{paddingTop:15},children:" Where and how to display? "}),(0,jsx_runtime.jsx)("img",{src:location_namespaceObject,alt:"Notification Display Location"})]})]})}const TabUsage=function TabUsage_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabUsage_createMdxContent,props)})):TabUsage_createMdxContent(props)};function Notification_createMdxContent(props){return docs_src.T3||_missingMdxReference("Page",!1),docs_src.T3.Tabs||_missingMdxReference("Page.Tabs",!0),(0,jsx_runtime.jsx)(dist.E$,{children:(0,jsx_runtime.jsxs)(docs_src.T3.Tabs,{title:"Notification",subtitle:"Notifications promptly update users about the status of an action or system, ensuring they stay informed without interruption. Positioned strategically, these alerts provide essential information while maintaining a seamless user experience.",status:"ready",children:[(0,jsx_runtime.jsx)("div",{id:"usage",label:"Usage",children:(0,jsx_runtime.jsx)(TabUsage,{})}),(0,jsx_runtime.jsx)("div",{id:"code",label:"Code",children:(0,jsx_runtime.jsx)(TabCode,{})}),(0,jsx_runtime.jsx)("div",{id:"examples",label:"Examples",children:(0,jsx_runtime.jsx)(TabExamples,{})})]})})}const Notification=function Notification_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Notification_createMdxContent,props)})):Notification_createMdxContent()};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}var use_notification=__webpack_require__("./packages/ui/notification/src/use-notification.tsx");const Notification_stories={title:"SUI/Components/Advanced/Notification",component:src.P_,parameters:{layout:"fullscreen",docs:{page:Notification}}},Notification_stories_Notification=({title,message,action,isInline=!1,size,isDismissible,icon,variation})=>{const options={title,message,action,size,isDismissible,icon,variation},notifications=(0,use_notification.z)();return(0,jsx_runtime.jsxs)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:[(0,jsx_runtime.jsx)(src.DY,{}),(0,jsx_runtime.jsx)("div",{className:"sui-layout__content",children:(0,jsx_runtime.jsx)("div",{style:{margin:"0 0 20px",padding:"30px",border:"1px solid #E6E6E6",borderRadius:"4px",background:"#fff"},children:isInline?(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("h2",{style:{marginTop:0},children:"Inline Notifications"}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(src.P_,{...options,id:"notification-1"})})]}):(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("h2",{style:{marginTop:0},children:"Toast Notifications"}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(button_src.z,{appearance:"secondary",color:"blue",isSmall:!0,onClick:()=>{notifications.push({...options,id:"notification-1"})},children:"Open"})})]})})})]})};Notification_stories_Notification.args={variation:"",title:"Toast title",message:"This is a toast message.",isInline:!1,isDismissible:!0,size:"lg",icon:"InfoAlt",action:(0,jsx_runtime.jsx)(button_src.z,{className:"csb-banner__cta",appearance:"secondary",color:"blue",isSmall:!0,children:"Action"})},Notification_stories_Notification.argTypes={variation:{name:"Variation",options:["","info","success","warning","error"],control:{type:"select",labels:{"":"Variation: Default",info:"Variation: Informative",success:"Variation: Success",warning:"Variation: Warning",error:"Variation: Error"}}},icon:{name:"Icon",control:{type:"text"}},isInline:{name:"Inline Notifications",control:{type:"boolean"}},isDismissible:{name:"Dismissible",control:{type:"boolean"}},size:{name:"Size",options:["","lg"],control:{type:"select",labels:{"":"Default",lg:"Large"}}},title:{name:"Title",control:{type:"text"}},message:{name:"Message",control:{type:"text"}}},Notification_stories_Notification.parameters={...Notification_stories_Notification.parameters,docs:{...Notification_stories_Notification.parameters?.docs,source:{originalSource:'({\n  title,\n  message,\n  action,\n  isInline = false,\n  size,\n  isDismissible,\n  icon,\n  variation\n}: NotificationProps) => {\n  const box = {\n    margin: "0 0 20px",\n    padding: "30px",\n    border: "1px solid #E6E6E6",\n    borderRadius: "4px",\n    background: "#fff"\n  };\n  const options = {\n    title,\n    message,\n    action,\n    size,\n    isDismissible,\n    icon,\n    variation\n  };\n  const notifications = useNotifications();\n  return <div className="sui-layout sui-layout--horizontal sui-layout--vertical">\n            <NotificationRenderer />\n            <div className="sui-layout__content">\n                <div style={box}>\n                    {!isInline ? <Fragment>\n                            <h2 style={{\n            marginTop: 0\n          }}>Toast Notifications</h2>\n                            <div>\n                                <Button appearance="secondary" color="blue" isSmall={true} onClick={() => {\n              notifications.push({\n                ...options,\n                id: "notification-1"\n              });\n            }}>\n                                    Open\n                                </Button>\n                            </div>\n                        </Fragment> : <Fragment>\n                            <h2 style={{\n            marginTop: 0\n          }}>Inline Notifications</h2>\n                            <div>\n                                <SuiNotification {...options} id="notification-1" />\n                            </div>\n                        </Fragment>}\n                </div>\n            </div>\n        </div>;\n}',...Notification_stories_Notification.parameters?.docs?.source}}};const __namedExportsOrder=["Notification"]},"./packages/hooks/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Um:()=>useDefaultChildren,p4:()=>useDetectRTL,Y9:()=>useDragAndDrop,X2:()=>useInteraction,rw:()=>useOuterClick,vI:()=>usePortal,D9:()=>usePrevious,GT:()=>useValidateProps});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const useInteraction=methods=>{const[isHovered,setIsHovered]=(0,react.useState)(!1),[isFocused,setIsFocused]=(0,react.useState)(!1),{onMouseEnter,onMouseLeave,onMouseDownCapture,onMouseUp,onMouseUpCapture,onFocus,onBlur,onBlurCapture}=methods,toggleHover=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsHovered(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),toggleFocus=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsFocused(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),onMouseUpCallback=(0,react.useCallback)((e=>{const target=e?.currentTarget;target&&(target?.focus(),toggleFocus(!0,e,(event=>{onMouseUp&&onMouseUp(event)})))}),[onMouseUp,toggleFocus]),onMouseEnterCallback=(0,react.useCallback)((e=>toggleHover(!0,e,(event=>{onMouseEnter&&onMouseEnter(event)}))),[onMouseEnter,toggleHover]),onMouseLeaveCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(()=>{onMouseLeave&&onMouseLeave(event)}))),[onMouseLeave,toggleHover]),onMouseDownCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onMouseDownCapture&&onMouseDownCapture(event)}))),[onMouseDownCapture,toggleFocus]),onMouseUpCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onMouseUpCapture&&onMouseUpCapture(event)}))),[onMouseUpCapture,toggleFocus]),onBlurCaptureCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(event=>{onBlurCapture&&onBlurCapture(event)}))),[onBlurCapture,toggleHover]),onBlurCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onBlur&&onBlur(event)}))),[onBlur,toggleFocus]);return[isHovered,isFocused,{onMouseUp:onMouseUpCallback,onMouseEnter:onMouseEnterCallback,onMouseLeave:onMouseLeaveCallback,onMouseDownCapture:onMouseDownCaptureCallback,onMouseUpCapture:onMouseUpCaptureCallback,onFocus:(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onFocus&&onFocus(event)}))),[onFocus,toggleFocus]),onBlur:onBlurCallback,onBlurCapture:onBlurCaptureCallback},toggleHover,toggleFocus]},useOuterClick=(ref,callback=(()=>{}))=>{const onPageClick=(0,react.useCallback)((event=>{ref?.current&&!ref?.current.contains(event.target)&&callback()}),[callback,ref]);(0,react.useEffect)((()=>(document.addEventListener("click",onPageClick),()=>{document.removeEventListener("click",onPageClick)})))};var react_dom=__webpack_require__("./node_modules/react-dom/index.js");const usePortal=wrapperId=>{const[wrapperElement,setWrapperElement]=(0,react.useState)(null);wrapperId=wrapperId??".sui-wrap",(0,react.useLayoutEffect)((()=>{let el=document.querySelector(wrapperId),systemCreated=!1;return el||(systemCreated=!0,el=(wrapperId=>{const wrapperElement=document.createElement("div");return wrapperElement.setAttribute("id",wrapperId),document.body.appendChild(wrapperElement),wrapperElement})(wrapperId)),setWrapperElement(el),()=>{systemCreated&&el?.parentNode&&el.parentNode.removeChild(el)}}),[wrapperId]);return[children=>null===wrapperElement?null:(0,react_dom.createPortal)(children,wrapperElement)]},useValidateProps=({propsToCheck,component})=>{const componentName=component?.displayName||component?.name;Object.keys(propsToCheck)?.forEach(((propKey,index)=>{if(!!(0,src.xb)(propsToCheck?.[propKey]??""))throw new Error(`Empty content is not valid. More details below:\n\n⬇️ ⬇️ ⬇️\n\n📦 SUI 3 React - Components: ${componentName}\n\nThe "${propKey}" argument requires some value to be passed to it.\n\n`)}))},useDragAndDrop=({containerRef,methods})=>{const[node,setNode]=(0,react.useState)(),[isDragging,setIsDragging]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{setNode(containerRef)}),[containerRef]),(0,react.useEffect)((()=>{const onDragOver=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!0),methods?.onDragOver&&methods?.onDragOver(e)},onDrop=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!1),methods?.onDrop&&methods?.onDrop(e)},current=node?.current;return current?.addEventListener("dragover",onDragOver,!1),current?.addEventListener("drop",onDrop,!1),()=>{current?.removeEventListener("dragover",onDragOver,!1),current?.removeEventListener("drop",onDrop,!1)}}),[containerRef,node,methods]),[isDragging]},useDetectRTL=()=>{const[isRTL,setIsRTL]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{const updateRTL=()=>{const isDocumentRTL="rtl"===document.documentElement.getAttribute("dir");setIsRTL(isDocumentRTL)};updateRTL();const mutationObserver=new MutationObserver(updateRTL);return mutationObserver.observe(document.documentElement,{attributes:!0,attributeFilter:["dir"]}),()=>{mutationObserver.disconnect()}}),[]),isRTL},usePrevious=value=>{const ref=(0,react.useRef)();return(0,react.useEffect)((()=>{ref.current=value}),[value]),ref.current},useDefaultChildren=(children,content)=>children||content||"{children content}"},"./packages/ui/button/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>Button});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/hooks/src/index.ts"),utils_src=__webpack_require__("./packages/utils/src/index.ts");const Label=({hidden=!1,children})=>{if((0,utils_src.o8)(hidden)&&!(0,utils_src.jn)(hidden))throw new Error('Incorrect parameter type. More details below:\n\n⬇️ ⬇️ ⬇️\n\n📦 Shared UI - Components: Button\n\nThe parameter "hidden" used in the label element is not a boolean type.\n\n');return(0,jsx_runtime.jsxs)(react.Fragment,{children:[hidden&&(0,jsx_runtime.jsx)("span",{className:"sui-screen-reader-only",tabIndex:-1,children}),!hidden&&(0,jsx_runtime.jsx)("span",{className:"sui-button__label","data-testid":"button-label",children})]})};var components=__webpack_require__("./packages/assets/icons/src/components/index.ts");const Icon=({name,size="sm"})=>{if(!(!(0,utils_src.o8)(name)&&!(0,utils_src.xb)(name??"")))throw new Error('Required parameter is empty. More details below:\n\n⬇️ ⬇️ ⬇️\n\n📦 Shared UI - Components: Button\n\nThe "name" parameter in the icon element is required and must not be empty.\n\n');const IconName=name,IconTag=components.ZP[IconName];return(0,jsx_runtime.jsx)("span",{className:"sui-button__icon","aria-hidden":"true","data-testid":"button-icon",children:(0,jsx_runtime.jsx)(IconTag,{size})})},Loader=({children})=>(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("span",{className:"sui-button__icon","aria-hidden":"true",children:(0,jsx_runtime.jsx)(components.__,{className:"suicons--spin",size:"sm"})}),children?(0,jsx_runtime.jsx)("span",{className:"sui-button__label sui-hidden",tabIndex:-1,children}):(0,jsx_runtime.jsx)("span",{className:"sui-screen-reader-only",tabIndex:-1,children:"Loading"})]}),Button=(0,react.forwardRef)((({href,target,htmlFor,appearance,color,isSmall=!1,isFullWidth=!1,isDisabled=!1,isUnwrapped=!1,className,children,icon,startIcon=icon,endIcon,iconOnly=!1,iconSize="sm",isResponsive=!1,isLoading=!1,...restProps},ref)=>{children=(0,src.Um)(children,"button label"),isLoading&&(isUnwrapped=!0,children=(0,jsx_runtime.jsx)(Loader,{children}));const[isHovered,isFocused,interactionMethods]=(0,src.X2)({onMouseEnter:restProps?.onMouseEnter,onMouseLeave:restProps?.onMouseLeave,onFocus:restProps?.onFocus,onBlur:restProps?.onBlur}),isLink=!(0,utils_src.o8)(href),label=!(0,utils_src.o8)(htmlFor),isEndIcon=((0,utils_src.xb)(startIcon??""),!(0,utils_src.xb)(endIcon??"")),attrClasses={sm:isSmall,hover:isHovered&&!isDisabled,focus:isFocused&&!isDisabled,disabled:isDisabled,"full-width":isFullWidth,"is-icon":(startIcon||endIcon)&&iconOnly,[`${appearance}-${color}`]:!!appearance&&!!color,inline:iconOnly&&!appearance,responsive:isResponsive,loading:isLoading},attrs={ref,href:isLink&&href?href:void 0,target:target||"_blank",htmlFor:(0,utils_src.CI)(label),className:(0,utils_src.uY)("sui-button",attrClasses,className??""),disabled:isDisabled,"aria-busy":isLoading,...isLoading&&{"aria-live":"polite"},"data-testid":"button",...interactionMethods??{},...restProps};let TagName=isLink?"a":"button";return htmlFor&&(TagName="label"),(0,jsx_runtime.jsxs)(TagName,{...attrs,children:[(startIcon||icon)&&!isLoading&&(0,jsx_runtime.jsx)(Icon,{name:startIcon??"",size:iconSize}),isUnwrapped&&children,!isUnwrapped&&(0,jsx_runtime.jsx)(Label,{...iconOnly&&{hidden:!0},children}),isEndIcon&&!isLoading&&(0,jsx_runtime.jsx)(Icon,{name:endIcon??"",size:iconSize})]})}));Button.displayName="Button"},"./packages/ui/notification/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P_:()=>Notification,DY:()=>NotificationRenderer,zn:()=>use_notification.z});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts"),button_src=__webpack_require__("./packages/ui/button/src/index.ts"),components=__webpack_require__("./packages/assets/icons/src/components/index.ts"),use_notification=__webpack_require__("./packages/ui/notification/src/use-notification.tsx");const Notification=({id,title,message="message",action,icon="Info",isInline=!0,isDismissible=!1,size,variation,timeout=5e3})=>{const[isVisible,setIsVisible]=(0,react.useState)(!0),notifications=(0,use_notification.z)(),uniqueId=(0,react.useId)();id||(id=uniqueId);const notificationId=`sui-notification-${uniqueId}`;(0,react.useEffect)((()=>{isInline||isDismissible||setTimeout((()=>{notifications.remove(id)}),timeout??5e3)}),[id,isInline,notifications,timeout,isDismissible]);const onClose=(0,react.useCallback)((()=>{isInline?setIsVisible(!1):notifications.remove(id)}),[id,isInline,notifications]);if(!isVisible)return null;const classNames=(0,src.uY)("sui-notification",{inline:isInline,[size]:!(0,src.xb)(size??""),[variation]:["success","warning","error","info"].includes(variation??"")});let Icon=null;return icon&&(Icon=components.ZP?.[icon]),(0,jsx_runtime.jsxs)("div",{id:notificationId,className:classNames,role:"alert","aria-labelledby":`${notificationId}-title`,"aria-describedby":`${notificationId}-message`,"data-testid":"notification",children:[!!Icon&&(0,jsx_runtime.jsx)(Icon,{size:"md",className:"sui-notification__icon"}),(0,jsx_runtime.jsxs)("div",{className:"sui-notification__content",children:[!!title&&(0,jsx_runtime.jsx)("span",{className:"sui-notification__title",id:`${notificationId}-title`,children:title}),!!message&&(0,jsx_runtime.jsx)("span",{className:"sui-notification__message",id:`${notificationId}-message`,children:message}),!!action&&(0,jsx_runtime.jsx)("div",{className:"sui-notification__action",children:action})]}),isDismissible&&(0,jsx_runtime.jsx)(button_src.z,{className:"sui-modal__header-actions-close",icon:"Close",appearance:"tertiary",color:"black",isSmall:!0,iconOnly:!0,onClick:onClose,"data-testid":"notification-dismiss",children:"Close notification"})]})};Notification.displayName="Notification";const NotificationRenderer=()=>{const{queue}=(0,use_notification.z)();return queue.length<=0?null:(0,jsx_runtime.jsx)("div",{className:"sui-notification__renderer",children:(queue??[])?.map(((notification,index)=>(0,react.createElement)(Notification,{...notification,isInline:!1,key:index})))})}},"./packages/ui/notification/src/use-notification.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>useNotifications});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let id=1,notifications=[],listeners=[];const notificationStore={push:options=>{notifications=[...notifications,{...options,id:id++}],emitChange()},remove:idStr=>{notifications=notifications.filter((alert=>alert?.id!==(idStr??""))),emitChange()},subscribe:listener=>(listeners=[...listeners,listener],()=>{listeners=listeners.filter((l=>l!==listener))}),getSnapshot:()=>notifications},emitChange=()=>{for(const listener of listeners)listener()},useNotifications=()=>{const queue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(notificationStore.subscribe,notificationStore.getSnapshot);return{push:notificationStore.push,remove:notificationStore.remove,queue}}}}]);
//# sourceMappingURL=ui-notification-stories-Notification-stories.cdb31c15.iframe.bundle.js.map