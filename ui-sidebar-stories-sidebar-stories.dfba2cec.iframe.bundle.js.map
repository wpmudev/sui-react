{"version":3,"file":"ui-sidebar-stories-sidebar-stories.dfba2cec.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA","sources":["webpack://wpmudev-sui/./packages/ui/sidebar/stories/tabs/Examples/GeneralSidebar.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { Sidebar, SidebarItem, SidebarDropdown } from \"../../../src\";\nimport { BoxGroup } from \"@wpmudev/sui-box\";\nimport { Col, Row } from \"@wpmudev/sui-grid\";\nimport { Tag } from \"@wpmudev/sui-tag\";\nimport dedent from \"dedent\";\nexport const GeneralSidebarCode = dedent `\n\nimport React, { useState } from \"react\"\nimport { Sidebar, SidebarItem } from \"@wpmudev/sui-sidebar\"\nimport { BoxGroup } from \"@wpmudev/sui-box\"\nimport { Col, Row } from \"@wpmudev/sui-grid\"\nimport { Tag } from \"@wpmudev/sui-tag\"\n\nconst tag = (\n    <Tag colorScheme=\"black\" design=\"outlined\" isSmall={true}>\n       PRO\n    </Tag>\n)\n\nconst items = [\n    { title: \"General\", url: \"#\", icon: \"Settings\" },\n    { title: \"Integrations\", url: \"#\", icon: \"Link\" },\n    { title: \"Configs\", icon: \"Bell\", url: \"#\", action: tag },\n    {\n        title: \"Data\",\n        url: \"#\",\n        icon: \"Bell\",\n        isDisabled: true,\n        action: tag,\n\t},\n]\n\nexport const BasicSidebar = () => {\n    const [selectedItem, setSelectedItem] = useState(\"Integrations\")\n\n    return (\n        <BoxGroup>\n            <Row align={{ md: \"inline\" }}>\n                <Col size=\"3\">\n                    <Sidebar>\n                       {items.map(({ title, url, icon, isDisabled, action }) => (\n                           <SidebarItem\n                               key={title}\n                               title={title}\n                               action={action}\n                               url={url}\n                               icon={icon}\n                               isDisabled={isDisabled}\n                               onClick={() => setSelectedItem(title)}\n                           />\n                        ))}\n                    </Sidebar>\n                    <SidebarDropdown selectedItemName={selectedItem}>\n                        {items.map(({ title, url, icon, isDisabled, action }) => (\n                            <SidebarItem\n                                key={title}\n                                title={title}\n                                action={action}\n                                url={url}\n                                icon={icon}\n                                isDisabled={isDisabled}\n                                onClick={() => setSelectedItem(title)}\n                            />\n                        ))}\n                    </SidebarDropdown>\n                </Col>\n                <Col\n                    size=\"9\"\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                     {selectedItem}\n                </Col>\n            </Row>\n       </BoxGroup>\n    )\n}\n`;\nconst tag = (_jsx(Tag, { colorScheme: \"black\", design: \"outlined\", isSmall: true, children: \"PRO\" }));\nconst items = [\n    { title: \"General\", url: \"#\", icon: \"Settings\" },\n    { title: \"Integrations\", url: \"#\", icon: \"Link\" },\n    { title: \"Configs\", icon: \"Bell\", url: \"#\", action: tag },\n    {\n        title: \"Data\",\n        url: \"#\",\n        icon: \"Bell\",\n        isDisabled: true,\n        action: tag,\n    },\n];\nexport const BasicSidebar = () => {\n    const [selectedItem, setSelectedItem] = useState(\"Integrations\");\n    return (_jsx(BoxGroup, { children: _jsxs(Row, { align: { md: \"inline\" }, children: [_jsxs(Col, { size: \"3\", children: [_jsx(Sidebar, { children: items.map(({ title, url, icon, isDisabled, action }) => (_jsx(SidebarItem, { title: title, action: action, url: url, icon: icon, isDisabled: isDisabled, onClick: () => setSelectedItem(title) }, title))) }), _jsx(SidebarDropdown, { selectedItemName: selectedItem, children: items.map(({ title, url, icon, isDisabled, action }) => (_jsx(SidebarItem, { title: title, action: action, url: url, icon: icon, isDisabled: isDisabled, onClick: () => setSelectedItem(title) }, title))) })] }), _jsx(Col, { size: \"9\", children: selectedItem })] }) }));\n};\n"],"names":[],"sourceRoot":""}