{"version":3,"file":"ui-tag-stories-ReactTag-stories.17a722e4.iframe.bundle.js","mappings":";;AAYA;;ACAA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;ACfA;;AAGA;;ACHA;;AAGA;;ACCA","sources":["webpack://@wpmudev/sui-react/./packages/ui/tag/stories/tabs/Examples/Size.mdx","webpack://@wpmudev/sui-react/./packages/ui/tag/stories/tabs/Examples/Colors.mdx","webpack://@wpmudev/sui-react/./packages/ui/tag/stories/tabs/Examples/Design.mdx","webpack://@wpmudev/sui-react/./packages/ui/tag/stories/tabs/Examples/Style.mdx","webpack://@wpmudev/sui-react/./packages/ui/tag/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallTagCode = dedent`\n<Tag isSmall={true}>Tag</Tag>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Tag, {\n        isSmall: true,\n        children: \"Default tag\"\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallTagCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Snippet, Preview, Code} from '@wpmudev/sui-docs';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const BlueTagCode = dedent`\n<Tag color=\"blue\">Blue tag</Tag>\n`;\nexport const YellowTagCode = dedent`\n<Tag color=\"yellow\">Yellow tag</Tag>\n`;\nexport const RedTagCode = dedent`\n<Tag color=\"red\">Red tag</Tag>\n`;\nexport const GreenTagCode = dedent`\n<Tag color=\"green\">Green tag</Tag>\n`;\nexport const BlackTagCode = dedent`\n<Tag color=\"black\">Black tag</Tag>\n`;\nexport const WhiteTagCode = dedent`\n<Tag color=\"white\">White tag</Tag>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Blue\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"blue\",\n          children: \"Blue tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlueTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Yellow\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"yellow\",\n          children: \"Yellow tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: YellowTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Red\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"red\",\n          children: \"Red tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: RedTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Green\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"green\",\n          children: \"Green tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: GreenTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Black\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          color: \"black\",\n          children: \"Black tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BlackTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"White\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            background: \"#000\",\n            padding: 20\n          },\n          children: _jsx(Tag, {\n            color: \"white\",\n            children: \"White tag\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: WhiteTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const UppercaseTagCode = dedent`\n<Tag isUppercase={true}>Uppercase tag</Tag>\n`;\nexport const OutlinedTagCode = dedent`\n<Tag design=\"outlined\">Outlined tag</Tag>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Uppercase\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          isUppercase: true,\n          children: \"Uppercase tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: UppercaseTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Outlined\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          design: \"outlined\",\n          children: \"Outlined tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: OutlinedTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Tag} from '../../../src';\nimport dedent from 'dedent';\nexport const MutilineTagCode = dedent`\n<Tag style=\"multiline\">This is a label.</Tag>\n`;\nexport const TruncatedTagCode = dedent`\n<Tag style=\"truncated\">This is a label.</Tag>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Multiline\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"When the tag width is insufficient, the text will break in multiple lines\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          style: \"multiline\",\n          children: \"This is a multiline text.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: MutilineTagCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Truncated\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"When the tag width is insufficient, the text get truncated\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          style: \"truncated\",\n          children: \"This is a truncated text.\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TruncatedTagCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {Tag} from '../../src';\nimport dedent from 'dedent';\nimport Size from './Examples/Size.mdx';\nimport Colors from './Examples/Colors.mdx';\nimport Design from './Examples/Design.mdx';\nimport Style from './Examples/Style.mdx';\nexport const sampleCode = dedent`\n<Tag>Tag default</Tag>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Below is the default form of a tag:\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Tag, {\n          children: \"Default tag\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Colors\",\n          value: \"colors\",\n          children: _jsx(Colors, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        }), _jsx(\"div\", {\n          label: \"Design\",\n          value: \"design\",\n          children: _jsx(Design, {})\n        }), _jsx(\"div\", {\n          label: \"Style\",\n          value: \"style\",\n          children: _jsx(Style, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}