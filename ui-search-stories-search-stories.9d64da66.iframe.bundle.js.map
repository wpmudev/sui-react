{"version":3,"file":"ui-search-stories-search-stories.9d64da66.iframe.bundle.js","mappings":";;AAaA;;;;;;;AAQA;;AAGA","sources":["webpack://wpmudev-sui/./packages/ui/search/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code, List} from \"@wpmudev/sui-docs\";\nimport {Search} from \"../../src\";\nimport dedent from \"dedent\";\nimport {options} from \"../options\";\nexport const basciCode = dedent`\n<Search defaultValue=\"Search Text\" />\n`;\nexport const smartSearchCode = dedent`\n  <Search\n      options={[ \"United States\", \"Algeria\", \"Australia\"]}\n      variation=\"smart\"\n      searchHint=\"Please enter 2 or more characters\"\n      defaultValue=\"Un\"\n  />\n`;\nexport const disabledCode = dedent`\n  <Search isDisabled={true}/>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is a basic search example on its default form\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Search, {\n          defaultValue: \"Search Text\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: basciCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Smart Search\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Smart Search displays search options while the user is typing\"\n      }), _jsxs(List, {\n        children: [_jsx(\"span\", {\n          label: `Use the prop \"options\" to specify the options for search`\n        }), _jsx(\"span\", {\n          label: `Use the prop \"searchMinChars\" to set the minimum\n\t\t     number of charcters needed to implement searching`\n        }), _jsx(\"span\", {\n          label: `Use the prop \"searchHint\" to provide a description text for the user`\n        })]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Search, {\n          options: options,\n          variation: \"smart\",\n          searchHint: \"Please enter 2 or more characters\",\n          defaultValue: \"Un\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: smartSearchCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      ontained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"isDisabled={true}\"\n        }), \" to disable the input\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Search, {\n          isDisabled: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: disabledCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Hide Clear\",\n      contained: true,\n      ontained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"allowClear={false}\"\n        }), \" to hide the clear button\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Search, {\n          allowClear: false,\n          defaultValue: \"Clear Not Allowed\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: disabledCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}