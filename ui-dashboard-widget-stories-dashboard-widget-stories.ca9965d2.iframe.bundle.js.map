{"version":3,"file":"ui-dashboard-widget-stories-dashboard-widget-stories.ca9965d2.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA","sources":["webpack://@wpmudev/sui-react/./packages/ui/dashboard-widget/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {DashboardWidgetExample} from \"./Examples/Example\";\nimport {Accordion, AccordionItem, AccordionItemBody} from \"@wpmudev/sui-accordion\";\nimport dedent from \"dedent\";\nexport const generalCode = (props = \"\") => dedent`\nimport React from \"react\"\nimport { DashboardWidget } from \"@wpmudev/dashboard-widget\"\nimport {\n\tAccordion,\n\tAccordionItem,\n\tAccordionItemBody,\n} from \"@wpmudev/sui-accordion\"\nimport { Button } from \"@wpmudev/sui-button\"\nimport { Notification } from \"@wpmudev/sui-notification\"\n\nconst actions = [ <Button key={0} appearance=\"secondary\" color=\"black\"\nisSmall={true} > Primary </Button>, \"Automatic scans are running weekly\", ]\n\nexport const DashboardWidgetExample = () => {\n    return (\n        <div style={{ backgroundColor: \"#f0f0f1\", padding: 40 }}>\n            <DashboardWidget\n                ${props}\n                title=\"Malware Scanning\"\n                description={\n                    <>\n                        <p>\n                            Lorem Ipsum is simply dummy text of the printing and typesetting\n                            industry. Lorem Ipsum has been the industry&apos;s standard dummy\n                            text ever since the 1500s, when an unknown printer took a galley\n                            of type and scrambled it to make a type specimen book.\n                        </p>\n                        <Notification\n                            id=\"notice\"\n                            icon=\"InfoAlt\"\n                            variation=\"info\"\n                            size=\"fluid\"\n                            message=\"11 events logged in the past 7 days.\"\n                        />\n                    </>\n                }\n                tag=\"Tag\"\n                icon=\"CheckAlt\"\n                statusIcon=\"Bell\"\n                statusProps={{\n                    color: \"success\",\n                }}\n                actions={actions}\n            >\n                <Accordion noBorderRadius={true} noSideBorders={true}>\n                    <AccordionItem title=\"Tab Title 1\">\n                        <AccordionItemBody>BODY CONTENT</AccordionItemBody>\n                    </AccordionItem>\n                    <AccordionItem title=\"Tab Title 1\">\n                        <AccordionItemBody>BODY CONTENT</AccordionItemBody>\n                    </AccordionItem>\n                </Accordion>\n            </DashboardWidget>\n        </div>\n    )\n}\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is an example of Dashboard Widget with actions\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(DashboardWidgetExample, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: generalCode()\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Disabled\",\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"isDisabled={true}\"\n        }), \" to disable the widget\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(DashboardWidgetExample, {\n          isDisabled: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: generalCode(\"isDisable={true}\")\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Collapse\",\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Set the prop \", _jsx(Code, {\n          small: true,\n          children: \"canCollapse={true}\"\n        }), \" to make the widget collapsable with a toggle button\"]\n      }), _jsxs(\"p\", {\n        children: [\" Use the props  \", _jsx(Code, {\n          small: true,\n          children: \"isExpanded\"\n        }), \" and \", _jsx(Code, {\n          small: true,\n          children: \"onToggle\"\n        }), \" to set and modify the collapsing state\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(DashboardWidgetExample, {\n          canCollapse: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: generalCode(\"canCollapse={true}\")\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}