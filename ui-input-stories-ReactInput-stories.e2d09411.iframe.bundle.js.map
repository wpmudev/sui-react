{"version":3,"file":"ui-input-stories-ReactInput-stories.e2d09411.iframe.bundle.js","mappings":";;;;;;;AAiBA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;ACxBA;;;;;;;ACAA;;;;;;;AAQA;;;;;;;ACLA","sources":["webpack://@wpmudev/sui-react/./packages/ui/input/stories/tabs/Examples/States.mdx","webpack://@wpmudev/sui-react/./packages/ui/input/stories/tabs/Examples/Size.mdx","webpack://@wpmudev/sui-react/./packages/ui/input/stories/tabs/Examples/Icon.mdx","webpack://@wpmudev/sui-react/./packages/ui/input/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Input} from '../../../src';\nimport dedent from 'dedent';\nexport const DisabledInputCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-1\" label=\"Label\" placeholder=\"Placeholder\" isDisabled={true} />;\n}\\n\nexport default Example;\n`;\nexport const ValueEnteredInputCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-1\" value=\"Default\" label=\"Label\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nexport const ReadOnlyInputCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-1\" label=\"Label\" placeholder=\"Placeholder\" isReadOnly={true} />;\n}\\n\nexport default Example;\n`;\nexport const ErrorInputCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-1\" label=\"Label\" isError={true} placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isDisabled\"\n          }), \" prop to disable a input\\nthat is not usable.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          id: \"input-id-1\",\n          label: \"Label\",\n          placeholder: \"Placeholder\",\n          isDisabled: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DisabledInputCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Value Entered\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"value\"\n          }), \" prop to input to set it's value.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          id: \"input-id-2\",\n          value: \"Default\",\n          label: \"Label\",\n          placeholder: \"Placeholder\",\n          icon: \"close\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ValueEnteredInputCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Read Only\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Add the \", _jsx(Code, {\n            small: true,\n            children: \"readOnly\"\n          }), \" prop to set input readonly.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          id: \"input-id-3\",\n          label: \"Label\",\n          placeholder: \"Placeholder\",\n          isReadOnly: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ReadOnlyInputCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Error\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isError\"\n          }), \" prop.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          id: \"input-id-4\",\n          label: \"Label\",\n          isError: true,\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ErrorInputCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Input} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallInputCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-4\" label=\"Label\" placeholder=\"Placeholder\" isSmall={true} />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Set the \", _jsx(Code, {\n          small: true,\n          children: \"isSmall\"\n        }), \" prop to reduce the input\\nheight, fitting with the design context.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Input, {\n        id: \"input-id-4\",\n        label: \"Label\",\n        placeholder: \"Placeholder\",\n        isSmall: true\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallInputCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Input} from '../../../src';\nimport dedent from 'dedent';\nexport const LeadInputCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input label=\"Icon before\" iconLead=\"user\" id=\"input-id-2\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nexport const TrailInputCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input label=\"Icon after\" iconTrail=\"user\" id=\"input-id-3\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Leading\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Display an icon before the text.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          label: \"Icon before\",\n          iconLead: \"user\",\n          id: \"input-id-2\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: LeadInputCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Trailing\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Display an icon after the text.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          label: \"Icon after\",\n          iconTrail: \"user\",\n          id: \"input-id-3\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: TrailInputCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {Input} from '../../src';\nimport dedent from 'dedent';\nimport States from './Examples/States.mdx';\nimport Size from './Examples/Size.mdx';\nimport Icon from './Examples/Icon.mdx';\nexport const sampleCode = dedent`\nimport React from 'react';\\n\nimport { Input } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Input id=\"input-id-1\" label=\"Label\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default form of a field, used for most cases.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Input, {\n          id: \"input-id-1\",\n          label: \"Label\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        }), _jsx(\"div\", {\n          label: \"Input with Icon\",\n          value: \"icon\",\n          children: _jsx(Icon, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}