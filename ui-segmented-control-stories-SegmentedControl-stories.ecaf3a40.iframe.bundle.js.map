{"version":3,"file":"ui-segmented-control-stories-SegmentedControl-stories.ecaf3a40.iframe.bundle.js","mappings":";;;;;;;AAiBA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA","sources":["webpack://wpmudev-sui/./packages/ui/segmented-control/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet} from \"@wpmudev/sui-docs\";\nimport dedent from \"dedent\";\nimport {SegmentedControl, SegmentedControlButton} from \"../../src\";\nexport const sampleCode = dedent`\n        <SegmentedControl name=\"controls\">\n            <SegmentedControlButton value=\"administrator\">Administrator</SegmentedControlButton>\n            <SegmentedControlButton value=\"editor\">Editor</SegmentedControlButton>\n            <SegmentedControlButton value=\"author\">Author</SegmentedControlButton>\n            <SegmentedControlButton value=\"subscriber\">Subscriber</SegmentedControlButton>\n        </SegmentedControl>\n`;\nexport const fullWidthCode = dedent`\n        <SegmentedControl name=\"controls\" isFullWidth={true}>\n            <SegmentedControlButton value=\"administrator\">Administrator</SegmentedControlButton>\n            <SegmentedControlButton value=\"editor\">Editor</SegmentedControlButton>\n            <SegmentedControlButton value=\"author\">Author</SegmentedControlButton>\n            <SegmentedControlButton value=\"subscriber\">Subscriber</SegmentedControlButton>\n        </SegmentedControl>\n`;\nexport const withIconsCode = dedent`\n        <SegmentedControl name=\"controls\">\n            <SegmentedControlButton value=\"administrator\">Administrator</SegmentedControlButton>\n            <SegmentedControlButton value=\"editor\" icon=\"Calendar\">Editor</SegmentedControlButton>\n            <SegmentedControlButton value=\"author\" icon=\"Bell\">Author</SegmentedControlButton>\n            <SegmentedControlButton value=\"subscriber\">Subscriber</SegmentedControlButton>\n        </SegmentedControl>\n`;\nexport const IconsOnly = dedent`\n        <SegmentedControl name=\"controls\">\n            <SegmentedControlButton value=\"calendar\" icon=\"Calendar\" />\n            <SegmentedControlButton value=\"bell\" icon=\"Bell\" />\n            <SegmentedControlButton value=\"add\" icon=\"Add\" />\n            <SegmentedControlButton value=\"caret-right\" icon=\"CaretRight\" />\n        </SegmentedControl>\n`;\nexport const disabledCode = dedent`\n        <SegmentedControl name=\"controls\">\n            <SegmentedControlButton value=\"administrator\">Administrator</SegmentedControlButton>\n            <SegmentedControlButton value=\"editor\" icon=\"Calendar\">Editor</SegmentedControlButton>\n            <SegmentedControlButton value=\"author\" icon=\"Bell\">Author</SegmentedControlButton>\n            <SegmentedControlButton isDisabled={true} value=\"subscriber\">Subscriber</SegmentedControlButton>\n        </SegmentedControl>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Basic Segmented Control Example\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(SegmentedControl, {\n          children: [_jsx(SegmentedControlButton, {\n            value: \"administrator\",\n            children: \"Administrator\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"editor\",\n            children: \"Editor\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"author\",\n            children: \"Author\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Full Width\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(SegmentedControl, {\n          isFullWidth: true,\n          children: [_jsx(SegmentedControlButton, {\n            value: \"administrator\",\n            children: \"Administrator\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"editor\",\n            children: \"Editor\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"author\",\n            children: \"Author\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: fullWidthCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Icons\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(SegmentedControl, {\n          children: [_jsx(SegmentedControlButton, {\n            value: \"administrator\",\n            children: \"Administrator\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"editor\",\n            icon: \"Calendar\",\n            children: \"Editor\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"author\",\n            icon: \"Bell\",\n            children: \"Author\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: withIconsCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Icons Only\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(SegmentedControl, {\n          children: [_jsx(SegmentedControlButton, {\n            value: \"calendar\",\n            icon: \"Calendar\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"bell\",\n            icon: \"Bell\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"add\",\n            icon: \"Add\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"caret-right\",\n            icon: \"CaretRight\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: IconsOnly\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Disabled button\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(SegmentedControl, {\n          children: [_jsx(SegmentedControlButton, {\n            value: \"administrator\",\n            children: \"Administrator\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"editor\",\n            icon: \"Calendar\",\n            children: \"Editor\"\n          }), _jsx(SegmentedControlButton, {\n            value: \"author\",\n            icon: \"Bell\",\n            children: \"Author\"\n          }), _jsx(SegmentedControlButton, {\n            isDisabled: true,\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: disabledCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}