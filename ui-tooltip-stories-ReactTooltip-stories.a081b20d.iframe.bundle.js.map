{"version":3,"file":"ui-tooltip-stories-ReactTooltip-stories.a081b20d.iframe.bundle.js","mappings":";;AAYA;;;;;;;;;AAUA;;AAGA;;;;;;;;;ACNA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAUA;;ACnCA;;AAGA","sources":["webpack://wpmudev-sui/./packages/ui/tooltip/stories/tabs/Examples/Types.mdx","webpack://wpmudev-sui/./packages/ui/tooltip/stories/tabs/Examples/Position.mdx","webpack://wpmudev-sui/./packages/ui/tooltip/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet} from \"@wpmudev/sui-docs\";\nimport {Tooltip} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const textCode = dedent`\n  <Tooltip label=\"Text\" type=\"text\" >Tooltip Text</Tooltip>\n`;\nexport const buttonCode = dedent`\n  <Tooltip\n      label=\"Button\"\n      type=\"button\"\n      appearance=\"primary\"\n      color=\"black\"\n  >\n        Tooltip Text\n  </Tooltip>\n`;\nexport const iconCode = dedent`\n  <Tooltip type=\"icon\" name=\"logo\">Tooltip Text</Tooltip>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Text\",\n      contained: true,\n      style: {\n        padding: \"30px 0px\"\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: 40\n          },\n          children: _jsx(Tooltip, {\n            label: \"Text\",\n            type: \"text\",\n            children: \"Tooltip Text\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: textCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Button\",\n      contained: true,\n      style: {\n        padding: \"30px 0px\"\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: 40\n          },\n          children: _jsx(Tooltip, {\n            label: \"Button\",\n            type: \"button\",\n            appearance: \"primary\",\n            color: \"black\",\n            children: \"Tooltip Text\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: buttonCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Icon\",\n      contained: true,\n      style: {\n        padding: \"30px 0px\"\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: 40\n          },\n          children: _jsx(Tooltip, {\n            type: \"icon\",\n            name: \"logo\",\n            children: \"Tooltip Text\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: iconCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet} from \"@wpmudev/sui-docs\";\nimport {Tooltip} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const topCode = dedent`\n  // Top Left\n  <Tooltip label=\"Top Left\" position=\"top-left\">Tooltip Text</Tooltip>\n\n  // Top Center\n  <Tooltip label=\"Top Center\" position=\"top\">Tooltip Text</Tooltip>\n\n  // Top Right\n  <Tooltip label=\"Top Right\" position=\"top-right\">Tooltip Text</Tooltip>\n`;\nexport const bottomCode = dedent`\n  // Bottom Left\n  <Tooltip label=\"Bottom Left\" position=\"bottom-left\">Tooltip Text</Tooltip>\n\n  // Bottom Center\n  <Tooltip label=\"Bottom Center\" position=\"bottom\">Tooltip Text</Tooltip>\n\n  // Bottom Right\n  <Tooltip label=\"Bottom Right\" position=\"bottom-right\">Tooltip Text</Tooltip>\n`;\nexport const rightCode = dedent`\n  // Right Top\n  <Tooltip label=\"Right top\" position=\"right-top\">Tooltip Text</Tooltip>\n\n  // Right Center\n  <Tooltip label=\"Right Center\" position=\"right\">Tooltip Text</Tooltip>\n\n  // Right Bottom\n  <Tooltip label=\"Right Bottom\" position=\"right-bottom\">Tooltip Text</Tooltip>\n`;\nexport const leftCode = dedent`\n  // Left Top\n  <Tooltip label=\"Left top\" position=\"left-top\">Tooltip Text</Tooltip>\n\n  // Left Center\n  <Tooltip label=\"Left Center\" position=\"left\">Tooltip Text</Tooltip>\n\n  // Left Bottom\n  <Tooltip label=\"Left Bottom\" position=\"left-bottom\">Tooltip Text</Tooltip>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Top\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            padding: 40,\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [_jsx(Tooltip, {\n            label: \"Top Left\",\n            position: \"top-left\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Top Center\",\n            position: \"top\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Top Right\",\n            position: \"top-right\",\n            children: \"Tooltip Text\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: topCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Bottom\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            padding: 40,\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [_jsx(Tooltip, {\n            label: \"Bottom Left\",\n            position: \"bottom-left\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Bottom Center\",\n            position: \"bottom\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Bottom Right\",\n            position: \"bottom-right\",\n            children: \"Tooltip Text\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: bottomCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Left\",\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [_jsx(Tooltip, {\n            label: \"Left Top\",\n            position: \"left-top\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Left Center\",\n            position: \"left\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Left Bottom\",\n            position: \"left-bottom\",\n            children: \"Tooltip Text\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: leftCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Right\",\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [_jsx(Tooltip, {\n            label: \"Right Top\",\n            position: \"right-top\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Right Center\",\n            position: \"right\",\n            children: \"Tooltip Text\"\n          }), _jsx(Tooltip, {\n            label: \"Right Bottom\",\n            position: \"right-bottom\",\n            children: \"Tooltip Text\"\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: rightCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Tooltip} from \"../../src\";\nimport dedent from \"dedent\";\nimport Types from \"./Examples/Types.mdx\";\nimport Position from \"./Examples/Position.mdx\";\nexport const sampleCode = dedent`\n    <Tooltip label=\"Button Label\">Tooltip Text</Tooltip>\n`;\nexport const customWidth = dedent`\n    <Tooltip customWidth={50} label=\"Button Text\">Custom Width</Tooltip>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"The default form of the tooltip component\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: 40\n          },\n          children: _jsx(Tooltip, {\n            label: \"Button Text\",\n            children: \"Tooltip Text\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Custom Width\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use \", _jsx(Code, {\n          small: true,\n          children: \" customWidth \"\n        }), \" prop to set a custom width for the tooltip\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            padding: 60\n          },\n          children: _jsx(Tooltip, {\n            customWidth: 50,\n            label: \"Button Text\",\n            children: \"Custom Width\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: customWidth\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Types\",\n          value: \"types\",\n          children: _jsx(Types, {})\n        }), _jsx(\"div\", {\n          label: \"Position\",\n          value: \"position\",\n          children: _jsx(Position, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}