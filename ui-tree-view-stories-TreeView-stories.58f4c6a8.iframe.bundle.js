"use strict";(self.webpackChunkwpmudev_sui=self.webpackChunkwpmudev_sui||[]).push([[5853],{"./packages/ui/tree-view/stories/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TreeView:()=>TreeView_stories_TreeView,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const getCheckIndex=(id,group,items)=>items.findIndex((i=>i.id===id&&i.group===group)),getGroupItems=(groupId,checks,toOverride={})=>{const filteredItems=(checks??[])?.filter((item=>item.group===groupId));return(filteredItems??[])?.flatMap((item=>"group"===item.type?getGroupItems(item.id,checks,toOverride):{...item,...toOverride}))},getGroupState=(group="",items=[])=>{const groupList=getGroupItems(group,items),checkedItems=groupList.filter((item=>!!item?.isChecked));return 0===checkedItems.length?"none":groupList.length!==checkedItems.length?"indeterminate":"all"},TreeViewContext=(0,react.createContext)({items:[],onCheck:(id,isChecked,type,groupId,isGroup)=>null,setItems:items=>null}),useTreeViewContext=()=>{const ctx=(0,react.useContext)(TreeViewContext),{items,setItems}=ctx,onCheck=(0,react.useCallback)((obj=>{const{id,group,isChecked,type}=obj;setItems((prev=>{const cloned=[...prev];if("group"===type&&void 0!==isChecked){const state=getGroupState(group,prev);return((checkList=[],mergeWith=[])=>(mergeWith.forEach((item=>{const index=getCheckIndex(item?.id,item.group,checkList);index>-1&&(checkList[index]=item)})),checkList))(cloned,getGroupItems(group,prev,{isChecked:["none","indeterminate"].includes(state)??isChecked}))}const index=getCheckIndex(id,group,prev);return index>-1?cloned[index]=obj:cloned.push(obj),cloned}))}),[setItems]);return{allowCheck:ctx?.allowCheck,showIcons:ctx?.showIcons,items,onCheck}},TreeViewProvider=({children,value})=>(0,jsx_runtime.jsx)(TreeViewContext.Provider,{value,children});var hooks_src=__webpack_require__("./packages/hooks/src/index.ts");const TreeView=({className="",children,allowCheck=!1,showIcons=!1,onChange=()=>{}})=>{const[items,setItems]=(0,react.useState)([]);return children=(0,hooks_src.Um)(children,"{TreeView Content}"),(0,react.useEffect)((()=>{onChange&&onChange(items.filter((item=>"single"===item?.type)).map((({id,isChecked,group})=>({id,isChecked,group}))))}),[items,onChange]),(0,jsx_runtime.jsx)(TreeViewProvider,{value:{allowCheck,showIcons,items,setItems},children:(0,jsx_runtime.jsx)("nav",{className:(0,src.uY)("sui-tree-view",{},className??""),"data-testid":"tree-view",children:(0,jsx_runtime.jsx)("ul",{role:"tree",children})})})};var checkbox_src=__webpack_require__("./packages/ui/checkbox/src/index.ts"),components=__webpack_require__("./packages/assets/icons/src/components/index.ts");const TreeViewInfo=({id,icon,isExpanded=!1,isChecked=!1,isIndeterminate=!1,isDisabled=!1,children=null,onClick=()=>{},_onGroupCheckClick=()=>{},_groupId,_isGroup=!1})=>{const[isHovered,isFocused,interactionMethods]=(0,hooks_src.X2)({}),classNames=(0,src.uY)("sui-tree-view__info",{active:isExpanded,disabled:isDisabled,hover:isHovered,focus:isFocused}),ctx=useTreeViewContext(),TickIcon=isExpanded?components.ZP?.ChevronDown:components.ZP?.ChevronRight;let ItemIcon=components.ZP?.FileCode;_isGroup&&(ItemIcon=isExpanded?components.ZP?.FolderOpen:components.ZP?.FolderClose),icon&&(ItemIcon=components.ZP[icon]),isDisabled&&(ItemIcon=components.ZP?.LockAlt),_isGroup||(isChecked=((id="",group="",items=[])=>{const index=getCheckIndex(id,group,items);return items?.[index]?.isChecked??!1})(id,_groupId,ctx?.items));const onCheckClick=(0,react.useCallback)((e=>{e.stopPropagation();const{checked}=e.target;_isGroup&&_onGroupCheckClick?_onGroupCheckClick(checked):ctx?.onCheck({id,isChecked:checked,type:_isGroup?"group":"single",group:_isGroup?"":_groupId})}),[_isGroup,ctx,id,_groupId,_onGroupCheckClick]);return(0,jsx_runtime.jsxs)("div",{className:classNames,id:`info-${id}`,"data-testid":_isGroup?"":"tree-view-item-info",...!ctx?.allowCheck&&{tabIndex:isDisabled?-1:0,role:"button",onClick,onKeyDown:e=>(0,src.Jw)(e,onClick)},...interactionMethods??{},children:[ctx?.allowCheck&&(0,jsx_runtime.jsx)("div",{tabIndex:isDisabled?-1:0,role:"button",onClick,onKeyDown:e=>(0,src.Jw)(e,onClick),"aria-label":id,className:"sui-accessible-cta"}),_isGroup&&(0,jsx_runtime.jsx)(TickIcon,{size:"sm",className:"sui-tree-view__info-icon"}),ctx?.allowCheck&&!isDisabled&&(0,jsx_runtime.jsx)("div",{className:"sui-tree-view__info-check",children:(0,jsx_runtime.jsx)(checkbox_src.XZ,{onChange:onCheckClick,isChecked:isChecked??!1,isIndeterminate,isDisabled})}),(0,jsx_runtime.jsxs)("div",{className:"sui-tree-view__info-title",children:[!!ItemIcon&&(!!ctx?.showIcons||isDisabled)&&(0,jsx_runtime.jsx)(ItemIcon,{size:"sm",className:"sui-tree-view__info-icon"}),(0,jsx_runtime.jsx)("span",{id:`${id}-title`,children})]})]})},TreeViewItem=({id="",groupId="",icon,isChecked=!1,isGroup=!1,isExpanded=!1,isDisabled=!1,className="",children})=>{const classNames=(0,src.uY)("sui-tree-view__item",{},className??""),context=useTreeViewContext(),uniqueId=(0,react.useId)();id||(id=uniqueId);const itemId=id;return children=(0,hooks_src.Um)(children,"{item content}"),(0,react.useEffect)((()=>{isGroup||isDisabled||context?.onCheck({id:id??"",isChecked,type:isGroup?"group":"single",group:groupId})}),[]),(0,jsx_runtime.jsx)("li",{id,className:classNames,role:"treeitem","aria-labelledby":id,"aria-describedby":`${id} ${itemId}-info-title`,"aria-expanded":isExpanded,"aria-selected":!1,children:isGroup?children:(0,jsx_runtime.jsx)(TreeViewInfo,{id:itemId??"",icon,isDisabled:isDisabled??!1,_isGroup:!1,_groupId:groupId,children})})},TreeViewGroup=({id,parentGroupId,icon,title="group title",className="",children,isDisabled=!1})=>{const[isOpen,setIsOpen]=(0,react.useState)(!1),context=useTreeViewContext(),classNames=(0,src.uY)("sui-tree-view__group",{},className??""),uniqueId=(0,react.useId)();id||(id=uniqueId),(0,react.useEffect)((()=>{void 0!==parentGroupId&&context?.onCheck({id:id??"",isChecked:void 0,type:"group",group:parentGroupId})}),[]);const onGroupCheckboxClick=(0,react.useCallback)(((isChecked=!1)=>{context?.onCheck({id:"",isChecked,type:"group",group:id})}),[context,id]),checkboxState=getGroupState(id,context?.items);return(0,jsx_runtime.jsxs)(TreeViewItem,{id,isExpanded:isOpen,isGroup:!0,children:[(0,jsx_runtime.jsx)(TreeViewInfo,{id,isExpanded:isOpen,onClick:()=>setIsOpen(!isOpen),isIndeterminate:"indeterminate"===checkboxState,isChecked:"all"===checkboxState,icon,isDisabled:isDisabled??!1,_isGroup:!0,_onGroupCheckClick:onGroupCheckboxClick,children:title}),(0,jsx_runtime.jsx)("ul",{role:"group","aria-label":title,className:classNames,"data-test":"tree-view-group",children:react.Children.map(children,((child,index)=>{const type=child.type.name;return react.cloneElement(child,{...child.props,groupId:id,..."TreeViewGroup"===type?{parentGroupId:id}:{}})}))})]})};var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),docs_src=(__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),__webpack_require__("./packages/docs/src/index.ts")),blocks_dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const anatomy_namespaceObject=__webpack_require__.p+"static/media/anatomy.f2c49e09.svg",spacing_namespaceObject=__webpack_require__.p+"static/media/spacing.eeab5fd7.svg",select_anatomy_namespaceObject=__webpack_require__.p+"static/media/select-anatomy.7499ff26.svg",states_namespaceObject=__webpack_require__.p+"static/media/states.023e3412.svg",variations_namespaceObject=__webpack_require__.p+"static/media/variations.5467ea6f.svg";function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.$0,{title:"Tree View Anatomy",contained:!1,children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Tree View"}),(0,jsx_runtime.jsx)("p",{children:"A group of nested tree selectors."}),(0,jsx_runtime.jsx)("h3",{children:"2. Tree Select - Parent"}),(0,jsx_runtime.jsx)("p",{children:"A parent tree selector which includes child tree select items."}),(0,jsx_runtime.jsx)("h3",{children:"3. Tree list"}),(0,jsx_runtime.jsx)("p",{children:"A list of tree selectors."}),(0,jsx_runtime.jsx)("h3",{children:"4. Tree Select - Child"}),(0,jsx_runtime.jsx)("p",{children:"Tree select item with no child items."})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:anatomy_namespaceObject,alt:"Tree View Anatomy"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Spacing",contained:!1,children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Tree view paddings"}),(0,jsx_runtime.jsx)("p",{children:"Spacing for a tree view component may vary based on it’s size, but it is recommended that the spacing adheres to a consistent set of values such as 8px, 16px, or 24px to maintain visual harmony across the design system."}),(0,jsx_runtime.jsx)("h3",{children:"2. Tree Select Margins"}),(0,jsx_runtime.jsx)("p",{children:"The margin between tree selector items should ideally be 4px."}),(0,jsx_runtime.jsx)("h3",{children:"3. Tree list spacings"}),(0,jsx_runtime.jsx)("p",{children:"To ensure that the list items are visually aligned with their parent node, left padding for the tree list component is recommended 24px."})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:spacing_namespaceObject,alt:"Tree View Spacing"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Tree Select Anatomy",contained:!1,children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Expand and Collapse icon"}),(0,jsx_runtime.jsx)("h3",{children:"2. Checkbox - optional"}),(0,jsx_runtime.jsx)("h3",{children:"3. Supporting Icon - optional"}),(0,jsx_runtime.jsx)("h3",{children:"3. Label"})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:select_anatomy_namespaceObject,alt:"Tree Select Anatomy"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"States",contained:!1,children:(0,jsx_runtime.jsx)("img",{src:states_namespaceObject,alt:"Tree View States"})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Variations",contained:!1,children:(0,jsx_runtime.jsx)("img",{src:variations_namespaceObject,alt:"Tree View Variations"})})]})}const TabUsage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent()};function TabCode_createMdxContent(props){const _components=Object.assign({p:"p",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Hl,{packageName:"@wpmudev/sui-tree-view"}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Props",border:!0,children:[(0,jsx_runtime.jsx)(docs_src.Yb,{title:"children",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Content of the Tree View"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"allowCheck",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["If set to ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"true"})," both elements & groups will display a checkbox"]})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"showIcons",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["When the value is ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"true"}),", both elements and groups will display inline icons."]})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"className",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Additional css class name for the Tree View"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"onChange",type:"function",children:(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsx)(_components.p,{children:"A callback function to be executed upon change of the state of any item's checkbox, the first parameter is an array of objects where each object represents an element in the tree, it has the following parameters:"}),(0,jsx_runtime.jsxs)(docs_src.aV,{children:[(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"id "})," represents the id of the item"]})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"isChecked"})," represent the item check state"]})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"group"})," represent the group id that the item belongs to"]})})]})]})})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Sub Components",contained:!0,style:{paddingTop:30,paddingBottom:0},children:[(0,jsx_runtime.jsx)("p",{children:"The Tree View component offers a collection of nested subcomponents to be utilized within it. These subcomponents include:"}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:"TreeViewGroup",contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"This component represents a group in the tree view."})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"id",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The group unique id"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"title",type:"string",defaultValue:"group title",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Title for the group"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"icon",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Custom Icon to display inline with the title, you can check available icons on ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/wpmudev/sui-icons",target:"_blank",rel:"nofollow noopener noreferrer",children:"sui-icons"})," package. note that ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"showIcons"})," need to be set to ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:" true "})," in the parent ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:" TreeView "})," component in order for the icon to be displayed"]})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isDisabled",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Enables deactivation of the group, when set to true, the group won't open upon clicking"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"children",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The content of the group item"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"className",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Additional css class name for the component"})})})]}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:"TreeViewItem",contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"This component represents a group in the tree view."})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"id",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Unique ID for the tree view item"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"icon",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Custom Icon to display inline with the content, you can check available icons on ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/wpmudev/sui-icons",target:"_blank",rel:"nofollow noopener noreferrer",children:"sui-icons"})," package.\nnote that ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"showIcons"})," need to be set to ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:" true "})," in the parent ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:" TreeView "})," component in order for the icon to be displayed"]})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isDisabled",type:"boolean",defaultValue:!1,children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Enables deactivation of the group, when set to true, the group won't open upon clicking"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"children",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The content of the TreeView item"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"className",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Additional css class name for the item"})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isChecked",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Whether the checkbox is checked or not, it only has effect when TreeView ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"allowCheck"})," prop set to ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"true"}),"."]})})}),(0,jsx_runtime.jsx)(docs_src.Yb,{title:"isExpanded",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Indicates whether the item is expanded or not"})})})]})]})]})}const TabCode=function TabCode_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabCode_createMdxContent,props)})):TabCode_createMdxContent(props)};var dedent=__webpack_require__("./node_modules/dedent/dist/dedent.js"),dedent_default=__webpack_require__.n(dedent);const defaultCode=dedent_default()`
        <TreeView>
            <TreeViewGroup id="group-1" title="Tree Group">
                <TreeViewGroup id="group-2" title="Tree Group">
                    <TreeViewItem id="item-1">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-2">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-3">Tree Item</TreeViewItem>
                    <TreeViewGroup id="group-4" title="Tree Group">
                        <TreeViewItem id="item-4">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-5">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-6">Tree Item</TreeViewItem>
                    </TreeViewGroup>
                </TreeViewGroup>
                <TreeViewItem id="item-7">Tree Item</TreeViewItem>
                <TreeViewItem id="item-8">Tree Item</TreeViewItem>
                <TreeViewItem id="item-9">Tree Item</TreeViewItem>
                <TreeViewGroup id="group-5" title="Tree Group">
                    <TreeViewItem id="item-10">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-11">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-12">Tree Item</TreeViewItem>
                </TreeViewGroup>
                <TreeViewGroup id="group-6" title="Tree Group">
                    <TreeViewItem id="item-13">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-14">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-15">Tree Item</TreeViewItem>
                </TreeViewGroup>
                <TreeViewItem id="item-16">Tree Item</TreeViewItem>
                <TreeViewItem id="item-17">Tree Item</TreeViewItem>
            </TreeViewGroup>
        </TreeView>
`,displayIconsCode=dedent_default()`
        <TreeView showIcons={true}>
            <TreeViewGroup id="group-1" title="Tree Group">
                <TreeViewGroup id="group-2" title="Tree Group">
                    <TreeViewItem id="item-1">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-2">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-3">Tree Item</TreeViewItem>
                    <TreeViewGroup id="group-4" title="Tree Group">
                        <TreeViewItem id="item-4">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-5">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-6">Tree Item</TreeViewItem>
                    </TreeViewGroup>
                </TreeViewGroup>
                <TreeViewItem id="item-7">Tree Item</TreeViewItem>
                <TreeViewItem id="item-8">Tree Item</TreeViewItem>
                <TreeViewItem id="item-9">Tree Item</TreeViewItem>
        </TreeView>
`,customIconsCode=dedent_default()`
        <TreeView showIcons={true}>
            <TreeViewGroup icon="ArrowDown" id="group-1" title="Tree Group">
                <TreeViewGroup icon="ArrowDown" id="group-2" title="Tree Group">
                    <TreeViewItem icon="Bell" id="item-1">Tree Item</TreeViewItem>
                    <TreeViewItem icon="Bell" id="item-2">Tree Item</TreeViewItem>
                    <TreeViewItem icon="Bell" id="item-3">Tree Item</TreeViewItem>
                    <TreeViewGroup icon="ArrowDown" id="group-4" title="Tree Group">
                        <TreeViewItem icon="Bell" id="item-4">Tree Item</TreeViewItem>
                        <TreeViewItem icon="Bell" id="item-5">Tree Item</TreeViewItem>
                        <TreeViewItem icon="Bell" id="item-6">Tree Item</TreeViewItem>
                    </TreeViewGroup>
                </TreeViewGroup>
                <TreeViewItem icon="Bell" id="item-7">Tree Item</TreeViewItem>
                <TreeViewItem icon="Bell" id="item-8">Tree Item</TreeViewItem>
                <TreeViewItem icon="Bell" id="item-9">Tree Item</TreeViewItem>
        </TreeView>
`,checkboxCode=dedent_default()`
        <TreeView allowCheck={true} onChange={items => console.log(items)}>
            <TreeViewGroup id="group-1" title="Tree Group">
                <TreeViewGroup id="group-2" title="Tree Group">
                    <TreeViewItem id="item-1">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-2">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-3">Tree Item</TreeViewItem>
                    <TreeViewGroup id="group-4" title="Tree Group">
                        <TreeViewItem id="item-4">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-5">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-6">Tree Item</TreeViewItem>
                    </TreeViewGroup>
                </TreeViewGroup>
                <TreeViewItem id="item-7">Tree Item</TreeViewItem>
                <TreeViewItem id="item-8">Tree Item</TreeViewItem>
                <TreeViewItem id="item-9">Tree Item</TreeViewItem>
                <TreeViewGroup id="group-5" title="Tree Group">
                    <TreeViewItem id="item-10">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-11">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-12">Tree Item</TreeViewItem>
                </TreeViewGroup>
                <TreeViewGroup id="group-6" title="Tree Group">
                    <TreeViewItem id="item-13">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-14">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-15">Tree Item</TreeViewItem>
                </TreeViewGroup>
                <TreeViewItem id="item-16">Tree Item</TreeViewItem>
                <TreeViewItem id="item-17">Tree Item</TreeViewItem>
            </TreeViewGroup>
        </TreeView>
`,disabledItemsCode=dedent_default()`
        <TreeView showIcons={true}>
            <TreeViewGroup id="group-1" title="Tree Group">
                <TreeViewGroup isDisabled={true} id="group-2" title="Tree Group">
                    <TreeViewItem id="item-1">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-2">Tree Item</TreeViewItem>
                    <TreeViewItem id="item-3">Tree Item</TreeViewItem>
                    <TreeViewGroup id="group-4" title="Tree Group">
                        <TreeViewItem id="item-4">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-5">Tree Item</TreeViewItem>
                        <TreeViewItem id="item-6">Tree Item</TreeViewItem>
                    </TreeViewGroup>
                </TreeViewGroup>
                <TreeViewItem id="item-7">Tree Item</TreeViewItem>
                <TreeViewItem id="item-8">Tree Item</TreeViewItem>
                <TreeViewItem isDisabled={true} id="item-9">Tree Item</TreeViewItem>
        </TreeView>
`;function TabExamples_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,style:{paddingTop:0},children:[(0,jsx_runtime.jsx)("p",{children:"Below is the default form of a tree view:"}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(TreeView,{children:(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-2",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-1",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-2",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-3",children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-4",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-4",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-5",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-6",children:"Tree Item"})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-7",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-8",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-9",children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-5",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-10",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-11",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-12",children:"Tree Item"})]}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-6",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-13",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-14",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-15",children:"Tree Item"})]}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-16",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-17",children:"Tree Item"})]})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:defaultCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"With Icons",contained:!0,style:{paddingTop:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(TreeView,{showIcons:!0,children:(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-2",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-1",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-2",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-3",children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-4",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-4",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-5",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-6",children:"Tree Item"})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-7",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-8",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-9",children:"Tree Item"})]})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:displayIconsCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"With Custom Icons",contained:!0,style:{paddingTop:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(TreeView,{showIcons:!0,children:(0,jsx_runtime.jsxs)(TreeViewGroup,{icon:"ArrowDown",id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{icon:"ArrowDown",id:"group-2",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-1",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-2",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-3",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsxs)(TreeViewGroup,{icon:"ArrowDown",id:"group-4",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-4",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-5",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-6",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-7",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-8",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-9",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})})]})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:customIconsCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"With Checkbox",contained:!0,style:{paddingTop:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(TreeView,{allowCheck:!0,onChange:items=>console.log(items),children:(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-2",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-1",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-2",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-3",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-4",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-4",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-5",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})}),(0,jsx_runtime.jsx)(TreeViewItem,{icon:"Bell",id:"item-6",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-7",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-8",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-9",children:"Tree Item"})]})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:checkboxCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Disabled Items",contained:!0,style:{paddingTop:0},children:[(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(TreeView,{allowCheck:!0,children:(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{isDisabled:!0,id:"group-2",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-1",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-2",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-3",children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{id:"group-4",title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-4",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-5",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-6",children:"Tree Item"})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-7",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{id:"item-8",children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{isDisabled:!0,id:"item-9",children:(0,jsx_runtime.jsx)(_components.p,{children:"Tree Item"})})]})})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:disabledItemsCode})]})]})}const TabExamples=function TabExamples_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabExamples_createMdxContent,props)})):TabExamples_createMdxContent(props)};function TreeView_createMdxContent(props){return docs_src.T3||_missingMdxReference("Page",!1),docs_src.T3.Tabs||_missingMdxReference("Page.Tabs",!0),(0,jsx_runtime.jsx)(blocks_dist.E$,{children:(0,jsx_runtime.jsxs)(docs_src.T3.Tabs,{title:"Tree View",subtitle:"Tree view is a nested structure of navigation to display hierarchical\ndata, such as file directories or organisational charts.",status:"ready",children:[(0,jsx_runtime.jsx)("div",{id:"usage",label:"Usage",children:(0,jsx_runtime.jsx)(TabUsage,{})}),(0,jsx_runtime.jsx)("div",{id:"code",label:"Code",children:(0,jsx_runtime.jsx)(TabCode,{})}),(0,jsx_runtime.jsx)("div",{id:"examples",label:"Examples",children:(0,jsx_runtime.jsx)(TabExamples,{})})]})})}function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}const TreeView_stories={title:"SUI/Components/Advanced/Tree View",component:TreeView,parameters:{layout:"fullscreen",docs:{page:function TreeView_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TreeView_createMdxContent,props)})):TreeView_createMdxContent()}}}},TreeView_stories_TreeView=({...args})=>(0,jsx_runtime.jsx)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:(0,jsx_runtime.jsx)("div",{className:"sui-layout__content",children:(0,jsx_runtime.jsx)("div",{style:{padding:20,borderRadius:4,background:"#fff"},children:(0,jsx_runtime.jsx)(TreeView,{...args,children:(0,jsx_runtime.jsxs)(TreeViewGroup,{icon:"Bell",id:"group-1",title:"Tree Group",children:[(0,jsx_runtime.jsxs)(TreeViewGroup,{title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{isChecked:!0,children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"})]})]}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsxs)(TreeViewGroup,{title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"})]}),(0,jsx_runtime.jsxs)(TreeViewGroup,{title:"Tree Group",children:[(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"})]}),(0,jsx_runtime.jsx)(TreeViewItem,{isDisabled:!0,children:"Tree Item"}),(0,jsx_runtime.jsx)(TreeViewItem,{children:"Tree Item"})]})})})})});TreeView_stories_TreeView.args={allowCheck:!1,showIcons:!1},TreeView_stories_TreeView.argTypes={allowCheck:{name:"Allow Check",control:{type:"boolean"}},showIcons:{name:"Show Icons",control:{type:"boolean"}}};const __namedExportsOrder=["TreeView"]},"./packages/hooks/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Um:()=>useDefaultChildren,fV:()=>useDetectBrowser,p4:()=>useDetectRTL,Y9:()=>useDragAndDrop,X2:()=>useInteraction,rw:()=>useOuterClick,vI:()=>usePortal,D9:()=>usePrevious,GT:()=>useValidateProps});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const useInteraction=methods=>{const[isHovered,setIsHovered]=(0,react.useState)(!1),[isFocused,setIsFocused]=(0,react.useState)(!1),{onMouseEnter,onMouseLeave,onMouseDownCapture,onMouseUp,onMouseUpCapture,onFocus,onBlur,onBlurCapture}=methods,toggleHover=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsHovered(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),toggleFocus=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsFocused(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),onMouseUpCallback=(0,react.useCallback)((e=>{const target=e?.currentTarget;target&&(target?.focus(),toggleFocus(!0,e,(event=>{onMouseUp&&onMouseUp(event)})))}),[onMouseUp,toggleFocus]),onMouseEnterCallback=(0,react.useCallback)((e=>toggleHover(!0,e,(event=>{onMouseEnter&&onMouseEnter(event)}))),[onMouseEnter,toggleHover]),onMouseLeaveCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(()=>{onMouseLeave&&onMouseLeave(event)}))),[onMouseLeave,toggleHover]),onMouseDownCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onMouseDownCapture&&onMouseDownCapture(event)}))),[onMouseDownCapture,toggleFocus]),onMouseUpCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onMouseUpCapture&&onMouseUpCapture(event)}))),[onMouseUpCapture,toggleFocus]),onBlurCaptureCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(event=>{onBlurCapture&&onBlurCapture(event)}))),[onBlurCapture,toggleHover]),onBlurCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onBlur&&onBlur(event)}))),[onBlur,toggleFocus]);return[isHovered,isFocused,{onMouseUp:onMouseUpCallback,onMouseEnter:onMouseEnterCallback,onMouseLeave:onMouseLeaveCallback,onMouseDownCapture:onMouseDownCaptureCallback,onMouseUpCapture:onMouseUpCaptureCallback,onFocus:(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onFocus&&onFocus(event)}))),[onFocus,toggleFocus]),onBlur:onBlurCallback,onBlurCapture:onBlurCaptureCallback},toggleHover,toggleFocus]},useOuterClick=(ref,callback=(()=>{}))=>{const onPageClick=(0,react.useCallback)((event=>{ref?.current&&!ref?.current.contains(event.target)&&callback()}),[callback,ref]);(0,react.useEffect)((()=>(document.addEventListener("click",onPageClick),()=>{document.removeEventListener("click",onPageClick)})))};var react_dom=__webpack_require__("./node_modules/react-dom/index.js");const usePortal=wrapperId=>{const[wrapperElement,setWrapperElement]=(0,react.useState)(null);wrapperId=wrapperId??".sui-wrap",(0,react.useLayoutEffect)((()=>{let el=document.querySelector(wrapperId),systemCreated=!1;return el||(systemCreated=!0,el=(wrapperId=>{const wrapperElement=document.createElement("div");return wrapperElement.setAttribute("id",wrapperId),document.body.appendChild(wrapperElement),wrapperElement})(wrapperId)),setWrapperElement(el),()=>{systemCreated&&el?.parentNode&&el.parentNode.removeChild(el)}}),[wrapperId]);return[children=>null===wrapperElement?null:(0,react_dom.createPortal)(children,wrapperElement)]},useValidateProps=({propsToCheck,component})=>{const componentName=component?.displayName||component?.name;Object.keys(propsToCheck)?.forEach(((propKey,index)=>{if(!!(0,src.xb)(propsToCheck?.[propKey]??""))throw new Error(`Empty content is not valid. More details below:\n\n⬇️ ⬇️ ⬇️\n\n📦 SUI 3 React - Components: ${componentName}\n\nThe "${propKey}" argument requires some value to be passed to it.\n\n`)}))},useDragAndDrop=({containerRef,methods})=>{const[node,setNode]=(0,react.useState)(),[isDragging,setIsDragging]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{setNode(containerRef)}),[containerRef]),(0,react.useEffect)((()=>{const onDragOver=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!0),methods?.onDragOver&&methods?.onDragOver(e)},onDrop=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!1),methods?.onDrop&&methods?.onDrop(e)},current=node?.current;return current?.addEventListener("dragover",onDragOver,!1),current?.addEventListener("drop",onDrop,!1),()=>{current?.removeEventListener("dragover",onDragOver,!1),current?.removeEventListener("drop",onDrop,!1)}}),[containerRef,node,methods]),[isDragging]},useDetectRTL=()=>{const[isRTL,setIsRTL]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{const updateRTL=()=>{const isDocumentRTL="rtl"===document.documentElement.getAttribute("dir");setIsRTL(isDocumentRTL)};updateRTL();const mutationObserver=new MutationObserver(updateRTL);return mutationObserver.observe(document.documentElement,{attributes:!0,attributeFilter:["dir"]}),()=>{mutationObserver.disconnect()}}),[]),isRTL},usePrevious=value=>{const ref=(0,react.useRef)();return(0,react.useEffect)((()=>{ref.current=value}),[value]),ref.current},useDefaultChildren=(children,content)=>children||content||"{children content}",useDetectBrowser=()=>{const userAgent=navigator?.userAgent??"";let name="unknown",ver="";switch(!0){case userAgent.indexOf("Firefox")>-1:name="firefox",ver=userAgent?.match(/Firefox\/([0-9.]+)/)?.[1];break;case userAgent.indexOf("Chrome")>-1:name="chrome",ver=userAgent?.match(/Chrome\/([0-9.]+)/)?.[1];break;case userAgent.indexOf("Safari")>-1:name="safari",ver=userAgent?.match(/Version\/([0-9.]+)/)?.[1];break;case userAgent.indexOf("MSIE")>-1||userAgent.indexOf("Trident/")>-1:name="ie",ver=userAgent?.match(/(?:MSIE |rv:)([0-9.]+)/)?.[1];break;case userAgent.indexOf("Edge")>-1:name="ms-edge",ver=userAgent?.match(/Edge\/([0-9.]+)/)?.[1]}return{name,ver}}},"./packages/ui/checkbox/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ox:()=>CheckBoxGroups,XZ:()=>Checkbox,cO:()=>CheckboxGroup});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const CheckboxContext=(0,react.createContext)({items:[],setItems:items=>{},onChange:(id,isChecked,groupId)=>{}}),CheckboxProvider=({children,onChange})=>{const[items,setItems]=(0,react.useState)([]),handleOnChange=(0,react.useCallback)(((id,isChecked,groupId)=>{"string"==typeof id&&setItems((prevItems=>{const obj={id,groupId,isChecked},existingItemIndex=prevItems.findIndex((item=>item.id===id&&item.groupId===groupId));return existingItemIndex>-1?prevItems[existingItemIndex]=obj:prevItems.push(obj),onChange&&onChange(prevItems),[...prevItems]}))}),[onChange]);return(0,jsx_runtime.jsxs)(CheckboxContext.Provider,{value:{onChange:handleOnChange,items,setItems},children:[children," "]})},useCheckbox=()=>{const ctx=(0,react.useContext)(CheckboxContext);if(!ctx)throw new Error("useCheckbox must be used within a CheckboxContextProvider");return{...ctx,onChange:(id,isChecked,groupId)=>{ctx?.onChange?.(id,isChecked,groupId)},addToList:(id,isChecked,groupId)=>{ctx?.onChange?.(id,isChecked,groupId)}}};var hooks_src=__webpack_require__("./packages/hooks/src/index.ts");const Indeterminate=({...props})=>(0,jsx_runtime.jsx)("span",{...props,children:(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"2",viewBox:"-1 0 12 3",fill:"none",className:"sui-checkbox__icon",children:(0,jsx_runtime.jsx)("path",{d:"M9.7 0H0.3C0.134315 0 0 0.134315 0 0.3V1.7C0 1.86569 0.134315 2 0.3 2H9.7C9.86569 2 10 1.86569 10 1.7V0.3C10 0.134315 9.86569 0 9.7 0Z",fill:"white"})})}),Tick=({...props})=>(0,jsx_runtime.jsx)("span",{...props,children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 12 10",fill:"none",className:"sui-checkbox__icon",children:(0,jsx_runtime.jsx)("path",{d:"M4.23784 9.08831L0.337838 5.16588C0.103533 4.93023 0.103533 4.54815 0.337838 4.31247L1.18635 3.45906C1.42065 3.22338 1.80057 3.22338 2.03488 3.45906L4.66211 6.10137L9.96507 0.91168C10.1994 0.676028 10.5793 0.676028 10.8136 0.91168L11.6621 1.76509C11.8964 2.00074 11.8964 2.38283 11.6621 2.6185L5.08637 9.08833C4.85205 9.32398 4.47215 9.32398 4.23784 9.08831Z"})})}),Checkbox=({id,groupId="",name,value="",label,isLabelHidden=!1,isChecked=!1,isDisabled=!1,isSmall=!1,isIndeterminate=!1,onChange:propOnchange=(e=>{}),...props})=>{const ctx=useCheckbox(),[isHovered,isFocused,methods]=(0,hooks_src.X2)({});let uuid=`sui-checkbox-${(0,react.useId)()}`;id&&(uuid=id),(0,react.useEffect)((()=>{ctx?.addToList(id,isChecked,groupId)}),[id,groupId,isChecked]);const inputProps={id:uuid,type:"checkbox",name,value,className:"sui-accessible-cta sui-checkbox__input",checked:isChecked,disabled:isDisabled,onChange:e=>{ctx?.onChange&&ctx.onChange(uuid,e.target.checked,groupId),propOnchange&&propOnchange(e)},"aria-labelledby":`${uuid}-label`,...props},containerProps={className:(0,src.uY)("sui-checkbox",{"hidden-label":isLabelHidden,indeterminate:isIndeterminate,hover:isHovered,focus:isFocused,disabled:isDisabled,checked:isChecked,sm:isSmall}),...methods},boxProps={className:"sui-checkbox__box","aria-hidden":!0};return(0,jsx_runtime.jsxs)("label",{...containerProps,htmlFor:uuid,tabIndex:-1,"data-testid":"checkbox",children:[(0,jsx_runtime.jsx)("input",{...inputProps,"aria-label":label||"checkbox","data-testid":"checkbox-input"}),isIndeterminate?(0,jsx_runtime.jsx)(Indeterminate,{...boxProps}):(0,jsx_runtime.jsx)(Tick,{...boxProps,tabIndex:-1}),isLabelHidden?(0,jsx_runtime.jsx)("span",{className:"sui-screen-reader-only",children:label}):(0,jsx_runtime.jsx)("span",{className:"sui-checkbox__label",children:label})]})},_CheckboxGroupInner=({hasSubItems,title,children,commonCheckboxProps,isInline,id})=>{const[isFirstRender,setIsFirstRender]=(0,react.useState)(!0),{items,setItems,addToList}=useCheckbox(),uuid=(0,react.useId)(),checkboxGroupId=id??`sui-checkbox-group-${uuid}`,className=(0,src.uY)("sui-checkbox__group",{nested:hasSubItems,inline:isInline}),group=items.filter((item=>item.groupId===checkboxGroupId)),checkedItemsCount=group?.filter((i=>i.isChecked)).length,allChecked=checkedItemsCount===group.length,hasCheckedItems=checkedItemsCount>0,onCheckboxChange=(0,react.useCallback)((()=>{const toUpdate=[];items.forEach((item=>{item.groupId===checkboxGroupId?toUpdate.push({...item,isChecked:!allChecked||!allChecked&&checkedItemsCount>0}):toUpdate.push(item)})),setItems([...toUpdate])}),[items,allChecked,checkedItemsCount,checkboxGroupId,setItems]);return(0,react.useEffect)((()=>{setIsFirstRender(!1)}),[]),(0,jsx_runtime.jsxs)("div",{className,children:[hasSubItems&&(0,jsx_runtime.jsx)(Checkbox,{...commonCheckboxProps,id:checkboxGroupId,label:title??"",isChecked:allChecked&&hasCheckedItems,onChange:onCheckboxChange,isIndeterminate:!!hasCheckedItems&&(hasCheckedItems&&!allChecked)}),(0,jsx_runtime.jsx)("div",{className:"sui-checkbox__group-body",children:react.Children.map(children,((child,index)=>{const chekboxInitialId=child?.props?.id,initialIsChecked=child?.props?.isChecked,checkboxId=chekboxInitialId||`sui-checkbox-item-${uuid}-${index}`,currItem=items.find((i=>i.id===checkboxId&&i.groupId===checkboxGroupId));return(0,react.cloneElement)(child,{...commonCheckboxProps,id:checkboxId,...child?.props,groupId:checkboxGroupId,isChecked:isFirstRender?initialIsChecked:!!currItem?.isChecked})}))})]})},CheckboxGroup=({id,children,title="group title",hasSubItems=!0,isInline=!1,commonCheckboxProps={},onChange=()=>{},_isMultiGroup=!1})=>((content=null)=>_isMultiGroup?content:(0,jsx_runtime.jsx)(CheckboxProvider,{onChange,children:content}))((0,jsx_runtime.jsx)(_CheckboxGroupInner,{id,title,commonCheckboxProps:commonCheckboxProps??{},hasSubItems:hasSubItems??!1,isInline:isInline??!1,children})),CheckBoxGroups=({children,commonCheckboxProps={},onChange=()=>{}})=>{const className=(0,src.uY)("sui-checkbox-wrapper",{});return(0,jsx_runtime.jsx)(CheckboxProvider,{onChange,children:(0,jsx_runtime.jsx)("div",{className,children:react.Children.map(children,(child=>(0,react.cloneElement)(child,{commonCheckboxProps:{...commonCheckboxProps,...child?.props?.commonCheckboxProps},_isMultiGroup:!0})))})})}}}]);
//# sourceMappingURL=ui-tree-view-stories-TreeView-stories.58f4c6a8.iframe.bundle.js.map