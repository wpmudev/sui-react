@use "sass:map";
@use "sass:math";

// Set the base spacing.
$base-gutter: 40px;

// Predefined spacing list.
$gutter: (
	sm: math.div($base-gutter, 2),
	md: 40px,
	lg: $base-gutter * 2,
	xl: $base-gutter * 3,
);

// Predefined screen sizes.
$breakpoints: (
	sm: 601px,
	md: 893px,
	lg: 1081px,
);

// Create breakpoints mixin.
@mixin media($type, $size) {
	@if $type == min-width {
		$width: #{map.get($breakpoints, $size)};

		@media (min-width: $width) {
			@content;
		}
	} @else if $type == max-width {
		$width: #{map.get($breakpoints, $size) - 1};

		@media (max-width: $width) {
			@content;
		}
	} @else {
		@content;
	}
}

.csb-footer {
	padding: map.get($gutter, sm);
	border-top: 1px solid #e6e6e6;

	@include media(min-width, md) {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		justify-content: space-between;
		padding-left: map.get($gutter, lg);
		padding-right: map.get($gutter, lg);
	}

	&__brand {
		margin-bottom: map.get($gutter, sm);
		font-size: 12px;
		font-weight: 700;
		line-height: 20px;
		text-align: center;

		@include media(min-width, md) {
			display: flex;
			align-items: center;
			text-align: left;
			margin-bottom: 0;
		}

		img {
			display: block;
			margin: 0 auto math.div(map.get($gutter, sm), 2);

			@include media(min-width, md) {
				margin: 0;
				margin-right: math.div(map.get($gutter, sm), 2);
			}
		}
	}

	&__menu {
		display: flex;
		justify-content: center;

		@include media(min-width, md) {
			display: block;
			margin-left: math.div(map.get($gutter, sm), 2);
		}
	}

	&__menu-list {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		margin: 0 -10px;
	}

	&__menu-item {
		margin: 0;
		padding: 0 10px;
		font-size: 12px;
		font-weight: 700;
		line-height: 20px;
		list-style-type: none;

		a {
			padding: 5px 10px;
			color: #1a1a1a;
			text-decoration: none;

			&:hover,
			&:active {
				color: #0059ff;
			}

			&:focus {
				box-shadow: 0 2px 0 0 #0059ff;
			}
		}
	}
}
