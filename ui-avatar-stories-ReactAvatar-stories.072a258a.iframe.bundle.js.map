{"version":3,"file":"ui-avatar-stories-ReactAvatar-stories.072a258a.iframe.bundle.js","mappings":";;AAYA;;AAGA;;AAGA;;AAGA;;ACTA;;ACAA;;;;;;;;;AAUA;;ACPA","sources":["webpack://@wpmudev/sui-react/./packages/ui/avatar/stories/tabs/Examples/Status.mdx","webpack://@wpmudev/sui-react/./packages/ui/avatar/stories/tabs/Examples/Size.mdx","webpack://@wpmudev/sui-react/./packages/ui/avatar/stories/tabs/Examples/Types.mdx","webpack://@wpmudev/sui-react/./packages/ui/avatar/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Avatar} from '../../../src';\nimport dedent from 'dedent';\nexport const ConfirmedAvatarCode = dedent`\n<Avatar status=\"confirmed\" />\n`;\nexport const AwaitingAvatarCode = dedent`\n<Avatar status=\"awaiting\" />\n`;\nexport const NotAcceptedAvatarCode = dedent`\n<Avatar status=\"not-connected\" />\n`;\nexport const NotConnectedAvatarCode = dedent`\n<Avatar status=\"not-accepted\" />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Confirmed\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {\n          status: \"confirmed\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ConfirmedAvatarCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Awaiting\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {\n          status: \"awaiting\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: AwaitingAvatarCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Not Accepted\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {\n          status: \"not-accepted\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NotAcceptedAvatarCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Not Connected\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {\n          status: \"not-connected\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NotConnectedAvatarCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Avatar} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallAvatarCode = dedent`\n<Avatar isSmall={true} status=\"confirmed\" />\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Set the \", _jsx(Code, {\n          small: true,\n          children: \"isSmall\"\n        }), \" prop to reduce the avatar\\nwidth and height.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Avatar, {\n        isSmall: true,\n        status: \"confirmed\"\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallAvatarCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Avatar} from '../../../src';\nimport dedent from 'dedent';\nexport const IconAvatarCode = dedent`\n<Avatar />\n`;\nexport const ImageAvatarCode = dedent`\n    <Avatar\n        image={\n                {\n                    src: 'https://avatars.githubusercontent.com/u/40248406?v=4',\n                    alt: 'image-alt'\n                }\n            }\n    />\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Icon ( default )\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"When the image is not set, the Avatar will display an icon of a user\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: IconAvatarCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Image\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"image\"\n          }), \" prop to show image in avatar.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {\n          image: {\n            src: 'https://avatars.githubusercontent.com/u/40248406?v=4',\n            alt: 'image-alt'\n          }\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ImageAvatarCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {Avatar} from '../../src';\nimport dedent from 'dedent';\nimport Status from './Examples/Status.mdx';\nimport Size from './Examples/Size.mdx';\nimport Types from './Examples/Types.mdx';\nexport const sampleCode = dedent`\n<Avatar />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default form of an Avatar.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Avatar, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Types\",\n          value: \"types\",\n          children: _jsx(Types, {})\n        }), _jsx(\"div\", {\n          label: \"Status\",\n          value: \"status\",\n          children: _jsx(Status, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}