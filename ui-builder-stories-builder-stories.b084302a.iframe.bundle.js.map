{"version":3,"file":"ui-builder-stories-builder-stories.b084302a.iframe.bundle.js","mappings":";;AAYA;;;;;;;;;;;AAYA;;ACXA;;AAGA;;AAGA;;AAGA;;;;;;AAOA;;;;AAKA;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA","sources":["webpack://wpmudev-sui/./packages/ui/builder/stories/tabs/Examples/BuilderStates.mdx","webpack://wpmudev-sui/./packages/ui/builder/stories/tabs/Examples/FieldsStates.mdx","webpack://wpmudev-sui/./packages/ui/builder/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Builder, BuilderField, BuilderWrapper} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const emptyCode = dedent`\n    <Builder hasNoFields={true}/>\n`;\nexport const disAllowNewFieldsCode = dedent`\n    <Builder hasNoFields={true}>\n        <BuilderWrapper>\n            <BuilderField\n              columnSize={12}\n              action=\"Action\"\n              title=\"Image\"\n              icon=\"Desktop\"\n            />\n        </BuilderWrapper>\n    </Builder>\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Empty Builder\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(_components.p, {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"hasNoFields={true}\"\n        }), \" to show an empty Builder\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Builder, {\n          hasNoFields: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: emptyCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Hide the Insert Button\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(_components.p, {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"allowAddFields={false}\"\n        }), \" to disallow new fields insertion\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Builder, {\n          allowAddFields: false,\n          children: _jsx(BuilderWrapper, {\n            children: _jsx(BuilderField, {\n              columnSize: 12,\n              action: \"Action\",\n              title: \"Image\",\n              icon: \"Desktop\"\n            })\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: disAllowNewFieldsCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {BuilderField} from \"../../../src\";\nimport {Input} from \"@wpmudev/sui-input\";\nimport dedent from \"dedent\";\nexport const BasicCode = dedent`\n  <BuilderField title=\"Block 1\" subTitle=\"Block Subtitle\" icon=\"Desktop\" action=\"Action\"/>\n`;\nexport const ErrorCode = dedent`\n  <BuilderField hasError={true} title=\"Error\" icon=\"Desktop\" action=\"Action\"/>\n`;\nexport const NonDraggableCode = dedent`\n  <BuilderField allowDrag={false} title=\"Error\" icon=\"Desktop\" action=\"Action\"/>\n`;\nexport const isDraggingCode = dedent`\n  <BuilderField isDragging={true} title=\"Is dragging\" icon=\"Desktop\" action=\"Action\"/>\n`;\nexport const imageCode = dedent`\n   <BuilderField\n    title=\"Image\"\n    action=\"Action\"\n    imgUrl=\"https://placehold.co/40x40/EEE/31343C\"\n  />\n`;\nexport const accordionCode = dedent`\n    <BuilderField title=\"Accordion\" action=\"Action\">\n      Field body, it can contains any types of element\n    </BuilderField>\n`;\nexport const customContentCode = dedent`\n    <BuilderField\n       customContent={<Input id=\"input-1\" placeholder=\"Placeholder\"/>}\n       icon=\"Desktop\"\n       action=\"Action\"\n    />\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Basic\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            title: \"Block 1\",\n            subTitle: \"Block Subtitle\",\n            icon: \"Desktop\",\n            action: \"Action\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BasicCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Custom Content\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            customContent: _jsx(Input, {\n              id: \"input-1\",\n              placeholder: \"Placeholder\"\n            }),\n            icon: \"Desktop\",\n            action: \"Action\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: customContentCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Error\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"hasError={true}\"\n        }), \" to display the field in error state\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            hasError: true,\n            title: \"Error\",\n            icon: \"Desktop\",\n            action: \"Action\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ErrorCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Being Dragged\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"isDragging={true}\"\n        }), \" to display the field in a dragging state\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            isDragging: true,\n            title: \"Is Dragging\",\n            icon: \"Desktop\",\n            action: \"Action\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: isDraggingCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Non-draggable\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"allowDrag={false}\"\n        }), \" to make the field non-draggable\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            allowDrag: false,\n            title: \"Non Draggable\",\n            icon: \"Desktop\",\n            action: \"Action\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NonDraggableCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Image\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Use the prop \", _jsx(Code, {\n            small: true,\n            children: \"imageUrl\"\n          }), \" to display a custom image\\ninstead of the icon\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            title: \"Image\",\n            action: \"Action\",\n            imgUrl: \"https://placehold.co/40x40/EEE/31343C\"\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: imageCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Accordion\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Add child elements to display the field as an accordion\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(\"div\", {\n          style: {\n            backgroundColor: \"#F8F8F8\",\n            padding: 20\n          },\n          children: _jsx(BuilderField, {\n            title: \"Accordion\",\n            action: \"Action\",\n            children: _jsx(_components.p, {\n              children: \"Field body, it can contains any types of element\"\n            })\n          })\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: accordionCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*Import Variations*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Builder, BuilderField, BuilderWrapper} from \"../../src\";\nimport dedent from \"dedent\";\nimport BuilderStates from \"./Examples/BuilderStates.mdx\";\nimport FieldsStates from \"./Examples/FieldsStates.mdx\";\nexport const sampleCode = dedent`\n    <Builder>\n      <BuilderWrapper>\n        <BuilderField\n          columnSize={6}\n          action=\"Action\"\n          title=\"Block 1\"\n          subTitle=\"Field text\"\n          icon=\"Desktop\"\n        />\n        <BuilderField\n          columnSize={6}\n          action=\"Action\"\n          allowDrag={false}\n          title=\"No Drag\"\n          icon=\"Desktop\"\n        />\n      </BuilderWrapper>\n      <BuilderWrapper>\n        <BuilderField\n          columnSize={12}\n          action=\"Action\"\n          title=\"Image\"\n          imgUrl=\"https://placehold.co/40x40/EEE/31343C\"\n          icon=\"Desktop\"\n        />\n      </BuilderWrapper>\n    </Builder>\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsxs(Section, {\n      contained: false,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"The example below shows a general usecase of the builder component\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(Builder, {\n          children: [_jsxs(BuilderWrapper, {\n            children: [_jsx(BuilderField, {\n              columnSize: 6,\n              action: \"Action\",\n              title: \"Block 1\",\n              subTitle: \"Field text\",\n              icon: \"Desktop\"\n            }), _jsx(BuilderField, {\n              columnSize: 6,\n              action: \"Action\",\n              allowDrag: false,\n              title: \"No Drag\",\n              icon: \"Desktop\"\n            })]\n          }), _jsx(BuilderWrapper, {\n            children: _jsx(BuilderField, {\n              columnSize: 12,\n              action: \"Action\",\n              title: \"Image\",\n              imgUrl: \"https://placehold.co/40x40/EEE/31343C\",\n              icon: \"Desktop\"\n            })\n          })]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      title: \"States\",\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Builder States\",\n          value: \"builder-states\",\n          children: _jsx(BuilderStates, {})\n        }), _jsx(\"div\", {\n          label: \"Fields States\",\n          value: \"fields-states\",\n          children: _jsx(FieldsStates, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}