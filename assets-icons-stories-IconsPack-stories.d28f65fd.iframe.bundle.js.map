{"version":3,"file":"assets-icons-stories-IconsPack-stories.d28f65fd.iframe.bundle.js","mappings":";;;;;;AA2CA;;;;;;AAuBA;;;;AAuBA;;;;;;AA6BA;;;;;;AAwBA;;;;AChIA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;ACzBA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;AAKA;;;;;;;;;;;;;;ACbA","sources":["webpack://wpmudev-sui/./packages/assets/icons/stories/content/Usage.mdx","webpack://wpmudev-sui/./packages/assets/icons/stories/content/Examples/Sizes.mdx","webpack://wpmudev-sui/./packages/assets/icons/stories/content/Examples/Colors.mdx","webpack://wpmudev-sui/./packages/assets/icons/stories/content/Examples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Code, Snippet, List, Message} from '@wpmudev/sui-docs';\nimport dedent from 'ts-dedent';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: _jsx(\"p\", {\n        children: \"There are many ways/formats to use the Shared UI Icons Package. The fastest and recommended way is via SVG directly. Or use the Webfont version if you want to include all icons at once:\"\n      })\n    }), \"\\n\", _jsxs(Section, {\n      title: {\n        content: \"SVG Icons - For a few icons in your project\",\n        small: true\n      },\n      contained: true,\n      border: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(List, {\n        children: _jsx(\"div\", {\n          label: \"Suppose you want to use just a few icons. Find the icons you need in the \\\"icons\\\" folder. Then use them as regular images:\"\n        })\n      }), _jsx(Snippet, {\n        children: dedent`\n<img\n  width=\"32\"\n  height=\"32\"\n  src=\"@wpmudev/sui-icons/dist/svg/plugin-smartcrawl.svg\"\n  alt=\"SmartCrawl Plugin\" />\n\t`\n      }), _jsx(List, {\n        children: _jsx(\"div\", {\n          label: _jsxs(_Fragment, {\n            children: [\"Its possible to serve the icons from a CDN such as \", _jsx(_components.a, {\n              href: \"https://unpkg.com/\",\n              target: \"_blank\",\n              rel: \"nofollow\",\n              children: \"Unpkg\"\n            }), \". Use the \", _jsx(Code, {\n              small: true,\n              children: \" @wpmudev/sui-icons \"\n            }), \" npm package in the URL like the following:\"]\n          })\n        })\n      }), _jsx(Snippet, {\n        children: dedent`\n<img\n  width=\"32\"\n  height=\"32\"\n  src=\"https://unpkg.com/@wpmudev/sui-icons/dist/svg/plugin-smartcrawl.svg\"\n  alt=\"SmartCrawl Plugin\" />\n\t`\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: {\n        content: \"SVG Component\",\n        small: true\n      },\n      border: true,\n      contained: true,\n      children: [_jsx(List, {\n        children: _jsx(\"div\", {\n          label: _jsxs(_Fragment, {\n            children: [\"Install the \", _jsx(Code, {\n              small: true,\n              children: \" @wpmudev/sui-icons \"\n            }), \" and @wpmudev/react-icon packages then import the icon in component you want in your component, as follow:\"]\n          })\n        })\n      }), _jsx(Snippet, {\n        children: dedent`\nimport { ArrowUp } from @wpmudev/sui-icons;\n\nconst TestComponent = () => <ArrowUp/>;\n\t`\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: {\n        content: \"Icons Font - Ideal when you want to include all icons at once\",\n        small: true\n      },\n      contained: true,\n      children: [_jsx(List, {\n        children: _jsx(\"div\", {\n          label: _jsxs(_Fragment, {\n            children: [\"Install the \", _jsx(Code, {\n              small: true,\n              children: \" @wpmudev/sui-icons \"\n            }), \" and in the \", _jsx(Code, {\n              small: true,\n              children: \" <head> \"\n            }), \" of your HTML file, reference the location to your \", _jsx(Code, {\n              small: true,\n              children: \" sui-icons.css \"\n            }), \" stylesheet.\"]\n          })\n        })\n      }), _jsx(Snippet, {\n        children: dedent`\n<head>\n  ...\n  <link rel=\"stylesheet\" href=\"@wpmudev/sui-icons/dist/css/sui-icons.css\" />\n  ...\n</head>\n\t`\n      }), _jsx(List, {\n        children: _jsx(\"div\", {\n          label: _jsxs(_Fragment, {\n            children: [\"Use \", _jsx(_components.a, {\n              href: \"https://unpkg.com/\",\n              target: \"_blank\",\n              rel: \"nofollow\",\n              children: \"unpkg.com\"\n            }), \" to load the \", _jsx(_components.a, {\n              href: \"https://www.npmjs.com/package/@wpmudev/shared-ui\",\n              target: \"_blank\",\n              rel: \"nofollow\",\n              children: \"Shared UI Icons Pack\"\n            }), \" directly without installing anything:\"]\n          })\n        })\n      }), _jsx(Snippet, {\n        children: dedent`\n<head>\n  ...\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/@wpmudev/sui-icons/dist/css/sui-icons.css\" />\n  ...\n</head>\n\t`\n      }), _jsx(Message, {\n        color: \"blue\",\n        children: _jsxs(\"p\", {\n          children: [\"Place the \", _jsx(Code, {\n            theme: \"dark\",\n            children: \"suicons\"\n          }), \" class with \", _jsx(Code, {\n            theme: \"dark\",\n            children: \"<span>\"\n          }), \" tag in your HTML file, like this. Then, use the \", _jsx(\"strong\", {\n            children: \"icon name\"\n          }), \" along with the \", _jsx(Code, {\n            theme: \"dark\",\n            children: \"suicons--\"\n          }), \" class prefix.\"]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {ClockAlt, ArrowRight} from '../../../src/components';\nimport dedent from 'dedent';\nexport const xs = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt size=\"sm\" />;\n`;\nexport const sm = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt size=\"sm\" />;\n`;\nexport const md = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt md=\"md\" />;\n`;\nexport const lg = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt size=\"lg\" />;\n`;\nexport const xl = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt size=\"xl\" />;\n`;\nexport const customWidth = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt iconWidth={250} iconHeight={250} />;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Extra Small\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          size: \"xs\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: xs\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Small\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          size: \"sm\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sm\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Medium\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          size: \"md\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: md\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Large\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          size: \"lg\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: lg\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Extra Large\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          size: \"xl\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: xl\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Custom Size\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"You can also set a custom width and height by using \", _jsx(_components.code, {\n            children: \"width\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"height\"\n          }), \" properties.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          iconWidth: 250,\n          iconHeight: 250\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: xl\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {ClockAlt, ArrowRight} from '../../../src/components';\nimport dedent from 'dedent';\nexport const neutral = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt colorScheme=\"neutral\" />;\n`;\nexport const informative = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt colorScheme=\"informative\" />;\n`;\nexport const success = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt colorScheme=\"success\" />;\n`;\nexport const warning = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt colorScheme=\"warning\" />;\n`;\nexport const critical = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt colorScheme=\"critical\" />;\n`;\nexport const customColor = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => <ClockAlt fill=\"#C756FF\" />;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"neutral\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          colorScheme: \"neutral\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: neutral\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"informative\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          colorScheme: \"informative\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: informative\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"success\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          colorScheme: \"success\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: success\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"warning\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          colorScheme: \"warning\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: warning\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"critical\",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          colorScheme: \"critical\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: critical\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Custom Color \",\n      contained: true,\n      style: {\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"You can also use custom colors by using \", _jsx(_components.code, {\n            children: \"fill\"\n          }), \" property\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(ClockAlt, {\n          fill: \"#C756FF\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: customColor\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {ClockAlt, ArrowRight, Bell, PluginShipper} from '../../src/components';\nimport dedent from 'dedent';\nimport Sizes from './Examples/Sizes.mdx';\nimport Colors from './Examples/Colors.mdx';\nexport const sampleCode = dedent`\nimport { ClockAlt } from '@wpmudev/sui-icons';\n\nconst TestComponent = () => {\n    return ( \n        <div>\n            <ArrowUp/>\n            <ClockAlt />\n            <ArrowRight />\n            <Bell />\n            <PluginShipper />\n        </div>\n    );\n}\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"This is a basic example of random SVG Icons\"\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsxs(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"20px\"\n          },\n          children: [_jsx(ClockAlt, {}), _jsx(ArrowRight, {}), _jsx(Bell, {}), _jsx(PluginShipper, {})]\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Color\",\n          value: \"colors\",\n          children: _jsx(Colors, {})\n        }), _jsx(\"div\", {\n          label: \"Sizes\",\n          value: \"sizes\",\n          children: _jsx(Sizes, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}