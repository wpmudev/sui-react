{"version":3,"file":"ui-pagination-stories-ReactPagination-stories.0a079e58.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;;AC9EA","sources":["webpack://wpmudev-sui/./packages/ui/pagination/stories/tabs/Examples/Examples.tsx","webpack://wpmudev-sui/./packages/ui/pagination/stories/tabs/TabExamples.mdx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Pagination } from \"../../../src\";\nimport { Box, BoxGroup } from \"@wpmudev/sui-box\";\nimport React, { useEffect, useState } from \"react\";\nimport { chunkArray } from \"@wpmudev/sui-utils\";\nimport dedent from \"dedent\";\nconst generateRecords = (n) => {\n    const arrayOfObjects = [];\n    for (let i = 1; i <= n; i++) {\n        const object = { id: i, title: \"Item\" + i };\n        arrayOfObjects.push(object);\n    }\n    return arrayOfObjects;\n};\nconst records = generateRecords(60);\nconst limit = 5;\nexport const BasicPagination = ({ skip = false }) => {\n    const [tableItems, setTableItems] = useState(chunkArray(records, limit));\n    const [rows, setRows] = useState([]);\n    const [page, setPage] = useState(1);\n    useEffect(() => {\n        setTableItems(chunkArray(records, limit));\n    }, []);\n    useEffect(() => {\n        setRows(tableItems?.[0]);\n    }, [tableItems]);\n    useEffect(() => {\n        setRows(tableItems?.[page - 1]);\n    }, [page, tableItems]);\n    return (_jsx(Box, { children: _jsxs(BoxGroup, { isInline: false, children: [_jsx(\"ul\", { children: rows?.map((record, index) => (_jsx(\"li\", { children: record.title }, index))) }), _jsx(Pagination, { skip: skip, limit: limit, numberOfItems: records.length, onChange: setPage })] }) }));\n};\nexport const BasicExampleCode = dedent `\nimport { Pagination } from \"../../../src\"\nimport { Box, BoxGroup } from \"@wpmudev/sui-box\"\nimport React, { useEffect, useState } from \"react\"\nimport { chunkArray } from \"@wpmudev/sui-utils\"\nimport dedent from \"dedent\"\n\nexport const generateRecords = (n) => {\n    const arrayOfObjects = []\n    for (let i = 1; i <= n; i++) {\n        const object = { id: i, title: \"Item\" + i }\n        arrayOfObjects.push(object)\n    }\n\n    return arrayOfObjects\n}\n\nconst records = generateRecords(60)\n\nconst limit = 3\n\n    export const BasicPagination = () => {\n        const [tableItems, setTableItems] = useState(chunkArray(records, limit))\n        const [rows, setRows] = useState([])\n        const [page, setPage] = useState(1)\n\n        useEffect(() => {\n            setTableItems(chunkArray(records, limit))\n        }, [limit])\n\n        useEffect(() => {\n            setRows(tableItems?.[0])\n        }, [tableItems])\n\n        useEffect(() => {\n            setRows(tableItems?.[page - 1])\n        }, [page, tableItems])\n\n        return (\n            <Box>\n                <BoxGroup isInline={false}>\n                    <ul>\n                        {rows?.map((record, index) => (\n                            <li key={index}>{record.title}</li>\n                        ))}\n                    </ul>\n                    <Pagination\n                        limit={limit}\n                        numberOfItems={records.length}\n                        onChange={setPage}\n                    />\n                </BoxGroup>\n            </Box>\n        )\n    }\n`;\nexport const SkipButtonsExample = () => (_jsx(BasicPagination, { skip: true, limit: limit }));\nexport const SkipButtonsCode = dedent `\n    <Pagination skip={true} />\n`;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {BasicPagination, BasicExampleCode, SkipButtonsExample, SkipButtonsCode} from \"./Examples/Examples\";\nimport dedent from \"dedent\";\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is a general example of using pagination\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(BasicPagination, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: BasicExampleCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Skip Buttons\",\n      contained: true,\n      style: {\n        paddingTop: 30\n      },\n      children: [_jsxs(\"p\", {\n        children: [\"Use the prop \", _jsx(Code, {\n          small: true,\n          children: \"skip={true}\"\n        }), \" to allow for skip navigation\"]\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(SkipButtonsExample, {})\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: SkipButtonsCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}