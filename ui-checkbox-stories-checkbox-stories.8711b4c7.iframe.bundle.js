(self.webpackChunk_wpmudev_sui_react=self.webpackChunk_wpmudev_sui_react||[]).push([[4099],{"./packages/ui/checkbox/stories/checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,__namedExportsOrder:()=>__namedExportsOrder,default:()=>checkbox_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/ui/checkbox/src/index.ts"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),docs_src=__webpack_require__("./packages/docs/src/index.ts"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const anatomy_namespaceObject=__webpack_require__.p+"static/media/anatomy.be294e4e.svg",checkbox_group_namespaceObject=__webpack_require__.p+"static/media/checkbox-group.fa278c23.svg",nested_checkbox_namespaceObject=__webpack_require__.p+"static/media/nested-checkbox.857f1c56.svg",disabled_checkbox_namespaceObject=__webpack_require__.p+"static/media/disabled-checkbox.31ab1770.svg",interactive_state_namespaceObject=__webpack_require__.p+"static/media/interactive-state.0ef04f81.svg",error_state_namespaceObject=__webpack_require__.p+"static/media/error-state.3390ed21.svg",size_namespaceObject=__webpack_require__.p+"static/media/size.3180e895.svg",alignment_namespaceObject=__webpack_require__.p+"static/media/alignment.e43d3a90.svg",helper_text_namespaceObject=__webpack_require__.p+"static/media/helper-text.50d7f229.svg",state_namespaceObject=__webpack_require__.p+"static/media/state.fa4e3170.svg",indeterminate_namespaceObject=__webpack_require__.p+"static/media/indeterminate.9b1841e7.svg";function _createMdxContent(props){const _components=Object.assign({p:"p",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.$0,{title:"Anatomy",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Checkbox input"}),(0,jsx_runtime.jsx)("p",{children:"The checkbox input is the actual interactive element that users can click or tap to select or deselect an option. It is typically represented as a small square or rectangle that can be checked (selected) or unchecked (deselected)."}),(0,jsx_runtime.jsx)("h3",{children:"2. Checkbox label"}),(0,jsx_runtime.jsx)("p",{children:"The label is the text or description associated with the checkbox. It provides context to the user about what the checkbox represents. Labels should be clear, concise, and easy to understand."})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:anatomy_namespaceObject,alt:"Checkbox Anatomy"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Checkbox Group",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Checkboxes are often used in groups when users need to select multiple options from a list. The checkboxes within a group should be visually grouped together, often by placing them within a list."})}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Group Label"}),(0,jsx_runtime.jsx)("p",{children:"The field label act as the group label in the checkbox group. It explains what options need to be selected."}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"2. Checkbox List"}),(0,jsx_runtime.jsx)("p",{children:"The checkbox list is a group of multiple options that are available for the user to select."})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:checkbox_group_namespaceObject,alt:"Checkbox Group"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Nested checkbox",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Nested checkboxes are used when there is hierarchical data or categories\nthat require multiple levels of selection. These checkboxes allow users\nto select or deselect options at different levels of a hierarchy. For\nthe advanced presentation of nested selections, use ",(0,jsx_runtime.jsx)(_components.a,{href:"/docs/sui-components-advanced-tree-view--docs",children:"Tree\nview"})," component."]})})}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:nested_checkbox_namespaceObject,alt:"Nested Checkbox"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Checkbox state",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsxs)(docs_src.JX,{children:[(0,jsx_runtime.jsx)("p",{children:"Checkbox primarily has two states"}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Unchecked"}),(0,jsx_runtime.jsx)("p",{children:"By default checkbox is not selected. When the checkbox is not selected, it is typically empty or displays an empty box."}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"2. Checked"}),(0,jsx_runtime.jsx)("p",{children:"When the checkbox is selected, it typically displays a checkmark (✔) inside the box with filled color to indicate the selected state."})]}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:state_namespaceObject,alt:"Checkbox States"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Indeterminate Checkbox",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("p",{children:"An indeterminate checkbox is a special state for checkboxes commonly used when dealing with lists or groups of checkboxes. It indicates that not all items in the group are checked, but some are, and it provides a visual cue to the user. This state is particularly useful when you have a hierarchical or multi-select structure where there's a mix of checked and unchecked checkboxes within a parent category or group."})}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:indeterminate_namespaceObject,alt:"Indeterminated Checkbox"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Disabled checkbox",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Checkboxes can also be in a disabled state, where users cannot interact\nwith them. Disabled checkboxes are typically grayed out or have reduced\nopacity to indicate their inactive status."})})}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:disabled_checkbox_namespaceObject,alt:"Disabled Checkbox"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Interactive State",children:(0,jsx_runtime.jsx)("img",{src:interactive_state_namespaceObject,alt:"Checkbox Interactive State"})}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Error state",children:[(0,jsx_runtime.jsx)("p",{children:"Error can be shown in two ways for checkbox. "}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Forms or form field"}),(0,jsx_runtime.jsx)("p",{children:"If the checkbox are used within the forms or inside the group of form fields, the error should be similar to the input field."}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"2. Setting blocks"}),(0,jsx_runtime.jsxs)("p",{children:["If the checkbox is used in separate setting block or it require user’s attention, error can be shown with the ",(0,jsx_runtime.jsx)(_components.a,{href:"/docs/sui-components-advanced-alert-banner--docs",children:"Alert Notification"}),"."]}),(0,jsx_runtime.jsx)("img",{src:error_state_namespaceObject,alt:"Checkbox Error State"})]}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Size",children:(0,jsx_runtime.jsxs)(docs_src.X2,{children:[(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("p",{children:"Checkbox is available with two sizes in SUI 3."})}),(0,jsx_runtime.jsx)(docs_src.JX,{children:(0,jsx_runtime.jsx)("img",{src:size_namespaceObject,alt:"Checkbox Size"})})]})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Checkbox Alignment",children:(0,jsx_runtime.jsx)("img",{src:alignment_namespaceObject,alt:"Checkbox Alignment"})}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"Helper Text",children:(0,jsx_runtime.jsx)("img",{src:helper_text_namespaceObject,alt:"Checkbox Helper Text"})})]})}const TabUsage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};function TabCode_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.$0,{title:"Installation",contained:!0,style:{paddingTop:20,paddingBottom:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Install the ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"Checkbox"})," package as an individual\ncomponent or follow the Overview page instructions to get the complete SUI\nComponents package."]})})}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Props",border:!0,children:[(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"id*",tag:"string",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"A unique identifier for the checkbox, within group context this will be generated automatically"})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"name*",tag:"string",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"Represents the name of the checkbox"})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"value*",tag:"string",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"Represents the value of the checkbox"})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"label*",tag:"string",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"The text label for the checkbox."})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isLabelHidden*",tag:"boolean",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"Indicates whether the label should be hidden or not."})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isSmall*",tag:"boolean",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"Indicates whether the checkbox should be displayed as small or not."})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isDisabled*",tag:"boolean",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"Indicates whether the checkbox is disabled or not."})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isIndeterminate*",tag:"boolean",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsxs)("p",{children:["Mark checkbox checked as indeterminate, for more information checkout the ",(0,jsx_runtime.jsx)("a",{target:"_blank",href:"/?path=/docs/sui-components-forms-checkbox--docs",children:"Usage Page"})]})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isChecked*",tag:"boolean",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsxs)("p",{children:["Default value for the checkbox, when set to ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:"true"})," the Checkbox will be checked initially"]})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"onChange*",tag:"function",small:!0},style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:"A callback function to be invoked when the checkbox state is changed"})})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Groups & Nesting",contained:!0,style:{paddingTop:30,paddingBottom:0},children:[(0,jsx_runtime.jsx)("p",{children:"The Checkbox package provides two other components to implement grouping and nesting functionalities"}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:"CheckboxGroup",contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Use this component to group multiple checboxes together and display them horizontally or vertically, the ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"CheckboxGroup"})," has the following props"]})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"children",tag:"React Node",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The elements content of the component"})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"title*",tag:"string",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Represents the group checkbox label"})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"hasSubItems*",tag:"boolean",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Whether the group has chldren checkboxes"})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"isInline*",tag:"boolean",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["When set to ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"true"})," the checkboxes will be displayed horizontally"]})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"commonCheckboxProps*",tag:"object",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["The common checkbox props to be shared with all children checkboxes, accepted props are detailed in the ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"Checkbox"})," section."]})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"onChange*",tag:"function",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Callback function to be executed when the state of any checkbox in the group is changed, the first parameter returns the state of all checkboxes in an array structure"})})})]}),(0,jsx_runtime.jsxs)(docs_src.$0,{title:"CheckboxGroups",contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Use this component to create hierarchical structure with nested checkboxes, it has the following props:"})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"children",tag:"React Node",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The elements children of the the component"})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"commonCheckboxProps*",tag:"object",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["The common checkbox props to be shared with all children checkboxes, accepted props are detailed in the ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"Checkbox"})," section."]})})}),(0,jsx_runtime.jsx)(docs_src.$0,{title:{content:"onChange*",tag:"function",small:!0},contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"Callback function to be executed when the state of any checkbox in the group is changed, the first parameter returns the state of all checkboxes in an array structure"})})})]})]})]})}const TabCode=function TabCode_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabCode_createMdxContent,props)})):TabCode_createMdxContent(props)},BasicCheckbox=({...props})=>{const[isChecked,setIsChecked]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)(src.XZ,{...props,isChecked,onChange:e=>{const inputElement=e.target;setIsChecked(inputElement.checked)}})};var dedent=__webpack_require__("./node_modules/dedent/dist/dedent.js"),dedent_default=__webpack_require__.n(dedent);const disabledCode=dedent_default()`
    <Checkbox isDisabled={true} label="Disabled Checkbox" onChange={(e)=> setChecked(e.target.checked)}/>
`,smallCode=dedent_default()`
    <Checkbox isSmall={true} label="Small Checkbox" onChange={(e)=> setChecked(e.target.checked)}/>
`,indeterminateCode=dedent_default()`
    <Checkbox isIndeterminate={true} label="Indeterminate Checkbox" onChange={(e)=> setChecked(e.target.checked)}/>
`;function States_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Disabled",contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsxs)("p",{children:[" To disable the checkbox use the prop ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:" isDisabled={true} "})," "]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(BasicCheckbox,{isDisabled:!0,label:"Disabled Checkbox",onChange:e=>setChecked(e.target.checked)})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:disabledCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Small",contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsxs)("p",{children:[" To make the checkbox look smaller use the prop ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:" isSmall={true} "})," "]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(BasicCheckbox,{isSmall:!0,label:"Small Checkbox",onChange:e=>setChecked(e.target.checked)})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:smallCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Indeterminate",contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)("p",{children:" This is mainly used when the checkbox state depends on other checkboxes states where only some of them are checked. "}),(0,jsx_runtime.jsxs)("p",{children:[" Use the prop ",(0,jsx_runtime.jsx)(docs_src.EK,{small:!0,children:" isIndeterminate={true} "})," to mark the checkbox as indeterminate "]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(BasicCheckbox,{isIndeterminate:!0,label:"Indeterminate Checkbox",onChange:e=>setChecked(e.target.checked)})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:indeterminateCode})]})]})}const States=function States_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(States_createMdxContent,props)})):States_createMdxContent()},verticalCode=dedent_default()`
   <CheckboxGroup 
        onChange={(items) => console.log(items)} 
        commonCheckboxProps={{
            // it will be passed to all checkbox items
            name: "groups-checkbox"						
        }}>
        <Checkbox label="Child in a Group" />
        <Checkbox label="Child in a Group" />
   </CheckboxGroup>
`,horizontalCode=dedent_default()`
    <CheckboxGroup 
        isInline={true} 
        onChange={(items) => console.log(items)}
        commonCheckboxProps={{
            // it will be passed to all checkbox items
            name: "groups-checkbox"						
        }}>
    >
        <BasicCheckbox label="Child in a Group"/>
        <BasicCheckbox label="Child in a Group"/>
    </CheckboxGroup>
`;function Group_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Vertical",contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Verical is the default view for the group, you can track the changes for all checkboxes in the group using ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"onChange"})," prop"]})}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsxs)(src.cO,{onChange:items=>console.log(items),commonCheckboxProps:{name:"groups-checkbox"},children:[(0,jsx_runtime.jsx)(BasicCheckbox,{label:"Child in a Group"}),(0,jsx_runtime.jsx)(BasicCheckbox,{label:"Child in a Group"})]})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:verticalCode})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.$0,{title:"Horizontal",contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsxs)("p",{children:[" To dispaly the checkboxes horizontally use the prop ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"isInline={true}"})," "]}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsxs)(src.cO,{isInline:!0,onChange:items=>console.log(items),commonCheckboxProps:{name:"groups-checkbox"},children:[(0,jsx_runtime.jsx)(BasicCheckbox,{label:"Child in a Group"}),(0,jsx_runtime.jsx)(BasicCheckbox,{label:"Child in a Group"})]})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:horizontalCode})]})]})}const Group=function Group_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Group_createMdxContent,props)})):Group_createMdxContent(props)},checkboxGroups=dedent_default()`
   <CheckBoxGroups 
        onChange={(items) => {
            console.log("nested debug", items)
        }}
        commonCheckboxProps={{
            // it will be passed to all checkbox items
            name: "groups-checkbox"						
        }}
    >
        <CheckboxGroup 
            title="Parent" 
            hasSubItems={true} 
        >
            <Checkbox label="Child" />
            <Checkbox label="Child" />
        </CheckboxGroup>
        <CheckboxGroup 
            title="Parent" 
            hasSubItems={true} 
        >
            <Checkbox label="Child" />
            <Checkbox label="Child" />
            <Checkbox label="Child" />
            <Checkbox label="Child" />
        </CheckboxGroup>
    </CheckBoxGroups>
`;function Nested_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,style:{paddingRight:0,paddingLeft:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)(_components.p,{children:["With ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"CheckBoxGroups"}),", you can establish a single-level hierarchy where parent and child states are interconnected, you can track changes on all nested checkboxes using the ",(0,jsx_runtime.jsx)(docs_src.EK,{isSmall:!0,children:"onChange"})," prop"]})}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsxs)(src.ox,{onChange:items=>{console.log("nested debug",items)},commonCheckboxProps:{name:"groups-checkbox"},children:[(0,jsx_runtime.jsxs)(src.cO,{title:"Parent",hasSubItems:!0,children:[(0,jsx_runtime.jsx)(src.XZ,{label:"Child"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Child"})]}),(0,jsx_runtime.jsxs)(src.cO,{title:"Parent",hasSubItems:!0,children:[(0,jsx_runtime.jsx)(src.XZ,{label:"Child"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Child"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Child"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Child"})]})]})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:checkboxGroups})]})}const Nested=function Nested_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Nested_createMdxContent,props)})):Nested_createMdxContent(props)},sampleCode=dedent_default()`
    <Checkbox label="Checkbox label" onChange={(e)=> setChecked(e.target.checked)}/>
`;function TabExamples_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.$0,{contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsx)("p",{children:"A basic Checkbox example used for most cases:"}),(0,jsx_runtime.jsx)(docs_src.MB,{wrapper:!0,children:(0,jsx_runtime.jsx)(BasicCheckbox,{label:"Checkbox label",onChange:e=>setChecked(e.target.checked)})}),(0,jsx_runtime.jsx)(docs_src.pP,{language:"js",children:sampleCode})]}),"\n",(0,jsx_runtime.jsx)(docs_src.$0,{title:"States & Groups",style:{paddingTop:0},children:(0,jsx_runtime.jsxs)(docs_src.T5,{children:[(0,jsx_runtime.jsx)("div",{label:"States",value:"states",children:(0,jsx_runtime.jsx)(States,{})}),(0,jsx_runtime.jsx)("div",{label:"Group",value:"group",children:(0,jsx_runtime.jsx)(Group,{})}),(0,jsx_runtime.jsx)("div",{label:"Nested",value:"nested",children:(0,jsx_runtime.jsx)(Nested,{})})]})})]})}const TabExamples=function TabExamples_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabExamples_createMdxContent,props)})):TabExamples_createMdxContent()};function checkbox_createMdxContent(props){return docs_src.T3||_missingMdxReference("Page",!1),docs_src.T3.Tabs||_missingMdxReference("Page.Tabs",!0),(0,jsx_runtime.jsx)(dist.E$,{children:(0,jsx_runtime.jsxs)(docs_src.T3.Tabs,{title:"Checkbox",subtitle:"Checkboxes are used to allow users to make binary choices or select one or more options from a list.",status:"draft",children:[(0,jsx_runtime.jsx)("div",{id:"usage",label:"Usage",children:(0,jsx_runtime.jsx)(TabUsage,{})}),(0,jsx_runtime.jsx)("div",{id:"code",label:"Code",children:(0,jsx_runtime.jsx)(TabCode,{})}),(0,jsx_runtime.jsx)("div",{id:"examples",label:"Examples",children:(0,jsx_runtime.jsx)(TabExamples,{})})]})})}const stories_checkbox=function checkbox_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(checkbox_createMdxContent,props)})):checkbox_createMdxContent()};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}const checkbox_stories={title:"SUI/Components/Forms/Checkbox",component:src.XZ,parameters:{layout:"fullscreen",docs:{page:stories_checkbox}}},Checkbox=({example,name,isInline,...args})=>{const[isChecked,setIsChecked]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:(0,jsx_runtime.jsx)("div",{className:"sui-layout__content",children:(0,jsx_runtime.jsx)("div",{style:{padding:20,borderRadius:4,background:"#fff"},children:{single:(0,jsx_runtime.jsx)(src.XZ,{name:"single-checkbox",id:"single-checkbox",label:"Single Checkbox",isChecked,onChange:e=>{setIsChecked(e.target.checked)}}),group:(0,jsx_runtime.jsxs)(src.cO,{title:"Group 1 Label",commonCheckboxProps:{name:"group-checkbox",...args},children:[(0,jsx_runtime.jsx)(src.XZ,{label:"Checkbox Group Item 1"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Checkbox Group Item 2"})]}),nested:(0,jsx_runtime.jsxs)(src.ox,{commonCheckboxProps:{name:"groups-checkbox",...args},children:[(0,jsx_runtime.jsxs)(src.cO,{title:"Nested Group 1",hasSubItems:!0,commonCheckboxProps:{},children:[(0,jsx_runtime.jsx)(src.XZ,{id:"checkbox-1",isChecked:!0,label:"Nested item 1"}),(0,jsx_runtime.jsx)(src.XZ,{id:"checkbox-2",label:"Nested item 2"})]}),(0,jsx_runtime.jsxs)(src.cO,{title:"Nested Group 2",hasSubItems:!0,commonCheckboxProps:{},children:[(0,jsx_runtime.jsx)(src.XZ,{label:"Nested item 1"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Nested item 2"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Nested item 3"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Nested item 4"})]})]}),horizontal:(0,jsx_runtime.jsxs)(src.cO,{title:"Group 1 Label",isInline:!0,commonCheckboxProps:{...args},children:[(0,jsx_runtime.jsx)(src.XZ,{label:"Checkbox Group Item 1"}),(0,jsx_runtime.jsx)(src.XZ,{label:"Checkbox Group Item 2"})]})}[example]})})})};Checkbox.args={example:"nested",name:"countries",isLabelHidden:!1,isSmall:!1,isDisabled:!1},Checkbox.argTypes={example:{name:"Example",options:["single","group","nested","horizontal"],control:{type:"select",labels:{single:"Example: Single",group:"Example: Group",nested:"Example: Nested",horizontal:"Example: Horizontal"}}},defaultValue:{table:{disable:!0}},isLabelHidden:{name:"Label Hidden",control:{type:"boolean"}},isSmall:{name:"Small",control:{type:"boolean"}},isDisabled:{name:"Disabled",control:{type:"boolean"}}},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:'({\n  example,\n  name,\n  isInline,\n  ...args\n}: {\n  example: string;\n  name: string;\n  isInline: boolean;\n}) => {\n  const boxStyles = {\n    padding: 20,\n    borderRadius: 4,\n    background: "#fff"\n  };\n\n  // for single checkbox (outside of CheckboxWrapper)\n  const [isChecked, setIsChecked] = useState(false);\n  return <div className="sui-layout sui-layout--horizontal sui-layout--vertical">\n            <div className="sui-layout__content">\n                <div style={boxStyles}>\n                    {{\n          single: <SuiCheckbox name="single-checkbox" id="single-checkbox" label="Single Checkbox" isChecked={isChecked} onChange={e => {\n            setIsChecked(e.target.checked);\n          }} />,\n          group: <CheckboxGroup title="Group 1 Label" commonCheckboxProps={{\n            // It will be passed to all checkbox items\n            name: "group-checkbox",\n            ...args\n          }}>\n                                    <SuiCheckbox label="Checkbox Group Item 1" />\n                                    <SuiCheckbox label="Checkbox Group Item 2" />\n                                </CheckboxGroup>,\n          nested: <CheckBoxGroups commonCheckboxProps={{\n            // It will be passed to all checkbox items\n            name: "groups-checkbox",\n            ...args\n          }}>\n                                    <CheckboxGroup title="Nested Group 1" hasSubItems={true} commonCheckboxProps={{}}>\n                                        <SuiCheckbox id="checkbox-1" isChecked={true} label="Nested item 1" />\n                                        <SuiCheckbox id="checkbox-2" label="Nested item 2" />\n                                    </CheckboxGroup>\n                                    <CheckboxGroup title="Nested Group 2" hasSubItems={true} commonCheckboxProps={{}}>\n                                        <SuiCheckbox label="Nested item 1" />\n                                        <SuiCheckbox label="Nested item 2" />\n                                        <SuiCheckbox label="Nested item 3" />\n                                        <SuiCheckbox label="Nested item 4" />\n                                    </CheckboxGroup>\n                                </CheckBoxGroups>,\n          horizontal: <CheckboxGroup title="Group 1 Label" isInline={true} commonCheckboxProps={{\n            ...args\n          }}>\n                                    <SuiCheckbox label="Checkbox Group Item 1" />\n                                    <SuiCheckbox label="Checkbox Group Item 2" />\n                                </CheckboxGroup>\n        }[example]}\n                </div>\n            </div>\n        </div>;\n}',...Checkbox.parameters?.docs?.source}}};const __namedExportsOrder=["Checkbox"]},"./packages/hooks/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{p4:()=>useDetectRTL,Y9:()=>useDragAndDrop,X2:()=>useInteraction,rw:()=>useOuterClick,vI:()=>usePortal,D9:()=>usePrevious,GT:()=>useValidateProps});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const useInteraction=methods=>{const[isHovered,setIsHovered]=(0,react.useState)(!1),[isFocused,setIsFocused]=(0,react.useState)(!1),{onMouseEnter,onMouseLeave,onMouseDownCapture,onMouseUp,onMouseUpCapture,onFocus,onBlur,onBlurCapture}=methods,toggleHover=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsHovered(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),toggleFocus=(0,react.useCallback)(((state,event,callback=(e=>{}))=>{setIsFocused(state),(0,src.mf)(callback)&&callback&&callback(event)}),[]),onMouseUpCallback=(0,react.useCallback)((e=>{const target=e?.currentTarget;target&&(target?.focus(),toggleFocus(!0,e,(event=>{onMouseUp&&onMouseUp(event)})))}),[onMouseUp,toggleFocus]),onMouseEnterCallback=(0,react.useCallback)((e=>toggleHover(!0,e,(event=>{onMouseEnter&&onMouseEnter(event)}))),[onMouseEnter,toggleHover]),onMouseLeaveCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(()=>{onMouseLeave&&onMouseLeave(event)}))),[onMouseLeave,toggleHover]),onMouseDownCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onMouseDownCapture&&onMouseDownCapture(event)}))),[onMouseDownCapture,toggleFocus]),onMouseUpCaptureCallback=(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onMouseUpCapture&&onMouseUpCapture(event)}))),[onMouseUpCapture,toggleFocus]),onBlurCaptureCallback=(0,react.useCallback)((e=>toggleHover(!1,e,(event=>{onBlurCapture&&onBlurCapture(event)}))),[onBlurCapture,toggleHover]),onBlurCallback=(0,react.useCallback)((e=>toggleFocus(!1,e,(event=>{onBlur&&onBlur(event)}))),[onBlur,toggleFocus]);return[isHovered,isFocused,{onMouseUp:onMouseUpCallback,onMouseEnter:onMouseEnterCallback,onMouseLeave:onMouseLeaveCallback,onMouseDownCapture:onMouseDownCaptureCallback,onMouseUpCapture:onMouseUpCaptureCallback,onFocus:(0,react.useCallback)((e=>toggleFocus(!0,e,(event=>{onFocus&&onFocus(event)}))),[onFocus,toggleFocus]),onBlur:onBlurCallback,onBlurCapture:onBlurCaptureCallback},toggleHover,toggleFocus]},useOuterClick=(ref,callback=(()=>{}))=>{const onPageClick=(0,react.useCallback)((event=>{ref?.current&&!ref?.current.contains(event.target)&&callback()}),[callback,ref]);(0,react.useEffect)((()=>(document.addEventListener("click",onPageClick),()=>{document.removeEventListener("click",onPageClick)})))};var react_dom=__webpack_require__("./node_modules/react-dom/index.js");const usePortal=wrapperId=>{const[wrapperElement,setWrapperElement]=(0,react.useState)(null);wrapperId=wrapperId??".sui-wrap",(0,react.useLayoutEffect)((()=>{let el=document.querySelector(wrapperId),systemCreated=!1;return el||(systemCreated=!0,el=(wrapperId=>{const wrapperElement=document.createElement("div");return wrapperElement.setAttribute("id",wrapperId),document.body.appendChild(wrapperElement),wrapperElement})(wrapperId)),setWrapperElement(el),()=>{systemCreated&&el?.parentNode&&el.parentNode.removeChild(el)}}),[wrapperId]);return[children=>null===wrapperElement?null:(0,react_dom.createPortal)(children,wrapperElement)]},useValidateProps=({propsToCheck,component})=>{const componentName=component?.displayName||component?.name;Object.keys(propsToCheck)?.forEach(((propKey,index)=>{if(!!(0,src.xb)(propsToCheck?.[propKey]??""))throw new Error(`Empty content is not valid. More details below:\n\n⬇️ ⬇️ ⬇️\n\n📦 SUI 3 React - Components: ${componentName}\n\nThe "${propKey}" argument requires some value to be passed to it.\n\n`)}))},useDragAndDrop=({containerRef,methods})=>{const[node,setNode]=(0,react.useState)(),[isDragging,setIsDragging]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{setNode(containerRef)}),[containerRef]),(0,react.useEffect)((()=>{const onDragOver=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!0),methods?.onDragOver&&methods?.onDragOver(e)},onDrop=e=>{e.preventDefault(),e.stopPropagation(),setIsDragging(!1),methods?.onDrop&&methods?.onDrop(e)},current=node?.current;return current?.addEventListener("dragover",onDragOver,!1),current?.addEventListener("drop",onDrop,!1),()=>{current?.removeEventListener("dragover",onDragOver,!1),current?.removeEventListener("drop",onDrop,!1)}}),[containerRef,node,methods]),[isDragging]},useDetectRTL=()=>{const[isRTL,setIsRTL]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{const updateRTL=()=>{const isDocumentRTL="rtl"===document.documentElement.getAttribute("dir");setIsRTL(isDocumentRTL)};updateRTL();const mutationObserver=new MutationObserver(updateRTL);return mutationObserver.observe(document.documentElement,{attributes:!0,attributeFilter:["dir"]}),()=>{mutationObserver.disconnect()}}),[]),isRTL},usePrevious=value=>{const ref=(0,react.useRef)();return(0,react.useEffect)((()=>{ref.current=value}),[value]),ref.current}},"./packages/ui/checkbox/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{ox:()=>CheckBoxGroups,XZ:()=>Checkbox,cO:()=>CheckboxGroup});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/utils/src/index.ts");const CheckboxContext=(0,react.createContext)({items:[],setItems:items=>{},onChange:(id,isChecked,groupId)=>{}}),CheckboxProvider=({children,onChange})=>{const[items,setItems]=(0,react.useState)([]),handleOnChange=(0,react.useCallback)(((id,isChecked,groupId)=>{"string"==typeof id&&setItems((prevItems=>{const obj={id,groupId,isChecked},existingItemIndex=prevItems.findIndex((item=>item.id===id&&item.groupId===groupId));return existingItemIndex>-1?prevItems[existingItemIndex]=obj:prevItems.push(obj),onChange&&onChange(prevItems),[...prevItems]}))}),[onChange]);return(0,jsx_runtime.jsxs)(CheckboxContext.Provider,{value:{onChange:handleOnChange,items,setItems},children:[children," "]})},useCheckbox=()=>{const ctx=(0,react.useContext)(CheckboxContext);if(!ctx)throw new Error("useCheckbox must be used within a CheckboxContextProvider");return{...ctx,onChange:(id,isChecked,groupId)=>{ctx?.onChange?.(id,isChecked,groupId)},addToList:(id,isChecked,groupId)=>{ctx?.onChange?.(id,isChecked,groupId)}}};var hooks_src=__webpack_require__("./packages/hooks/src/index.ts");const Indeterminate=({...props})=>(0,jsx_runtime.jsx)("span",{...props,children:(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"2",viewBox:"-1 0 12 3",fill:"none",className:"sui-checkbox__icon",children:(0,jsx_runtime.jsx)("path",{d:"M9.7 0H0.3C0.134315 0 0 0.134315 0 0.3V1.7C0 1.86569 0.134315 2 0.3 2H9.7C9.86569 2 10 1.86569 10 1.7V0.3C10 0.134315 9.86569 0 9.7 0Z",fill:"white"})})}),Tick=({...props})=>(0,jsx_runtime.jsx)("span",{...props,children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 12 10",fill:"none",className:"sui-checkbox__icon",children:(0,jsx_runtime.jsx)("path",{d:"M4.23784 9.08831L0.337838 5.16588C0.103533 4.93023 0.103533 4.54815 0.337838 4.31247L1.18635 3.45906C1.42065 3.22338 1.80057 3.22338 2.03488 3.45906L4.66211 6.10137L9.96507 0.91168C10.1994 0.676028 10.5793 0.676028 10.8136 0.91168L11.6621 1.76509C11.8964 2.00074 11.8964 2.38283 11.6621 2.6185L5.08637 9.08833C4.85205 9.32398 4.47215 9.32398 4.23784 9.08831Z"})})}),Checkbox=({id,groupId="",name,value="",label,isLabelHidden=!1,isChecked=!1,isDisabled=!1,isSmall=!1,isIndeterminate=!1,onChange:propOnchange=(e=>{})})=>{const ctx=useCheckbox(),[isHovered,isFocused,methods]=(0,hooks_src.X2)({});let uuid=`sui-checkbox-${(0,react.useId)()}`;id&&(uuid=id),(0,react.useEffect)((()=>{ctx?.addToList(id,isChecked,groupId)}),[id,groupId,isChecked]);const inputProps={id:uuid,type:"checkbox",name,value,className:"sui-screen-reader-only",checked:isChecked,disabled:isDisabled,onChange:e=>{ctx?.onChange&&ctx.onChange(uuid,e.target.checked,groupId),propOnchange&&propOnchange(e)},"aria-labelledby":`${uuid}-label`},containerProps={className:(0,src.uY)("sui-checkbox",{"hidden-label":isLabelHidden,indeterminate:isIndeterminate,hover:isHovered,focus:isFocused,disabled:isDisabled,checked:isChecked,sm:isSmall}),...methods},boxProps={className:"sui-checkbox__box","aria-hidden":!0};return(0,jsx_runtime.jsxs)("label",{...containerProps,htmlFor:uuid,tabIndex:-1,"data-testid":"checkbox",children:[(0,jsx_runtime.jsx)("input",{...inputProps,"aria-label":label||"checkbox","data-testid":"checkbox-input"}),isIndeterminate?(0,jsx_runtime.jsx)(Indeterminate,{...boxProps}):(0,jsx_runtime.jsx)(Tick,{...boxProps,tabIndex:-1}),isLabelHidden?(0,jsx_runtime.jsx)("span",{className:"sui-screen-reader-only",children:label}):label]})},_CheckboxGroupInner=props=>{const{hasSubItems,title,children,commonCheckboxProps,isInline}=props,[isFirstRender,setIsFirstRender]=(0,react.useState)(!0),{items,setItems,addToList}=useCheckbox(),uuid=(0,react.useId)(),id=`sui-checkbox-group-${uuid}`,className=(0,src.uY)("sui-checkbox__group",{nested:hasSubItems,inline:isInline}),group=items.filter((item=>item.groupId===id)),checkedItemsCount=group?.filter((i=>i.isChecked)).length,allChecked=checkedItemsCount===group.length,hasCheckedItems=checkedItemsCount>0,onCheckboxChange=(0,react.useCallback)((()=>{const toUpdate=[];items.forEach((item=>{item.groupId===id?toUpdate.push({...item,isChecked:!allChecked||!allChecked&&checkedItemsCount>0}):toUpdate.push(item)})),setItems([...toUpdate])}),[items,allChecked,checkedItemsCount,id,setItems]);return(0,react.useEffect)((()=>{setIsFirstRender(!1)}),[]),(0,jsx_runtime.jsxs)("div",{className,children:[hasSubItems&&(0,jsx_runtime.jsx)(Checkbox,{...commonCheckboxProps,id,label:title??"",isChecked:allChecked&&hasCheckedItems,onChange:onCheckboxChange,isIndeterminate:!!hasCheckedItems&&(hasCheckedItems&&!allChecked)}),(0,jsx_runtime.jsx)("div",{className:"sui-checkbox__group-body",children:react.Children.map(children,((child,index)=>{const chekboxInitialId=child?.props?.id,initialIsChecked=child?.props?.isChecked,checkboxId=chekboxInitialId||`sui-checkbox-item-${uuid}-${index}`,currItem=items.find((i=>i.id===checkboxId&&i.groupId===id));return(0,react.cloneElement)(child,{...commonCheckboxProps,id:checkboxId,...child?.props,groupId:id,isChecked:isFirstRender?initialIsChecked:!!currItem?.isChecked})}))})]})},CheckboxGroup=({children,title="",hasSubItems=!1,isInline=!1,commonCheckboxProps={},onChange=()=>{},_isMultiGroup=!1})=>((content=null)=>_isMultiGroup?content:(0,jsx_runtime.jsx)(CheckboxProvider,{onChange,children:content}))((0,jsx_runtime.jsx)(_CheckboxGroupInner,{title,commonCheckboxProps:commonCheckboxProps??{},hasSubItems:hasSubItems??!1,isInline:isInline??!1,children})),CheckBoxGroups=({children,commonCheckboxProps={},onChange=()=>{}})=>{const className=(0,src.uY)("sui-checkbox-wrapper",{});return(0,jsx_runtime.jsx)(CheckboxProvider,{onChange,children:(0,jsx_runtime.jsx)("div",{className,children:react.Children.map(children,(child=>(0,react.cloneElement)(child,{commonCheckboxProps:{...commonCheckboxProps,...child?.props?.commonCheckboxProps},_isMultiGroup:!0})))})})}},"./packages/utils/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{CI:()=>condContent,F3:()=>chunkArray,HD:()=>isString,Jw:()=>handleOnKeyDown,Kn:()=>isObject,c7:()=>capitalizeText,h4:()=>PluginsIcons,jn:()=>isBoolean,kJ:()=>isArray,mf:()=>isFunction,o8:()=>isUndefined,uY:()=>generateCN,wW:()=>handleEventDefault,xb:()=>isEmpty});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);__webpack_require__("./node_modules/@testing-library/react/dist/@testing-library/react.esm.js"),__webpack_require__("./node_modules/jest-axe/index.js"),__webpack_require__("./node_modules/process/browser.js");const generateCN=(base,variants={},extraClassNames="")=>{const classes=Object.keys(variants).map((attr=>({[`${base}--${attr}`]:!!variants?.[attr]})));return classnames__WEBPACK_IMPORTED_MODULE_0___default()(base,classes,extraClassNames)},condContent=(condition,content=null,fallback=void 0)=>(isNull(content)&&(content=condition),condition?content:fallback),isNull=value=>null===value,isUndefined=value=>void 0===value,isObject=value=>"object"==typeof value&&!Array.isArray(value),isArray=value=>Array.isArray(value),isBoolean=value=>"boolean"==typeof value,isFunction=value=>"function"==typeof value,isString=value=>"string"==typeof value,isEmpty=value=>""===value,capitalizeText=string=>string?.charAt(0)?.toUpperCase()+string?.slice(1),handleOnKeyDown=(event,callback)=>{"Enter"!==event.key&&" "!==event.key||callback&&callback(event)},handleEventDefault=(e,stopPropagation,preventDefault)=>{stopPropagation&&e?.stopPropagation(),preventDefault&&e?.preventDefault()},PluginsIcons={smush:{bg:"#2dc4e0",color:"#FFF",icon:"PluginSmush"},defender:{bg:"#282a2c",color:"#FFF",icon:"PluginDefender"},snapshot:{bg:"#1a325e",color:"#FFF",icon:"PluginSnapshot"},hummingbird:{bg:"#ff8e3c",color:"#FFF",icon:"PluginHummingbird"},forminator:{bg:"#1f2852",color:"#FFF",icon:"PluginForminator"},beehive:{bg:"#013aa9",color:"#FFF",icon:"PluginBeehive"},hustle:{bg:"#1a1a1a",color:"#FFF",icon:"PluginHustle"},smartcrawl:{bg:"#de240a",color:"#FFF",icon:"PluginSmartcrawl"},shipper:{bg:"#7b5499",color:"#FFF",icon:"PluginShipper"},branda:{bg:"#ff8184",color:"#FFF",icon:"PluginBranda"}},chunkArray=(arr,size)=>{const chunkedArray=[];for(let i=0;i<arr.length;i+=size){const chunk=arr.slice(i,i+size);chunkedArray.push(chunk)}return chunkedArray}},"./node_modules/dedent/dist/dedent.js":module=>{"use strict";module.exports=function dedent(strings){var raw=void 0;raw="string"==typeof strings?[strings]:strings.raw;for(var result="",i=0;i<raw.length;i++)result+=raw[i].replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`"),i<(arguments.length<=1?0:arguments.length-1)&&(result+=arguments.length<=i+1?void 0:arguments[i+1]);var lines=result.split("\n"),mindent=null;return lines.forEach((function(l){var m=l.match(/^(\s+)\S+/);if(m){var indent=m[1].length;mindent=mindent?Math.min(mindent,indent):indent}})),null!==mindent&&(result=lines.map((function(l){return" "===l[0]?l.slice(mindent):l})).join("\n")),(result=result.trim()).replace(/\\n/g,"\n")}},"?4f7e":()=>{}}]);
//# sourceMappingURL=ui-checkbox-stories-checkbox-stories.8711b4c7.iframe.bundle.js.map