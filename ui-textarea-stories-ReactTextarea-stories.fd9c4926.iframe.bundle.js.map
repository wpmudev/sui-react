{"version":3,"file":"ui-textarea-stories-ReactTextarea-stories.fd9c4926.iframe.bundle.js","mappings":";;;;;;;AAiBA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;AAQA;;;;;;;ACxBA;;;;;;;ACEA","sources":["webpack://@wpmudev/sui-react/./packages/ui/textarea/stories/tabs/Examples/States.mdx","webpack://@wpmudev/sui-react/./packages/ui/textarea/stories/tabs/Examples/Size.mdx","webpack://@wpmudev/sui-react/./packages/ui/textarea/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Textarea} from '../../../src';\nimport dedent from 'dedent';\nexport const DisabledTextareaCode = dedent`\nimport React from 'react';\\n\nimport { Textarea } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"textarea-id-1\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" isDisabled={true} />;\n}\\n\nexport default Example;\n`;\nexport const ValueEnteredTextareaCode = dedent`\nimport React from 'react';\\n\nimport { Textarea } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"textarea-id-1\" value=\"Default\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nexport const ReadOnlyTextareaCode = dedent`\nimport React from 'react';\\n\nimport { Textarea } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"textarea-id-1\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" readonly=\"true\" />;\n}\\n\nexport default Example;\n`;\nexport const ErrorTextareaCode = dedent`\nimport React from 'react';\\n\nimport { Textarea } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"textarea-id-1\" errorId=\"error-id\" errorMessage=\"There is an error.\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Disabled\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isDisabled\"\n          }), \" prop to disable a Textarea\\nthat is not usable.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Textarea, {\n          id: \"textarea-id-1\",\n          description: \"This is a description.\",\n          descriptionId: \"desc-id-1\",\n          placeholder: \"Placeholder\",\n          isDisabled: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: DisabledTextareaCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Value Entered\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"value\"\n          }), \" prop to Textarea to set it's value.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Textarea, {\n          id: \"textarea-id-2\",\n          value: \"Default\",\n          description: \"This is a description.\",\n          descriptionId: \"desc-id-2\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ValueEnteredTextareaCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Read Only\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Add the \", _jsx(Code, {\n            small: true,\n            children: \"readOnly\"\n          }), \" prop to set Textarea readonly.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Textarea, {\n          id: \"textarea-id-3\",\n          description: \"This is a description.\",\n          descriptionId: \"desc-id-3\",\n          placeholder: \"Placeholder\",\n          readOnly: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ReadOnlyTextareaCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Error\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"errorMessage\"\n          }), \" prop to show the error in\\nthe field.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Textarea, {\n          id: \"textarea-id-4\",\n          errorId: \"error-id-1\",\n          errorMessage: \"There is an error.\",\n          description: \"This is a description.\",\n          descriptionId: \"desc-id-4\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ErrorTextareaCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from '@wpmudev/sui-docs';\nimport {Textarea} from '../../../src';\nimport dedent from 'dedent';\nexport const SmallTextareaCode = dedent`\nimport React from 'react';\\n\nimport { Button } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"textarea-id-4\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" isSmall={true} />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(Section, {\n    title: \"Small\",\n    contained: true,\n    style: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0\n    },\n    children: [_jsx(\"p\", {\n      children: _jsxs(_components.p, {\n        children: [\"Set the \", _jsx(Code, {\n          small: true,\n          children: \"isSmall\"\n        }), \" prop to reduce the textarea\\nheight, fitting with the design context.\"]\n      })\n    }), _jsx(Preview, {\n      wrapper: true,\n      children: _jsx(Textarea, {\n        id: \"textarea-id-4\",\n        placeholder: \"Placeholder\",\n        description: \"This is a description.\",\n        descriptionId: \"desc-id\",\n        isSmall: true\n      })\n    }), _jsx(Snippet, {\n      language: \"js\",\n      children: SmallTextareaCode\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from '@wpmudev/sui-docs';\nimport {Textarea} from '../../src';\nimport dedent from 'dedent';\nimport States from './Examples/States.mdx';\nimport Size from './Examples/Size.mdx';\nexport const sampleCode = dedent`\nimport React from 'react';\\n\nimport { Textarea } from '@wpmudev/sui-react';\\n\nconst Example() => {\n\treturn <Textarea id=\"input-id-1\" description=\"This is a description.\" descriptionId=\"desc-id\" placeholder=\"Placeholder\" />;\n}\\n\nexport default Example;\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default form of a field, used for most cases.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Textarea, {\n          id: \"input-id-1\",\n          description: \"This is a description.\",\n          descriptionId: \"desc-id\",\n          placeholder: \"Placeholder\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"States\",\n          value: \"states\",\n          children: _jsx(States, {})\n        }), _jsx(\"div\", {\n          label: \"Size\",\n          value: \"size\",\n          children: _jsx(Size, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}