{"version":3,"file":"ui-recipient-stories-ReactRecipient-stories.190b97c1.iframe.bundle.js","mappings":";;;;;;AAgBA;;;;;;AAOA;;;;;;AAOA;;;;;;AAOA;;ACxBA;;AAGA;;;;;;ACAA;;;;;;AAOA;;;;;;AAOA;;;;;;AAOA;;;;;;ACjBA","sources":["webpack://wpmudev-sui/./packages/ui/recipient/stories/tabs/Examples/Status.mdx","webpack://wpmudev-sui/./packages/ui/recipient/stories/tabs/Examples/Types.mdx","webpack://wpmudev-sui/./packages/ui/recipient/stories/tabs/Examples/Appearance.mdx","webpack://wpmudev-sui/./packages/ui/recipient/stories/tabs/TabExamples.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Recipient} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const ConfirmedRecipientCode = dedent`\n    <Recipient\n        status=\"confirmed\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const NotAcceptedCode = dedent`\n    <Recipient\n        status=\"not-accepted\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const NotConnectedCode = dedent`\n    <Recipient\n        status=\"not-connected\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const InvitedRecipientCode = dedent`\n    <Recipient\n        isInvited={true}\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Section, {\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: _jsxs(_components.p, {\n        children: [\"To change the recipient status use the prop \", _jsx(Code, {\n          small: true,\n          children: \"status\"\n        })]\n      })\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Confirmed\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          status: \"confirmed\",\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ConfirmedRecipientCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Not Accepted\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\",\n          status: \"not-accepted\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NotAcceptedCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Not Connected\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\",\n          status: \"not-connected\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: NotConnectedCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Invited\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Set the \", _jsx(Code, {\n            small: true,\n            children: \"isInvited\"\n          }), \" prop to\\n\", _jsx(Code, {\n            small: true,\n            children: \"true\"\n          }), \" to change the recipient state to be \\\"invited\\\"\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\",\n          isInvited: true\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: InvitedRecipientCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Recipient} from \"../../../src\";\nimport image from \"../../images/person.png\";\nimport dedent from \"dedent\";\nexport const IconRecipientCode = dedent`\n<Recipient userName=\"Recipient name\" userEmail=\"email@example.com\" />;\n`;\nexport const ImageRecipientCode = dedent`\n<Recipient image={{ src: \"{IMAGE LINK GOES HERE}\", alt: '{IMAGE ALT TEXT}' }} />;\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Icon\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"This is the default state of the avatar\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: IconRecipientCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Image\",\n      contained: true,\n      style: {\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(Code, {\n            small: true,\n            children: \"userImage\"\n          }), \" prop to show an image instead.\"]\n        })\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\",\n          userImage: {\n            src: image,\n            alt: \"image-alt\"\n          }\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ImageRecipientCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Preview, Snippet, Code} from \"@wpmudev/sui-docs\";\nimport {Recipient} from \"../../../src\";\nimport dedent from \"dedent\";\nexport const ConfirmedRecipientCode = dedent`\n    <Recipient\n        status=\"confirmed\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const NotAcceptedCode = dedent`\n    <Recipient\n        status=\"not-accepted\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const NotConnectedCode = dedent`\n    <Recipient\n        status=\"not-connected\"\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nexport const InvitedRecipientCode = dedent`\n    <Recipient\n        isInvited={true}\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      title: \"Primary\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Primary is the default of the recipient\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          appearance: \"primary\",\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ConfirmedRecipientCode\n      })]\n    }), \"\\n\", _jsxs(Section, {\n      title: \"Secondary\",\n      contained: true,\n      border: true,\n      style: {\n        paddingRight: 0,\n        paddingLeft: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"There's also a secondary theme\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          appearance: \"secondary\",\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: ConfirmedRecipientCode\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/govind/Development/SUI Development/sui-react/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Section, Switcher, Preview, Snippet} from \"@wpmudev/sui-docs\";\nimport {Recipient} from \"../../src\";\nimport dedent from \"dedent\";\nimport Status from \"./Examples/Status.mdx\";\nimport Types from \"./Examples/Types.mdx\";\nimport Appearance from \"./Examples/Appearance.mdx\";\nimport image from \"../images/person.png\";\nexport const sampleCode = dedent`\n    <Recipient\n        userImage={{ src: {your image url}, alt: \"User Image\" }}\n        userName=\"Recipient name\"\n        userEmail=\"email@example.com\"\n    />\n`;\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Section, {\n      contained: true,\n      style: {\n        paddingTop: 0\n      },\n      children: [_jsx(\"p\", {\n        children: \"Below is the default form of a recipient, used for most cases.\"\n      }), _jsx(Preview, {\n        wrapper: true,\n        children: _jsx(Recipient, {\n          userImage: {\n            src: image,\n            alt: \"User Image\"\n          },\n          userName: \"Recipient name\",\n          userEmail: \"email@example.com\"\n        })\n      }), _jsx(Snippet, {\n        language: \"js\",\n        children: sampleCode\n      })]\n    }), \"\\n\", _jsx(Section, {\n      style: {\n        paddingTop: 0\n      },\n      children: _jsxs(Switcher, {\n        children: [_jsx(\"div\", {\n          label: \"Appearance\",\n          value: \"appearance\",\n          children: _jsx(Appearance, {})\n        }), _jsx(\"div\", {\n          label: \"Types\",\n          value: \"types\",\n          children: _jsx(Types, {})\n        }), _jsx(\"div\", {\n          label: \"Status\",\n          value: \"status\",\n          children: _jsx(Status, {})\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}