{"version":3,"file":"ui-sidebar-stories-sidebar-stories.274fafb8.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA","sources":["webpack://@wpmudev/sui-react/./packages/ui/sidebar/stories/tabs/Examples/GeneralSidebar.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Sidebar, SidebarItem, SidebarDropdown } from \"../../../src\"\nimport { BoxGroup } from \"@wpmudev/sui-box\"\nimport { Col, Row } from \"@wpmudev/sui-grid\"\nimport { Tag } from \"@wpmudev/sui-tag\"\nimport dedent from \"dedent\"\n\nexport const GeneralSidebarCode = dedent`\n\nimport React, { useState } from \"react\"\nimport { Sidebar, SidebarItem } from \"@wpmudev/sui-sidebar\"\nimport { BoxGroup } from \"@wpmudev/sui-box\"\nimport { Col, Row } from \"@wpmudev/sui-grid\"\nimport { Tag } from \"@wpmudev/sui-tag\"\n\nconst tag = (\n    <Tag color=\"black\" design=\"outlined\" isSmall={true}>\n       PRO\n    </Tag>\n)\n\nconst items = [\n    { title: \"General\", url: \"#\", icon: \"Settings\" },\n    { title: \"Integrations\", url: \"#\", icon: \"Link\" },\n    { title: \"Configs\", icon: \"Bell\", url: \"#\", action: tag },\n    {\n        title: \"Data\",\n        url: \"#\",\n        icon: \"Bell\",\n        isDisabled: true,\n        action: tag,\n\t},\n]\n\nexport const BasicSidebar = () => {\n    const [selectedItem, setSelectedItem] = useState(\"Integrations\")\n\n    return (\n        <BoxGroup>\n            <Row align={{ md: \"inline\" }}>\n                <Col size=\"3\">\n                    <Sidebar>\n                       {items.map(({ title, url, icon, isDisabled, action }) => (\n                           <SidebarItem\n                               key={title}\n                               title={title}\n                               action={action}\n                               url={url}\n                               icon={icon}\n                               isDisabled={isDisabled}\n                               onClick={() => setSelectedItem(title)}\n                           />\n                        ))}\n                    </Sidebar>\n                    <SidebarDropdown selectedItemName={selectedItem}>\n                        {items.map(({ title, url, icon, isDisabled, action }) => (\n                            <SidebarItem\n                                key={title}\n                                title={title}\n                                action={action}\n                                url={url}\n                                icon={icon}\n                                isDisabled={isDisabled}\n                                onClick={() => setSelectedItem(title)}\n                            />\n                        ))}\n                    </SidebarDropdown>\n                </Col>\n                <Col\n                    size=\"9\"\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                     {selectedItem}\n                </Col>\n            </Row>\n       </BoxGroup>\n    )\n}\n`\n\nconst tag = (\n\t<Tag color=\"black\" design=\"outlined\" isSmall={true}>\n\t\tPRO\n\t</Tag>\n)\n\nconst items = [\n\t{ title: \"General\", url: \"#\", icon: \"Settings\" },\n\t{ title: \"Integrations\", url: \"#\", icon: \"Link\" },\n\t{ title: \"Configs\", icon: \"Bell\", url: \"#\", action: tag },\n\t{\n\t\ttitle: \"Data\",\n\t\turl: \"#\",\n\t\ticon: \"Bell\",\n\t\tisDisabled: true,\n\t\taction: tag,\n\t},\n]\n\nexport const BasicSidebar = () => {\n\tconst [selectedItem, setSelectedItem] = useState(\"Integrations\")\n\n\treturn (\n\t\t<BoxGroup>\n\t\t\t<Row align={{ md: \"inline\" }}>\n\t\t\t\t<Col size=\"3\">\n\t\t\t\t\t<Sidebar>\n\t\t\t\t\t\t{items.map(({ title, url, icon, isDisabled, action }) => (\n\t\t\t\t\t\t\t<SidebarItem\n\t\t\t\t\t\t\t\tkey={title}\n\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\taction={action}\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\t\t\tisDisabled={isDisabled}\n\t\t\t\t\t\t\t\tonClick={() => setSelectedItem(title)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Sidebar>\n\t\t\t\t\t<SidebarDropdown selectedItemName={selectedItem}>\n\t\t\t\t\t\t{items.map(({ title, url, icon, isDisabled, action }) => (\n\t\t\t\t\t\t\t<SidebarItem\n\t\t\t\t\t\t\t\tkey={title}\n\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\taction={action}\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\t\t\tisDisabled={isDisabled}\n\t\t\t\t\t\t\t\tonClick={() => setSelectedItem(title)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</SidebarDropdown>\n\t\t\t\t</Col>\n\t\t\t\t<Col size=\"9\">{selectedItem}</Col>\n\t\t\t</Row>\n\t\t</BoxGroup>\n\t)\n}\n"],"names":[],"sourceRoot":""}