"use strict";(self.webpackChunkwpmudev_sui=self.webpackChunkwpmudev_sui||[]).push([[6431],{"./packages/ui/field-list/stories/ReactFieldList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FieldList:()=>ReactFieldList_stories_FieldList,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ReactFieldList_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/hooks/src/index.ts"),utils_src=__webpack_require__("./packages/utils/src/index.ts");const FieldList=({label,helper,children,spacing="",onToggle=()=>null,_style})=>{const{suiInlineClassname}=(0,src.IS)(_style),onChangeItem=(0,react.useCallback)(((id,checked)=>{onToggle(id,checked)}),[onToggle]);children=(0,src.Q8)(children,(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"{field List children content}"}));let styles={};return spacing&&(styles={padding:spacing}),(0,jsx_runtime.jsxs)("div",{className:(0,utils_src.n0)("sui-field-list",{},suiInlineClassname),"data-testid":"field-list",children:[(label||helper)&&(0,jsx_runtime.jsxs)("div",{className:"sui-field-list__row",style:styles,children:[label&&(0,jsx_runtime.jsx)("h3",{className:"sui-heading sui-heading--h4 sui-field-list__title",children:label}),helper&&(0,jsx_runtime.jsx)("p",{className:"sui-field-list__helper",children:helper})]}),(0,jsx_runtime.jsx)("div",{className:"sui-field-list__items",children:react.Children.map(children,(child=>(0,react.cloneElement)(child,{onToggle:onChangeItem,style:styles})))})]})};var toggle_src=__webpack_require__("./packages/ui/toggle/src/index.ts");const FieldListItem=({id,isChecked=!1,children,hasToggle=!0,actions,onToggle,_htmlProps={},style,_style,...props})=>{const uniqueId=(0,react.useId)();id||(id=`sui-field-list-${uniqueId}`),children=(0,src.Q8)(children,"{field list item content}");const onChange=(0,react.useCallback)((e=>{onToggle&&onToggle(id,e?.target?.checked)}),[id,onToggle]),{suiInlineClassname}=(0,src.IS)(_style);return(0,jsx_runtime.jsxs)("div",{className:(0,utils_src.n0)("sui-field-list__item",{disabled:props?.isDisabled},suiInlineClassname),style,"data-testid":"field-list-item",...(0,utils_src.EX)(_htmlProps),children:[(0,jsx_runtime.jsx)("div",{className:"sui-field-list__item-label",children}),hasToggle&&(0,jsx_runtime.jsx)("div",{className:"sui-field-list__item-checkbox",children:(0,jsx_runtime.jsx)(toggle_src.l,{id,label:children,isLabelHidden:!0,defaultValue:isChecked??!1,onClick:onChange,...props})}),!!actions&&(0,jsx_runtime.jsx)("div",{className:"sui-field-list__item-actions",children:actions})]})};var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),docs_src=__webpack_require__("./packages/docs/src/index.ts"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const anatomy_namespaceObject=__webpack_require__.p+"static/media/anatomy.766bd865.svg",spacings_namespaceObject=__webpack_require__.p+"static/media/spacings.fde52a5a.svg";function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(docs_src.wn,{title:"Anatomy",style:{paddingTop:20},children:[(0,jsx_runtime.jsx)("img",{src:anatomy_namespaceObject,alt:"Field List Anatomy",style:{marginBottom:20}}),(0,jsx_runtime.jsx)("h3",{style:{marginTop:0},children:"1. Header"}),(0,jsx_runtime.jsx)("p",{children:"The header includes the title and supportive description."}),(0,jsx_runtime.jsx)("h3",{children:"2. Feature List"}),(0,jsx_runtime.jsx)("p",{children:"List of features that include toggle switch on each list item."})]}),"\n",(0,jsx_runtime.jsx)(docs_src.wn,{title:"Spacings",border:!0,children:(0,jsx_runtime.jsx)("img",{src:spacings_namespaceObject,alt:"Field List Spacings"})})]})}const TabUsage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent()};function TabCode_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src._3,{packageName:"@wpmudev/sui-field-list"}),"\n",(0,jsx_runtime.jsxs)(docs_src.wn,{title:"Props",border:!0,children:[(0,jsx_runtime.jsx)(docs_src.hz,{title:"label",type:"string",children:(0,jsx_runtime.jsx)("p",{children:"Represents the title of the Field List"})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"helper",type:"string",children:(0,jsx_runtime.jsx)("p",{children:"Represents the helper text"})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"children",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:"The content of the Field List"})}),(0,jsx_runtime.jsxs)(docs_src.hz,{title:"onToggle",type:"function",children:[(0,jsx_runtime.jsx)("p",{children:"A callback function to be invoked when one of the fields state changes, it has two parameters:"}),(0,jsx_runtime.jsxs)(docs_src.B8,{children:[(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Cy,{small:!0,children:"id"})," id of the switched toggle"]})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Cy,{small:!0,children:"checked"})," a boolean value indicating the new state of the changed toggle"]})})]})]})]}),"\n",(0,jsx_runtime.jsxs)(docs_src.wn,{title:"Sub Components",contained:!0,style:{paddingTop:30,paddingBottom:0},children:[(0,jsx_runtime.jsxs)("p",{children:["The ",(0,jsx_runtime.jsx)(docs_src.Cy,{small:!0,children:" FieldList "})," offers a collection of nested subcomponents to be utilized within it. These subcomponents include:"]}),(0,jsx_runtime.jsxs)(docs_src.wn,{title:"FieldListItem",contained:!0,style:{paddingTop:0,paddingLeft:20,paddingRight:0},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"This component represents an individual item in the Field List and it has the following properties:"})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"id",type:"string",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"A unique identifier for the item"})})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"children",type:"React Node",children:(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"The content of the item, usually a string"})})}),(0,jsx_runtime.jsxs)(docs_src.hz,{title:"onToggle",type:"function",children:[(0,jsx_runtime.jsx)("p",{children:"A callback function to be invoked when one of the fields state changes, it has two parameters:"}),(0,jsx_runtime.jsxs)(docs_src.B8,{children:[(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Cy,{small:!0,children:"id*"})," id of the switched toggle"]})}),(0,jsx_runtime.jsx)("span",{label:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(docs_src.Cy,{small:!0,children:"checked*"})," A boolean value indicating the new state of the changed toggle"]})})]})]}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"isChecked",type:"boolean",defaultValue:"false",children:(0,jsx_runtime.jsx)("p",{children:"The state of the toggle"})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"hasToggle",type:"boolean",defaultValue:"true",children:(0,jsx_runtime.jsx)("p",{children:"Whether the item has a toggle or not"})}),(0,jsx_runtime.jsx)(docs_src.hz,{title:"actions",type:"Ract Node",children:(0,jsx_runtime.jsx)("p",{children:"Custom actions for the item"})})]})]})]})}const TabCode=function TabCode_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabCode_createMdxContent,props)})):TabCode_createMdxContent(props)};var dedent=__webpack_require__("./node_modules/dedent/dist/dedent.js");const sampleCode=__webpack_require__.n(dedent)()`
        <FieldList
            label="The Filed List Title"
            helper="Help text goes here"
            onToggle={(id, checked) => {
                // Do something with the "id" and "cehcked"
                console.log(id, checked)
            }}
        >
            <FieldListItem id="field-1" isChecked={false}>
                Field 1
            </FieldListItem>

           <FieldListItem id="field-2">Field 2</FieldListItem>
              <FieldListItem id="field-3" isChecked={true}>
                Field 3
              </FieldListItem>
           <FieldListItem id="field-4">Field 4</FieldListItem>
        </FieldList>
`;function TabExamples_createMdxContent(props){const _components=Object.assign({p:"p"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(docs_src.wn,{contained:!0,style:{paddingTop:30},children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)(_components.p,{children:"This is a general example of the Field List which you can tweak to fit your\nneeds"})}),(0,jsx_runtime.jsx)(docs_src.lN,{wrapper:!0,children:(0,jsx_runtime.jsxs)(FieldList,{label:"The Filed List Title",helper:"Help text goes here",onToggle:(id,checked)=>{console.log(id,checked)},children:[(0,jsx_runtime.jsx)(FieldListItem,{id:"field-1",isChecked:!1,children:(0,jsx_runtime.jsx)(_components.p,{children:"Field 1"})}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-2",children:"Field 2"}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-3",isChecked:!0,children:(0,jsx_runtime.jsx)(_components.p,{children:"Field 3"})}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-4",children:"Field 4"})]})}),(0,jsx_runtime.jsx)(docs_src.YK,{language:"js",children:sampleCode})]})}const TabExamples=function TabExamples_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(TabExamples_createMdxContent,props)})):TabExamples_createMdxContent(props)};function ReactFieldList_createMdxContent(props){return docs_src.YW||_missingMdxReference("Page",!1),docs_src.YW.Tabs||_missingMdxReference("Page.Tabs",!0),(0,jsx_runtime.jsx)(dist.di,{children:(0,jsx_runtime.jsxs)(docs_src.YW.Tabs,{title:"Field List",subtitle:"This component is to display the list of features to enable or disable.",status:"ready",children:[(0,jsx_runtime.jsx)("div",{id:"usage",label:"Usage",children:(0,jsx_runtime.jsx)(TabUsage,{})}),(0,jsx_runtime.jsx)("div",{id:"code",label:"Code",children:(0,jsx_runtime.jsx)(TabCode,{})}),(0,jsx_runtime.jsx)("div",{id:"examples",label:"Examples",children:(0,jsx_runtime.jsx)(TabExamples,{})})]})})}function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}const ReactFieldList_stories={title:"SUI/Components/Advanced/Field List",component:FieldList,parameters:{layout:"fullscreen",docs:{page:function ReactFieldList_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(ReactFieldList_createMdxContent,props)})):ReactFieldList_createMdxContent()}}}},ReactFieldList_stories_FieldList=({...args})=>{const[list,setList]=(0,react.useState)({});return(0,jsx_runtime.jsx)("div",{className:"sui-layout sui-layout--horizontal sui-layout--vertical",children:(0,jsx_runtime.jsx)("div",{className:"sui-layout__content",children:(0,jsx_runtime.jsxs)(FieldList,{...args,onToggle:(id,checked)=>{setList({...list,[id]:checked})},children:[(0,jsx_runtime.jsx)(FieldListItem,{id:"field-1",isChecked:!1,children:"Field 1"}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-2",children:"Field 2"}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-3",isChecked:!0,children:"Field 3"}),(0,jsx_runtime.jsx)(FieldListItem,{id:"field-4",children:"Field 4"})]})})})};ReactFieldList_stories_FieldList.args={label:"This is the title",helper:"This is example the description for field list."},ReactFieldList_stories_FieldList.argTypes={label:{name:"Label"},helper:{name:"Helper Text"}};const __namedExportsOrder=["FieldList"]},"./packages/ui/toggle/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>Toggle});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./packages/hooks/src/index.ts"),utils_src=__webpack_require__("./packages/utils/src/index.ts");const Toggle=({label,description,defaultValue=!1,isLabelHidden=!1,isDisabled=!1,onClick,_htmlProps={},_style={},...props})=>{const id=`sui-toggle-${(0,react.useId)()}`,[state,setState]=(0,react.useState)(defaultValue),[isHovered,isFocused,methods]=(0,src.Mj)({onMouseEnter:props?.onMouseEnter,onMouseLeave:props?.onMouseLeave,onMouseDownCapture:props?.onMouseDownCapture,onBlur:props?.onBlur,onBlurCapture:props?.onBlurCapture});(0,react.useEffect)((()=>{(0,utils_src.Lm)(defaultValue)||setState(defaultValue??!1)}),[defaultValue]);const handleOnChange=(0,react.useCallback)((e=>{setState(!state),onClick&&onClick(e)}),[onClick,state]),{suiInlineClassname}=(0,src.IS)(_style),containerProps={className:(0,utils_src.n0)("sui-toggle",{"hidden-label":isLabelHidden,checked:state,disabled:isDisabled,hover:!state&&isHovered,focus:!state&&isFocused,"checked-hover":state&&isHovered,"checked-focus":state&&isFocused},suiInlineClassname),...methods},inputProps={type:"checkbox",className:"sui-screen-reader-only",defaultChecked:state,disabled:isDisabled,...props};return(0,jsx_runtime.jsxs)("label",{...containerProps,htmlFor:id,"data-testid":"toggle",children:[(0,jsx_runtime.jsx)("input",{...inputProps,id,onChange:handleOnChange,...(0,utils_src.EX)(_htmlProps)}),(0,jsx_runtime.jsx)("span",{tabIndex:-1,className:"sui-toggle__switch","aria-hidden":!0}),isLabelHidden&&(0,jsx_runtime.jsx)("span",{className:"sui-screen-reader-only",children:label}),!isLabelHidden&&(0,jsx_runtime.jsx)("span",{className:"sui-toggle__label","data-testid":"toggle-label",children:label}),description&&(0,jsx_runtime.jsx)("p",{className:"sui-toggle__description","data-testid":"toggle-description",children:description})]})}}}]);
//# sourceMappingURL=ui-field-list-stories-ReactFieldList-stories.7c3cfe05.iframe.bundle.js.map